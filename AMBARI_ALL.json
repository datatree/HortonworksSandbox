{
  "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox",
  "Clusters" : {
    "cluster_id" : 2,
    "cluster_name" : "Sandbox",
    "health_report" : {
      "Host/stale_config" : 1,
      "Host/maintenance_state" : 1,
      "Host/host_state/HEALTHY" : 1,
      "Host/host_state/UNHEALTHY" : 0,
      "Host/host_state/HEARTBEAT_LOST" : 0,
      "Host/host_state/INIT" : 0,
      "Host/host_status/HEALTHY" : 0,
      "Host/host_status/UNHEALTHY" : 0,
      "Host/host_status/UNKNOWN" : 0,
      "Host/host_status/ALERT" : 1
    },
    "provisioning_state" : "INSTALLED",
    "security_type" : "NONE",
    "total_hosts" : 1,
    "version" : "HDP-2.5",
    "credential_store_properties" : {
      "storage.persistent" : "false",
      "storage.temporary" : "true"
    },
    "desired_configs" : {
      "admin-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "admin-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "admin-topology" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-grafana-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-grafana-ini" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-hbase-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-hbase-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-hbase-policy" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-hbase-security-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-hbase-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-ssl-client" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ams-ssl-server" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "application-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "atlas-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "atlas-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "atlas-solrconfig" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "beeline-log4j2" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "capacity-scheduler" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "cluster-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "core-site" : {
        "tag" : "version1518207504267",
        "user" : "admin",
        "version" : 3
      },
      "falcon-atlas-application.properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "falcon-client.properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "falcon-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "falcon-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "falcon-runtime.properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "falcon-startup.properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "flume-conf" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "flume-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "gateway-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "gateway-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hadoop-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hadoop-policy" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hbase-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hbase-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hbase-policy" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hbase-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hcat-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hdfs-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hdfs-site" : {
        "tag" : "version1518207504267",
        "user" : "admin",
        "version" : 3
      },
      "hive-atlas-application.properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hive-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hive-exec-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hive-exec-log4j2" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hive-interactive-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hive-interactive-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hive-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hive-log4j2" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hive-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hivemetastore-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hiveserver2-interactive-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "hiveserver2-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "infra-solr-client-log4j" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "infra-solr-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "infra-solr-log4j" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "infra-solr-xml" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "kafka-broker" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "kafka-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "kafka-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "knox-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "knoxsso-topology" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ldap-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "livy-conf" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "livy-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "livy-log4j-properties" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "livy-spark-blacklist" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "llap-cli-log4j2" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "llap-daemon-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "mapred-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "mapred-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "oozie-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "oozie-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "oozie-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "pig-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "pig-log4j" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "pig-properties" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "ranger-admin-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-atlas-audit" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-atlas-plugin-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-atlas-policymgr-ssl" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-atlas-security" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hbase-audit" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hbase-plugin-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hbase-policymgr-ssl" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hbase-security" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hdfs-audit" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hdfs-plugin-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hdfs-policymgr-ssl" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hdfs-security" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hive-audit" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hive-plugin-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hive-policymgr-ssl" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-hive-security" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-kafka-audit" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-kafka-plugin-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-kafka-policymgr-ssl" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-kafka-security" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-knox-audit" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-knox-plugin-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-knox-policymgr-ssl" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-knox-security" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-storm-audit" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-storm-plugin-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-storm-policymgr-ssl" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-storm-security" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-tagsync-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-ugsync-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-yarn-audit" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-yarn-plugin-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-yarn-policymgr-ssl" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ranger-yarn-security" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "slider-client" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "slider-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "slider-log4j" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark-defaults" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark-hive-site-override" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark-javaopts-properties" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark-log4j-properties" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark-metrics-properties" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark-thrift-fairscheduler" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark-thrift-sparkconf" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark2-defaults" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark2-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark2-hive-site-override" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark2-log4j-properties" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark2-metrics-properties" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark2-thrift-fairscheduler" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "spark2-thrift-sparkconf" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "sqoop-atlas-application.properties" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "sqoop-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "sqoop-site" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "ssl-client" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "ssl-server" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "storm-atlas-application.properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "storm-cluster-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "storm-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "storm-site" : {
        "tag" : "version1518207504267",
        "user" : "admin",
        "version" : 3
      },
      "storm-worker-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "tagsync-application-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "tagsync-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "tez-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "tez-interactive-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "tez-site" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "topology" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "users-ldif" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "usersync-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "usersync-properties" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "vnc-config" : {
        "tag" : "version1518208266271",
        "user" : "admin",
        "version" : 2
      },
      "vnc-env" : {
        "tag" : "version1518208266271",
        "user" : "admin",
        "version" : 2
      },
      "webhcat-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "webhcat-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "webhcat-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "yarn-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "yarn-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "yarn-site" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "zeppelin-config" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "zeppelin-env" : {
        "tag" : "INITIAL",
        "user" : "admin",
        "version" : 1
      },
      "zoo.cfg" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "zookeeper-env" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      },
      "zookeeper-log4j" : {
        "tag" : "TOPOLOGY_RESOLVED",
        "user" : "admin",
        "version" : 2
      }
    },
    "desired_service_config_versions" : {
      "AMBARI_INFRA" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "AMBARI_INFRA",
          "service_config_version" : 1,
          "createtime" : 1477380373507,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "AMBARI_METRICS" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "AMBARI_METRICS",
          "service_config_version" : 2,
          "createtime" : 1477380380420,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "ATLAS" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "ATLAS",
          "service_config_version" : 2,
          "createtime" : 1477380379744,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "FALCON" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "FALCON",
          "service_config_version" : 2,
          "createtime" : 1477380380744,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "FLUME" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "FLUME",
          "service_config_version" : 1,
          "createtime" : 1477380375388,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "HBASE" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "HBASE",
          "service_config_version" : 2,
          "createtime" : 1477380378704,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "HDFS" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "HDFS",
          "service_config_version" : 3,
          "createtime" : 1518207504703,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "service_config_version_note" : "",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "HIVE" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "HIVE",
          "service_config_version" : 2,
          "createtime" : 1477380380158,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "KAFKA" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "KAFKA",
          "service_config_version" : 2,
          "createtime" : 1477380380593,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "KNOX" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "KNOX",
          "service_config_version" : 2,
          "createtime" : 1477380379161,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "MAPREDUCE2" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "MAPREDUCE2",
          "service_config_version" : 2,
          "createtime" : 1477380378535,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "OOZIE" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "OOZIE",
          "service_config_version" : 2,
          "createtime" : 1477380378496,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "PIG" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "PIG",
          "service_config_version" : 1,
          "createtime" : 1477380369438,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "RANGER" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "RANGER",
          "service_config_version" : 2,
          "createtime" : 1477380379589,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "SLIDER" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "SLIDER",
          "service_config_version" : 1,
          "createtime" : 1477380373118,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "SPARK" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "SPARK",
          "service_config_version" : 1,
          "createtime" : 1477380368182,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "SPARK2" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "SPARK2",
          "service_config_version" : 1,
          "createtime" : 1477380376546,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "SQOOP" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "SQOOP",
          "service_config_version" : 1,
          "createtime" : 1477380367528,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "STORM" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "STORM",
          "service_config_version" : 3,
          "createtime" : 1518207504761,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "service_config_version_note" : "",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "TEZ" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "TEZ",
          "service_config_version" : 1,
          "createtime" : 1477380367778,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "VNC" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "VNC",
          "service_config_version" : 1,
          "createtime" : 1518208266931,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "service_config_version_note" : "Initial configurations for VNC Server",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "YARN" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "YARN",
          "service_config_version" : 2,
          "createtime" : 1477380378938,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "ZEPPELIN" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "ZEPPELIN",
          "service_config_version" : 1,
          "createtime" : 1477380374682,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ],
      "ZOOKEEPER" : [
        {
          "hosts" : [ ],
          "compatibleWithCurrentStack" : true,
          "cluster_name" : "Sandbox",
          "service_name" : "ZOOKEEPER",
          "service_config_version" : 2,
          "createtime" : 1477380378771,
          "group_id" : -1,
          "group_name" : "Default",
          "user" : "admin",
          "stack_id" : "HDP-2.5",
          "is_current" : true,
          "is_cluster_compatible" : true
        }
      ]
    }
  },
  "alerts_summary" : {
    "CRITICAL" : 0,
    "MAINTENANCE" : 0,
    "OK" : 0,
    "UNKNOWN" : 0,
    "WARNING" : 0
  },
  "alerts_summary_hosts" : {
    "CRITICAL" : 0,
    "OK" : 0,
    "UNKNOWN" : 0,
    "WARNING" : 0
  },
  "privileges" : [ ],
  "config_groups" : [ ],
  "kerberos_descriptors" : [
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/kerberos_descriptors/COMPOSITE",
      "KerberosDescriptor" : {
        "cluster_name" : "Sandbox",
        "type" : "COMPOSITE"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/kerberos_descriptors/STACK",
      "KerberosDescriptor" : {
        "cluster_name" : "Sandbox",
        "type" : "STACK"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/kerberos_descriptors/USER",
      "KerberosDescriptor" : {
        "cluster_name" : "Sandbox",
        "type" : "USER"
      }
    }
  ],
  "configurations" : [
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=admin-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "admin-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=admin-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "admin-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=admin-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "admin-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=admin-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "admin-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=admin-topology&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "admin-topology",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=admin-topology&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "admin-topology",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-grafana-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-grafana-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-grafana-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-grafana-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-grafana-ini&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-grafana-ini",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-grafana-ini&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-grafana-ini",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-hbase-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-hbase-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-hbase-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-hbase-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-policy&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-hbase-policy",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-policy&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-hbase-policy",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-security-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-hbase-security-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-security-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-hbase-security-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-hbase-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-hbase-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-hbase-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-ssl-client&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-ssl-client",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-ssl-client&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-ssl-client",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-ssl-server&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ams-ssl-server",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ams-ssl-server&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ams-ssl-server",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=application-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "application-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=application-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "application-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=atlas-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "atlas-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=atlas-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "atlas-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=atlas-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "atlas-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=atlas-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "atlas-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=atlas-solrconfig&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "atlas-solrconfig",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=atlas-solrconfig&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "atlas-solrconfig",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=beeline-log4j2&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "beeline-log4j2",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=beeline-log4j2&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "beeline-log4j2",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=capacity-scheduler&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "capacity-scheduler",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=capacity-scheduler&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "capacity-scheduler",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=cluster-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "cluster-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=core-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "core-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=core-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "core-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=core-site&tag=version1518207504267",
      "tag" : "version1518207504267",
      "type" : "core-site",
      "version" : 3,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-atlas-application.properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "falcon-atlas-application.properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-atlas-application.properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "falcon-atlas-application.properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-client.properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "falcon-client.properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-client.properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "falcon-client.properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "falcon-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "falcon-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "falcon-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "falcon-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-runtime.properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "falcon-runtime.properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-runtime.properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "falcon-runtime.properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-startup.properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "falcon-startup.properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=falcon-startup.properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "falcon-startup.properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=flume-conf&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "flume-conf",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=flume-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "flume-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=gateway-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "gateway-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=gateway-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "gateway-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=gateway-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "gateway-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=gateway-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "gateway-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hadoop-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hadoop-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hadoop-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hadoop-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hadoop-policy&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hadoop-policy",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hadoop-policy&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hadoop-policy",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hbase-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hbase-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hbase-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hbase-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hbase-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hbase-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hbase-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hbase-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hbase-policy&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hbase-policy",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hbase-policy&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hbase-policy",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hbase-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hbase-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hbase-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hbase-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hcat-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hcat-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hcat-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hcat-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hdfs-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hdfs-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hdfs-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hdfs-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hdfs-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hdfs-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hdfs-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hdfs-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hdfs-site&tag=version1518207504267",
      "tag" : "version1518207504267",
      "type" : "hdfs-site",
      "version" : 3,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-atlas-application.properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hive-atlas-application.properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-atlas-application.properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hive-atlas-application.properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hive-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hive-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-exec-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hive-exec-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-exec-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hive-exec-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-exec-log4j2&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hive-exec-log4j2",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-exec-log4j2&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hive-exec-log4j2",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-interactive-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hive-interactive-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-interactive-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hive-interactive-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-interactive-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hive-interactive-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-interactive-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hive-interactive-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hive-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hive-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-log4j2&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hive-log4j2",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-log4j2&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hive-log4j2",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hive-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hive-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hive-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hivemetastore-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hivemetastore-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hivemetastore-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hivemetastore-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hiveserver2-interactive-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hiveserver2-interactive-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hiveserver2-interactive-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hiveserver2-interactive-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hiveserver2-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "hiveserver2-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=hiveserver2-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "hiveserver2-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=infra-solr-client-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "infra-solr-client-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=infra-solr-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "infra-solr-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=infra-solr-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "infra-solr-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=infra-solr-xml&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "infra-solr-xml",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=kafka-broker&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "kafka-broker",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=kafka-broker&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "kafka-broker",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=kafka-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "kafka-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=kafka-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "kafka-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=kafka-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "kafka-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=kafka-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "kafka-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=knox-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "knox-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=knox-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "knox-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=knoxsso-topology&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "knoxsso-topology",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=knoxsso-topology&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "knoxsso-topology",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ldap-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ldap-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ldap-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ldap-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=livy-conf&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "livy-conf",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=livy-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "livy-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=livy-log4j-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "livy-log4j-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=livy-spark-blacklist&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "livy-spark-blacklist",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=llap-cli-log4j2&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "llap-cli-log4j2",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=llap-cli-log4j2&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "llap-cli-log4j2",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=llap-daemon-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "llap-daemon-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=llap-daemon-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "llap-daemon-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=mapred-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "mapred-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=mapred-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "mapred-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=mapred-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "mapred-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=mapred-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "mapred-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=oozie-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "oozie-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=oozie-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "oozie-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=oozie-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "oozie-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=oozie-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "oozie-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=oozie-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "oozie-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=oozie-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "oozie-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=pig-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "pig-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=pig-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "pig-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=pig-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "pig-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-admin-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-admin-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-admin-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-admin-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-atlas-audit&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-atlas-audit",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-atlas-audit&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-atlas-audit",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-atlas-plugin-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-atlas-plugin-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-atlas-plugin-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-atlas-plugin-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-atlas-policymgr-ssl&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-atlas-policymgr-ssl",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-atlas-policymgr-ssl&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-atlas-policymgr-ssl",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-atlas-security&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-atlas-security",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-atlas-security&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-atlas-security",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hbase-audit&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hbase-audit",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hbase-audit&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hbase-audit",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hbase-plugin-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hbase-plugin-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hbase-plugin-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hbase-plugin-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hbase-policymgr-ssl&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hbase-policymgr-ssl",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hbase-policymgr-ssl&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hbase-policymgr-ssl",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hbase-security&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hbase-security",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hbase-security&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hbase-security",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hdfs-audit&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hdfs-audit",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hdfs-audit&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hdfs-audit",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hdfs-plugin-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hdfs-plugin-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hdfs-plugin-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hdfs-plugin-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hdfs-policymgr-ssl&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hdfs-policymgr-ssl",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hdfs-policymgr-ssl&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hdfs-policymgr-ssl",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hdfs-security&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hdfs-security",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hdfs-security&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hdfs-security",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hive-audit&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hive-audit",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hive-audit&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hive-audit",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hive-plugin-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hive-plugin-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hive-plugin-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hive-plugin-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hive-policymgr-ssl&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hive-policymgr-ssl",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hive-policymgr-ssl&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hive-policymgr-ssl",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hive-security&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-hive-security",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-hive-security&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-hive-security",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-kafka-audit&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-kafka-audit",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-kafka-audit&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-kafka-audit",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-kafka-plugin-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-kafka-plugin-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-kafka-plugin-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-kafka-plugin-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-kafka-policymgr-ssl&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-kafka-policymgr-ssl",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-kafka-policymgr-ssl&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-kafka-policymgr-ssl",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-kafka-security&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-kafka-security",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-kafka-security&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-kafka-security",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-knox-audit&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-knox-audit",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-knox-audit&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-knox-audit",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-knox-plugin-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-knox-plugin-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-knox-plugin-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-knox-plugin-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-knox-policymgr-ssl&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-knox-policymgr-ssl",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-knox-policymgr-ssl&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-knox-policymgr-ssl",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-knox-security&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-knox-security",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-knox-security&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-knox-security",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-storm-audit&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-storm-audit",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-storm-audit&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-storm-audit",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-storm-plugin-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-storm-plugin-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-storm-plugin-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-storm-plugin-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-storm-policymgr-ssl&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-storm-policymgr-ssl",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-storm-policymgr-ssl&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-storm-policymgr-ssl",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-storm-security&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-storm-security",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-storm-security&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-storm-security",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-tagsync-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-tagsync-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-tagsync-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-tagsync-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-ugsync-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-ugsync-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-ugsync-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-ugsync-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-yarn-audit&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-yarn-audit",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-yarn-audit&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-yarn-audit",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-yarn-plugin-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-yarn-plugin-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-yarn-plugin-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-yarn-plugin-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-yarn-policymgr-ssl&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-yarn-policymgr-ssl",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-yarn-policymgr-ssl&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-yarn-policymgr-ssl",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-yarn-security&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ranger-yarn-security",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ranger-yarn-security&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ranger-yarn-security",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=slider-client&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "slider-client",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=slider-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "slider-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=slider-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "slider-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark-defaults&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark-defaults",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark-hive-site-override&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark-hive-site-override",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark-javaopts-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark-javaopts-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark-log4j-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark-log4j-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark-metrics-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark-metrics-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark-thrift-fairscheduler&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark-thrift-fairscheduler",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark-thrift-sparkconf&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark-thrift-sparkconf",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark2-defaults&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark2-defaults",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark2-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark2-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark2-hive-site-override&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark2-hive-site-override",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark2-log4j-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark2-log4j-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark2-metrics-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark2-metrics-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark2-thrift-fairscheduler&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark2-thrift-fairscheduler",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=spark2-thrift-sparkconf&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "spark2-thrift-sparkconf",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=sqoop-atlas-application.properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "sqoop-atlas-application.properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=sqoop-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "sqoop-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=sqoop-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "sqoop-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ssl-client&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ssl-client",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ssl-client&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ssl-client",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ssl-server&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "ssl-server",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=ssl-server&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "ssl-server",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-atlas-application.properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "storm-atlas-application.properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-atlas-application.properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "storm-atlas-application.properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-cluster-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "storm-cluster-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-cluster-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "storm-cluster-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "storm-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "storm-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "storm-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "storm-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-site&tag=version1518207504267",
      "tag" : "version1518207504267",
      "type" : "storm-site",
      "version" : 3,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-worker-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "storm-worker-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=storm-worker-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "storm-worker-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=tagsync-application-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "tagsync-application-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=tagsync-application-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "tagsync-application-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=tagsync-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "tagsync-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=tagsync-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "tagsync-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=tez-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "tez-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=tez-interactive-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "tez-interactive-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=tez-interactive-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "tez-interactive-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=tez-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "tez-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=topology&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "topology",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=topology&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "topology",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=users-ldif&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "users-ldif",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=users-ldif&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "users-ldif",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=usersync-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "usersync-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=usersync-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "usersync-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=usersync-properties&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "usersync-properties",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=usersync-properties&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "usersync-properties",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=vnc-config&tag=version1518207504273",
      "tag" : "version1518207504273",
      "type" : "vnc-config",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=vnc-config&tag=version1518208266271",
      "tag" : "version1518208266271",
      "type" : "vnc-config",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=vnc-env&tag=version1518207504273",
      "tag" : "version1518207504273",
      "type" : "vnc-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=vnc-env&tag=version1518208266271",
      "tag" : "version1518208266271",
      "type" : "vnc-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=webhcat-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "webhcat-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=webhcat-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "webhcat-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=webhcat-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "webhcat-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=webhcat-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "webhcat-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=webhcat-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "webhcat-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=webhcat-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "webhcat-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=yarn-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "yarn-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=yarn-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "yarn-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=yarn-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "yarn-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=yarn-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "yarn-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=yarn-site&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "yarn-site",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=yarn-site&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "yarn-site",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=zeppelin-config&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "zeppelin-config",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=zeppelin-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "zeppelin-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=zoo.cfg&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "zoo.cfg",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=zoo.cfg&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "zoo.cfg",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=zookeeper-env&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "zookeeper-env",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=zookeeper-env&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "zookeeper-env",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=zookeeper-log4j&tag=INITIAL",
      "tag" : "INITIAL",
      "type" : "zookeeper-log4j",
      "version" : 1,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations?type=zookeeper-log4j&tag=TOPOLOGY_RESOLVED",
      "tag" : "TOPOLOGY_RESOLVED",
      "type" : "zookeeper-log4j",
      "version" : 2,
      "Config" : {
        "cluster_name" : "Sandbox",
        "stack_id" : "HDP-2.5"
      }
    }
  ],
  "hosts" : [
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/hosts/sandbox.hortonworks.com",
      "Hosts" : {
        "cluster_name" : "Sandbox",
        "host_name" : "sandbox.hortonworks.com"
      }
    }
  ],
  "requests" : [
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/14",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 14
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/17",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 17
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/19",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 19
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/23",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 23
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/25",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 25
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/27",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 27
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/31",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 31
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/33",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 33
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/35",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 35
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/37",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 37
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/39",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 39
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/40",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 40
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/41",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 41
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/42",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 42
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/44",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 44
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/46",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 46
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/47",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 47
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/49",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 49
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/51",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 51
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/requests/53",
      "Requests" : {
        "cluster_name" : "Sandbox",
        "id" : 53
      }
    }
  ],
  "workflows" : [ ],
  "services" : [
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/AMBARI_INFRA",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "AMBARI_INFRA"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/AMBARI_METRICS",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "AMBARI_METRICS"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/ATLAS",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "ATLAS"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/FALCON",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "FALCON"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/FLUME",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "FLUME"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/HBASE",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "HBASE"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/HDFS",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "HDFS"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/HIVE",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "HIVE"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/KAFKA",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "KAFKA"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/KNOX",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "KNOX"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/MAPREDUCE2",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "MAPREDUCE2"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/OOZIE",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "OOZIE"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/PIG",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "PIG"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/RANGER",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "RANGER"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/SLIDER",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "SLIDER"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/SPARK",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "SPARK"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/SPARK2",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "SPARK2"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/SQOOP",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "SQOOP"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/STORM",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "STORM"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/TEZ",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "TEZ"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/VNC",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "VNC"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/YARN",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "YARN"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/ZEPPELIN",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "ZEPPELIN"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/services/ZOOKEEPER",
      "ServiceInfo" : {
        "cluster_name" : "Sandbox",
        "service_name" : "ZOOKEEPER"
      }
    }
  ],
  "alerts" : [ ],
  "stack_versions" : [
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/stack_versions/1",
      "ClusterStackVersions" : {
        "cluster_name" : "Sandbox",
        "id" : 1,
        "repository_version" : 1,
        "stack" : "HDP",
        "version" : "2.5"
      }
    }
  ],
  "service_config_versions" : [
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=AMBARI_INFRA&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "infra-solr-client-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "# Copyright 2011 The Apache Software Foundation\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nlog4j.rootLogger=INFO,file,stdout,stderr\n\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File={{infra_client_log|default('/var/log/ambari-infra-solr-client/solr-client.log')}}\nlog4j.appender.file.MaxFileSize=80MB\nlog4j.appender.file.MaxBackupIndex=60\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{DATE} %5p [%t] %c{1}:%L - %m%n\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Threshold=INFO\nlog4j.appender.stdout.Target=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%m%n\n\nlog4j.appender.stderr=org.apache.log4j.ConsoleAppender\nlog4j.appender.stderr.Threshold=ERROR\nlog4j.appender.stderr.Target=System.err\nlog4j.appender.stderr.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stderr.layout.ConversionPattern=%m%n",
            "infra_solr_client_log_dir" : "/var/log/ambari-infra-solr-client"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "infra-solr-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "#!/bin/bash\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements. See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# By default the script will use JAVA_HOME to determine which java\n# to use, but you can set a specific path for Solr to use without\n# affecting other Java applications on your server/workstation.\nSOLR_JAVA_HOME={{java64_home}}\n\n# Increase Java Min/Max Heap as needed to support your indexing / query needs\nSOLR_JAVA_MEM=\"-Xms{{infra_solr_min_mem}}m -Xmx{{infra_solr_max_mem}}m\"\n\n# Enable verbose GC logging\nGC_LOG_OPTS=\"-verbose:gc -XX:+PrintHeapAtGC -XX:+PrintGCDetails \\\n-XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime\"\n\n# These GC settings have shown to work well for a number of common Solr workloads\nGC_TUNE=\"-XX:NewRatio=3 \\\n-XX:SurvivorRatio=4 \\\n-XX:TargetSurvivorRatio=90 \\\n-XX:MaxTenuringThreshold=8 \\\n-XX:+UseConcMarkSweepGC \\\n-XX:+UseParNewGC \\\n-XX:ConcGCThreads=4 -XX:ParallelGCThreads=4 \\\n-XX:+CMSScavengeBeforeRemark \\\n-XX:PretenureSizeThreshold=64m \\\n-XX:+UseCMSInitiatingOccupancyOnly \\\n-XX:CMSInitiatingOccupancyFraction=50 \\\n-XX:CMSMaxAbortablePrecleanTime=6000 \\\n-XX:+CMSParallelRemarkEnabled \\\n-XX:+ParallelRefProcEnabled\"\n\n# Set the ZooKeeper connection string if using an external ZooKeeper ensemble\n# e.g. host1:2181,host2:2181/chroot\n# Leave empty if not using SolrCloud\nZK_HOST=\"{{zookeeper_quorum}}{{infra_solr_znode}}\"\n\n# Set the ZooKeeper client timeout (for SolrCloud mode)\nZK_CLIENT_TIMEOUT=\"60000\"\n\n# By default the start script uses \"localhost\"; override the hostname here\n# for production SolrCloud environments to control the hostname exposed to cluster state\n#SOLR_HOST=\"192.168.1.1\"\n\n# By default the start script uses UTC; override the timezone if needed\n#SOLR_TIMEZONE=\"UTC\"\n\n# Set to true to activate the JMX RMI connector to allow remote JMX client applications\n# to monitor the JVM hosting Solr; set to \"false\" to disable that behavior\n# (false is recommended in production environments)\nENABLE_REMOTE_JMX_OPTS=\"true\"\n\n# The script will use SOLR_PORT+10000 for the RMI_PORT or you can set it here\nRMI_PORT={{infra_solr_jmx_port}}\n\n# Anything you add to the SOLR_OPTS variable will be included in the java\n# start command line as-is, in ADDITION to other options. If you specify the\n# -a option on start script, those options will be appended as well. Examples:\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=3000\"\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoCommit.maxTime=60000\"\n#SOLR_OPTS=\"$SOLR_OPTS -Dsolr.clustering.enabled=true\"\n\n# Location where the bin/solr script will save PID files for running instances\n# If not set, the script will create PID files in $SOLR_TIP/bin\nSOLR_PID_DIR={{infra_solr_piddir}}\n\n# Path to a directory where Solr creates index files, the specified directory\n# must contain a solr.xml; by default, Solr will use server/solr\nSOLR_HOME={{infra_solr_datadir}}\n\n# Solr provides a default Log4J configuration properties file in server/resources\n# however, you may want to customize the log settings and file appender location\n# so you can point the script to use a different log4j.properties file\nLOG4J_PROPS={{infra_solr_conf}}/log4j.properties\n\n# Location where Solr should write logs to; should agree with the file appender\n# settings in server/resources/log4j.properties\nSOLR_LOGS_DIR={{infra_solr_log_dir}}\n\n# Sets the port Solr binds to, default is 8983\nSOLR_PORT={{infra_solr_port}}\n\n# Be sure to update the paths to the correct keystore for your environment\n{% if infra_solr_ssl_enabled %}\nSOLR_SSL_KEY_STORE={{infra_solr_keystore_location}}\nSOLR_SSL_KEY_STORE_PASSWORD={{infra_solr_keystore_password}}\nSOLR_SSL_TRUST_STORE={{infra_solr_keystore_location}}\nSOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_keystore_password}}\nSOLR_SSL_NEED_CLIENT_AUTH=false\nSOLR_SSL_WANT_CLIENT_AUTH=false\n{% endif %}\n\n# Uncomment to set a specific SSL port (-Djetty.ssl.port=N); if not set\n# and you are using SSL, then the start script will use SOLR_PORT for the SSL port\n#SOLR_SSL_PORT=\n\n{% if security_enabled -%}\nSOLR_HOST=`hostname -f`\nSOLR_JAAS_FILE={{infra_solr_jaas_file}}\nSOLR_KERB_KEYTAB={{infra_solr_web_kerberos_keytab}}\nSOLR_KERB_PRINCIPAL={{infra_solr_web_kerberos_principal}}\nSOLR_KERB_NAME_RULES={{infra_solr_kerberos_name_rules}}\n\nSOLR_AUTHENTICATION_CLIENT_CONFIGURER=\"org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer\"\nSOLR_AUTHENTICATION_OPTS=\" -DauthenticationPlugin=org.apache.solr.security.KerberosPlugin -Djava.security.auth.login.config=$SOLR_JAAS_FILE -Dsolr.kerberos.principal=${SOLR_KERB_PRINCIPAL} -Dsolr.kerberos.keytab=${SOLR_KERB_KEYTAB} -Dsolr.kerberos.cookie.domain=${SOLR_HOST} -Dsolr.kerberos.name.rules=${SOLR_KERB_NAME_RULES}\"\n{% endif %}",
            "infra_solr_datadir" : "/opt/ambari_infra_solr/data",
            "infra_solr_jmx_port" : "18886",
            "infra_solr_kerberos_keytab" : "/etc/security/keytabs/infra_solr.service.keytab",
            "infra_solr_kerberos_name_rules" : "DEFAULT",
            "infra_solr_kerberos_principal" : "infra-solr",
            "infra_solr_keystore_location" : "/etc/security/serverKeys/infra.solr.keyStore.jks",
            "infra_solr_keystore_password" : "SECRET:infra-solr-env:1:infra_solr_keystore_password",
            "infra_solr_keystore_type" : "jks",
            "infra_solr_log_dir" : "/var/log/ambari-infra-solr",
            "infra_solr_maxmem" : "2048",
            "infra_solr_minmem" : "1024",
            "infra_solr_pid_dir" : "/var/run/ambari-infra-solr",
            "infra_solr_port" : "8886",
            "infra_solr_ssl_enabled" : "false",
            "infra_solr_truststore_location" : "/etc/security/serverKeys/infra.solr.trustStore.jks",
            "infra_solr_truststore_password" : "SECRET:infra-solr-env:1:infra_solr_truststore_password",
            "infra_solr_truststore_type" : "jks",
            "infra_solr_user" : "infra-solr",
            "infra_solr_web_kerberos_keytab" : "/etc/security/keytabs/spnego.service.keytab",
            "infra_solr_web_kerberos_principal" : "HTTP/_HOST@EXAMPLE.COM",
            "infra_solr_znode" : "/infra-solr"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "infra-solr-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#  Logging level\ninfra.solr.log.dir={{infra_solr_log_dir}}\n#log4j.rootLogger=INFO, file, CONSOLE\nlog4j.rootLogger=WARN, file\n\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\n\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%-4r [%t] %-5p %c %x [%X{collection} %X{shard} %X{replica} %X{core}] \\u2013 %m%n\n\n#- size rotation with log cleanup.\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.MaxFileSize=10MB\nlog4j.appender.file.MaxBackupIndex=9\n\n#- File to log to and log format\nlog4j.appender.file.File=${infra.solr.log.dir}/solr.log\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n\n\nlog4j.logger.org.apache.zookeeper=WARN\nlog4j.logger.org.apache.hadoop=WARN\n\n# set to INFO to enable infostream log messages\nlog4j.logger.org.apache.solr.update.LoggingInfoStream=OFF"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "infra-solr-xml",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n<solr>\n  <solrcloud>\n    <str name=\"host\">${host:}</str>\n    <int name=\"hostPort\">${jetty.port:}</int>\n    <str name=\"hostContext\">${hostContext:solr}</str>\n    <int name=\"zkClientTimeout\">${zkClientTimeout:15000}</int>\n    <bool name=\"genericCoreNodeNames\">${genericCoreNodeNames:true}</bool>\n  </solrcloud>\n</solr>"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380373507,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "AMBARI_INFRA",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=AMBARI_METRICS&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ambari_metrics_user" : "ams",
            "content" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# Collector Log directory for log4j\nexport AMS_COLLECTOR_LOG_DIR={{ams_collector_log_dir}}\n\n# Monitor Log directory for outfile\nexport AMS_MONITOR_LOG_DIR={{ams_monitor_log_dir}}\n\n# Collector pid directory\nexport AMS_COLLECTOR_PID_DIR={{ams_collector_pid_dir}}\n\n# Monitor pid directory\nexport AMS_MONITOR_PID_DIR={{ams_monitor_pid_dir}}\n\n# AMS HBase pid directory\nexport AMS_HBASE_PID_DIR={{hbase_pid_dir}}\n\n# AMS Collector heapsize\nexport AMS_COLLECTOR_HEAPSIZE={{metrics_collector_heapsize}}\n\n# HBase normalizer enabled\nexport AMS_HBASE_NORMALIZER_ENABLED={{ams_hbase_normalizer_enabled}}\n\n# HBase compaction policy enabled\nexport AMS_HBASE_FIFO_COMPACTION_ENABLED={{ams_hbase_fifo_compaction_enabled}}\n\n# HBase Tables Initialization check enabled\nexport AMS_HBASE_INIT_CHECK_ENABLED={{ams_hbase_init_check_enabled}}\n\n# AMS Collector options\nexport AMS_COLLECTOR_OPTS=\"-Djava.library.path=/usr/lib/ams-hbase/lib/hadoop-native\"\n{% if security_enabled %}\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS -Djava.security.auth.login.config={{ams_collector_jaas_config_file}}\"\n{% endif %}\n\n# AMS Collector GC options\nexport AMS_COLLECTOR_GC_OPTS=\"-XX:+UseConcMarkSweepGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{ams_collector_log_dir}}/collector-gc.log-`date +'%Y%m%d%H%M'`\"\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS $AMS_COLLECTOR_GC_OPTS\"",
            "metrics_collector_heapsize" : "512",
            "metrics_collector_log_dir" : "/var/log/ambari-metrics-collector",
            "metrics_collector_pid_dir" : "/var/run/ambari-metrics-collector",
            "metrics_monitor_log_dir" : "/var/log/ambari-metrics-monitor",
            "metrics_monitor_pid_dir" : "/var/run/ambari-metrics-monitor"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-ssl-server",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ssl.server.keystore.keypassword" : "SECRET:ams-ssl-server:1:ssl.server.keystore.keypassword",
            "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
            "ssl.server.keystore.password" : "SECRET:ams-ssl-server:1:ssl.server.keystore.password",
            "ssl.server.keystore.type" : "jks",
            "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
            "ssl.server.truststore.password" : "SECRET:ams-ssl-server:1:ssl.server.truststore.password",
            "ssl.server.truststore.reload.interval" : "10000",
            "ssl.server.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "dfs.client.read.shortcircuit" : "true",
            "hbase.client.scanner.caching" : "10000",
            "hbase.client.scanner.timeout.period" : "300000",
            "hbase.cluster.distributed" : "false",
            "hbase.hregion.majorcompaction" : "0",
            "hbase.hregion.max.filesize" : "4294967296",
            "hbase.hregion.memstore.block.multiplier" : "4",
            "hbase.hregion.memstore.flush.size" : "134217728",
            "hbase.hstore.blockingStoreFiles" : "200",
            "hbase.hstore.flusher.count" : "2",
            "hbase.local.dir" : "${hbase.tmp.dir}/local",
            "hbase.master.info.bindAddress" : "0.0.0.0",
            "hbase.master.info.port" : "61310",
            "hbase.master.normalizer.class" : "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer",
            "hbase.master.port" : "61300",
            "hbase.master.wait.on.regionservers.mintostart" : "1",
            "hbase.normalizer.enabled" : "true",
            "hbase.normalizer.period" : "600000",
            "hbase.regionserver.global.memstore.lowerLimit" : "0.3",
            "hbase.regionserver.global.memstore.upperLimit" : "0.35",
            "hbase.regionserver.info.port" : "61330",
            "hbase.regionserver.port" : "61320",
            "hbase.regionserver.thread.compaction.large" : "2",
            "hbase.regionserver.thread.compaction.small" : "3",
            "hbase.replication" : "false",
            "hbase.rootdir" : "file:///var/lib/ambari-metrics-collector/hbase",
            "hbase.rpc.timeout" : "30000",
            "hbase.snapshot.enabled" : "false",
            "hbase.tmp.dir" : "/var/lib/ambari-metrics-collector/hbase-tmp",
            "hbase.zookeeper.leaderport" : "61388",
            "hbase.zookeeper.peerport" : "61288",
            "hbase.zookeeper.property.clientPort" : "{{zookeeper_clientPort}}",
            "hbase.zookeeper.property.dataDir" : "${hbase.tmp.dir}/zookeeper",
            "hbase.zookeeper.property.tickTime" : "6000",
            "hbase.zookeeper.quorum" : "{{zookeeper_quorum_hosts}}",
            "hfile.block.cache.size" : "0.3",
            "phoenix.coprocessor.maxMetaDataCacheSize" : "20480000",
            "phoenix.coprocessor.maxServerCacheTimeToLiveMs" : "60000",
            "phoenix.groupby.maxCacheSize" : "307200000",
            "phoenix.mutate.batchSize" : "10000",
            "phoenix.query.keepAliveMs" : "300000",
            "phoenix.query.maxGlobalMemoryPercentage" : "15",
            "phoenix.query.rowKeyOrderSaltedTable" : "true",
            "phoenix.query.spoolThresholdBytes" : "20971520",
            "phoenix.query.timeoutMs" : "300000",
            "phoenix.sequence.saltBuckets" : "2",
            "phoenix.spool.directory" : "${hbase.tmp.dir}/phoenix-spool",
            "zookeeper.session.timeout" : "120000",
            "zookeeper.session.timeout.localHBaseCluster" : "120000",
            "zookeeper.znode.parent" : "/ams-hbase-unsecure"
          },
          "properties_attributes" : {
            "hbase.zookeeper.quorum" : {
              "final" : "true"
            },
            "final" : {
              "hbase.zookeeper.quorum" : "true"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "phoenix.query.maxGlobalMemoryPercentage" : "25",
            "phoenix.spool.directory" : "/tmp",
            "timeline.metrics.aggregator.checkpoint.dir" : "/var/lib/ambari-metrics-collector/checkpoint",
            "timeline.metrics.aggregators.skip.blockcache.enabled" : "false",
            "timeline.metrics.cache.commit.interval" : "3",
            "timeline.metrics.cache.enabled" : "true",
            "timeline.metrics.cache.size" : "150",
            "timeline.metrics.cluster.aggregate.splitpoints" : "kafka.server.BrokerTopicMetrics.FailedFetchRequestsPerSec.meanRate",
            "timeline.metrics.cluster.aggregator.daily.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.cluster.aggregator.daily.disabled" : "false",
            "timeline.metrics.cluster.aggregator.daily.interval" : "86400",
            "timeline.metrics.cluster.aggregator.daily.ttl" : "63072000",
            "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.cluster.aggregator.hourly.disabled" : "false",
            "timeline.metrics.cluster.aggregator.hourly.interval" : "3600",
            "timeline.metrics.cluster.aggregator.hourly.ttl" : "31536000",
            "timeline.metrics.cluster.aggregator.interpolation.enabled" : "true",
            "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.cluster.aggregator.minute.disabled" : "false",
            "timeline.metrics.cluster.aggregator.minute.interval" : "300",
            "timeline.metrics.cluster.aggregator.minute.ttl" : "2592000",
            "timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.cluster.aggregator.second.disabled" : "false",
            "timeline.metrics.cluster.aggregator.second.interval" : "120",
            "timeline.metrics.cluster.aggregator.second.timeslice.interval" : "30",
            "timeline.metrics.cluster.aggregator.second.ttl" : "604800",
            "timeline.metrics.daily.aggregator.minute.interval" : "86400",
            "timeline.metrics.hbase.compression.scheme" : "SNAPPY",
            "timeline.metrics.hbase.data.block.encoding" : "FAST_DIFF",
            "timeline.metrics.hbase.fifo.compaction.enabled" : "true",
            "timeline.metrics.hbase.init.check.enabled" : "true",
            "timeline.metrics.host.aggregate.splitpoints" : "kafka.server.BrokerTopicMetrics.FailedFetchRequestsPerSec.meanRate",
            "timeline.metrics.host.aggregator.daily.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.host.aggregator.daily.disabled" : "false",
            "timeline.metrics.host.aggregator.daily.ttl" : "31536000",
            "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.host.aggregator.hourly.disabled" : "false",
            "timeline.metrics.host.aggregator.hourly.interval" : "3600",
            "timeline.metrics.host.aggregator.hourly.ttl" : "2592000",
            "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.host.aggregator.minute.disabled" : "false",
            "timeline.metrics.host.aggregator.minute.interval" : "300",
            "timeline.metrics.host.aggregator.minute.ttl" : "604800",
            "timeline.metrics.host.aggregator.ttl" : "86400",
            "timeline.metrics.service.checkpointDelay" : "60",
            "timeline.metrics.service.cluster.aggregator.appIds" : "datanode,nodemanager,hbase",
            "timeline.metrics.service.default.result.limit" : "15840",
            "timeline.metrics.service.handler.thread.count" : "20",
            "timeline.metrics.service.http.policy" : "HTTP_ONLY",
            "timeline.metrics.service.operation.mode" : "embedded",
            "timeline.metrics.service.resultset.fetchSize" : "2000",
            "timeline.metrics.service.rpc.address" : "0.0.0.0:60200",
            "timeline.metrics.service.use.groupBy.aggregators" : "true",
            "timeline.metrics.service.watcher.delay" : "30",
            "timeline.metrics.service.watcher.disabled" : "false",
            "timeline.metrics.service.watcher.initial.delay" : "600",
            "timeline.metrics.service.watcher.timeout" : "30",
            "timeline.metrics.service.webapp.address" : "%HOSTGROUP::host_group_1%:6188",
            "timeline.metrics.sink.collection.period" : "10",
            "timeline.metrics.sink.report.interval" : "60"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-ssl-client",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks",
            "ssl.client.truststore.password" : "SECRET:ams-ssl-client:1:ssl.client.truststore.password",
            "ssl.client.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-policy",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "security.admin.protocol.acl" : "*",
            "security.client.protocol.acl" : "*",
            "security.masterregion.protocol.acl" : "*"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-grafana-ini",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "cert_file" : "/etc/ambari-metrics-grafana/conf/ams-grafana.crt",
            "cert_key" : "/etc/ambari-metrics-grafana/conf/ams-grafana.key",
            "content" : "\n##################### Grafana Configuration Example #####################\n#\n# Everything has defaults so you only need to uncomment things you want to\n# change\n\n# possible values : production, development\n; app_mode = production\n\n#################################### Paths ####################################\n[paths]\n# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)\n#\n;data = /var/lib/grafana\ndata = {{ams_grafana_data_dir}}\n#\n# Directory where grafana can store logs\n#\n;logs = /var/log/grafana\nlogs = {{ams_grafana_log_dir}}\n\n\n#################################### Server ####################################\n[server]\n# Protocol (http or https)\n;protocol = http\nprotocol = {{ams_grafana_protocol}}\n# The ip address to bind to, empty will bind to all interfaces\n;http_addr =\n\n# The http port  to use\n;http_port = 3000\nhttp_port = {{ams_grafana_port}}\n\n# The public facing domain name used to access grafana from a browser\n;domain = localhost\n\n# Redirect to correct domain if host header does not match domain\n# Prevents DNS rebinding attacks\n;enforce_domain = false\n\n# The full public facing url\n;root_url = %(protocol)s://%(domain)s:%(http_port)s/\n\n# Log web requests\n;router_logging = false\n\n# the path relative working path\n;static_root_path = public\nstatic_root_path = /usr/lib/ambari-metrics-grafana/public\n\n# enable gzip\n;enable_gzip = false\n\n# https certs & key file\n;cert_file =\n;cert_key =\ncert_file = {{ams_grafana_cert_file}}\ncert_key = {{ams_grafana_cert_key}}\n\n#################################### Database ####################################\n[database]\n# Either \"mysql\", \"postgres\" or \"sqlite3\", it's your choice\n;type = sqlite3\n;host = 127.0.0.1:3306\n;name = grafana\n;user = root\n;password =\n\n# For \"postgres\" only, either \"disable\", \"require\" or \"verify-full\"\n;ssl_mode = disable\n\n# For \"sqlite3\" only, path relative to data_path setting\n;path = grafana.db\n\n#################################### Session ####################################\n[session]\n# Either \"memory\", \"file\", \"redis\", \"mysql\", \"postgres\", default is \"file\"\n;provider = file\n\n# Provider config options\n# memory: not have any config yet\n# file: session dir path, is relative to grafana data_path\n# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`\n# mysql: go-sql-driver/mysql dsn config string, e.g. `user:password@tcp(127.0.0.1:3306)/database_name`\n# postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable\n;provider_config = sessions\n\n# Session cookie name\n;cookie_name = grafana_sess\n\n# If you use session in https only, default is false\n;cookie_secure = false\n\n# Session life time, default is 86400\n;session_life_time = 86400\n\n#################################### Analytics ####################################\n[analytics]\n# Server reporting, sends usage counters to stats.grafana.org every 24 hours.\n# No ip addresses are being tracked, only simple counters to track\n# running instances, dashboard and error counts. It is very helpful to us.\n# Change this option to false to disable reporting.\n;reporting_enabled = true\n\n# Google Analytics universal tracking code, only enabled if you specify an id here\n;google_analytics_ua_id =\n\n#################################### Security ####################################\n[security]\n# default admin user, created on startup\nadmin_user = {{ams_grafana_admin_user}}\n\n# default admin password, can be changed before first start of grafana,  or in profile settings\nadmin_password = {{ams_grafana_admin_pwd}}\n\n# used for signing\n;secret_key = SW2YcwTIb9zpOOhoPsMm\n\n# Auto-login remember days\n;login_remember_days = 7\n;cookie_username = grafana_user\n;cookie_remember_name = grafana_remember\n\n# disable gravatar profile images\n;disable_gravatar = false\n\n# data source proxy whitelist (ip_or_domain:port seperated by spaces)\n;data_source_proxy_whitelist =\n\n#################################### Users ####################################\n[users]\n# disable user signup / registration\n;allow_sign_up = true\n\n# Allow non admin users to create organizations\n;allow_org_create = true\n\n# Set to true to automatically assign new users to the default organization (id 1)\n;auto_assign_org = true\n\n# Default role new users will be automatically assigned (if disabled above is set to true)\n;auto_assign_org_role = Viewer\n\n# Background text for the user field on the login page\n;login_hint = email or username\n\n#################################### Anonymous Auth ##########################\n[auth.anonymous]\n# enable anonymous access\nenabled = true\n\n# specify organization name that should be used for unauthenticated users\norg_name = Main Org.\n\n# specify role for unauthenticated users\n;org_role = Admin\n\n#################################### Github Auth ##########################\n[auth.github]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_id\n;client_secret = some_secret\n;scopes = user:email,read:org\n;auth_url = https://github.com/login/oauth/authorize\n;token_url = https://github.com/login/oauth/access_token\n;api_url = https://api.github.com/user\n;team_ids =\n;allowed_organizations =\n\n#################################### Google Auth ##########################\n[auth.google]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_client_id\n;client_secret = some_client_secret\n;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email\n;auth_url = https://accounts.google.com/o/oauth2/auth\n;token_url = https://accounts.google.com/o/oauth2/token\n;api_url = https://www.googleapis.com/oauth2/v1/userinfo\n;allowed_domains =\n\n#################################### Auth Proxy ##########################\n[auth.proxy]\n;enabled = false\n;header_name = X-WEBAUTH-USER\n;header_property = username\n;auto_sign_up = true\n\n#################################### Basic Auth ##########################\n[auth.basic]\n;enabled = true\n\n#################################### Auth LDAP ##########################\n[auth.ldap]\n;enabled = false\n;config_file = /etc/grafana/ldap.toml\n\n#################################### SMTP / Emailing ##########################\n[smtp]\n;enabled = false\n;host = localhost:25\n;user =\n;password =\n;cert_file =\n;key_file =\n;skip_verify = false\n;from_address = admin@grafana.localhost\n\n[emails]\n;welcome_email_on_sign_up = false\n\n#################################### Logging ##########################\n[log]\n# Either \"console\", \"file\", default is \"console\"\n# Use comma to separate multiple modes, e.g. \"console, file\"\n;mode = console, file\n\n# Buffer length of channel, keep it as it is if you don't know what it is.\n;buffer_len = 10000\n\n# Either \"Trace\", \"Debug\", \"Info\", \"Warn\", \"Error\", \"Critical\", default is \"Trace\"\n;level = Info\n\n# For \"console\" mode only\n[log.console]\n;level =\n\n# For \"file\" mode only\n[log.file]\n;level =\n# This enables automated log rotate(switch of following options), default is true\n;log_rotate = true\n\n# Max line number of single file, default is 1000000\n;max_lines = 1000000\n\n# Max size shift of single file, default is 28 means 1 << 28, 256MB\n;max_lines_shift = 28\n\n# Segment log daily, default is true\n;daily_rotate = true\n\n# Expired days of log file(delete after max days), default is 7\n;max_days = 7\n\n#################################### AMPQ Event Publisher ##########################\n[event_publisher]\n;enabled = false\n;rabbitmq_url = amqp://localhost/\n;exchange = grafana_events\n\n;#################################### Dashboard JSON files ##########################\n[dashboards.json]\n;enabled = false\n;path = /var/lib/grafana/dashboards\npath = /usr/lib/ambari-metrics-grafana/public/dashboards",
            "port" : "3000",
            "protocol" : "http"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-security-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ams.zookeeper.keytab" : "",
            "ams.zookeeper.principal" : "",
            "hadoop.security.authentication" : "",
            "hbase.coprocessor.master.classes" : "",
            "hbase.coprocessor.region.classes" : "",
            "hbase.master.kerberos.principal" : "",
            "hbase.master.keytab.file" : "",
            "hbase.myclient.keytab" : "",
            "hbase.myclient.principal" : "",
            "hbase.regionserver.kerberos.principal" : "",
            "hbase.regionserver.keytab.file" : "",
            "hbase.security.authentication" : "",
            "hbase.security.authorization" : "",
            "hbase.zookeeper.property.authProvider.1" : "",
            "hbase.zookeeper.property.jaasLoginRenew" : "",
            "hbase.zookeeper.property.kerberos.removeHostFromPrincipal" : "",
            "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal" : ""
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-grafana-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Set environment variables here.\n\n# AMS UI Server Home Dir\nexport AMS_GRAFANA_HOME_DIR={{ams_grafana_home_dir}}\n\n# AMS UI Server Data Dir\nexport AMS_GRAFANA_DATA_DIR={{ams_grafana_data_dir}}\n\n# AMS UI Server Log Dir\nexport AMS_GRAFANA_LOG_DIR={{ams_grafana_log_dir}}\n\n# AMS UI Server PID Dir\nexport AMS_GRAFANA_PID_DIR={{ams_grafana_pid_dir}}",
            "metrics_grafana_data_dir" : "/var/lib/ambari-metrics-grafana",
            "metrics_grafana_log_dir" : "/var/log/ambari-metrics-grafana",
            "metrics_grafana_password" : "SECRET:ams-grafana-env:1:metrics_grafana_password",
            "metrics_grafana_pid_dir" : "/var/run/ambari-metrics-grafana",
            "metrics_grafana_username" : "admin"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6+ required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nadditional_cp={{hbase_classpath_additional}}\nif [  -n \"$additional_cp\" ];\nthen\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}:$additional_cp\nelse\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}\nfi\n\n# The maximum amount of heap to use for hbase shell.\nexport HBASE_SHELL_OPTS=\"-Xmx256m\"\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport HBASE_OPTS=\"-XX:+UseConcMarkSweepGC -XX:ErrorFile={{hbase_log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{hbase_tmp_dir}}\"\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n\n{% if java_version < 8 %}\nexport HBASE_MASTER_OPTS=\" -XX:PermSize=64m -XX:MaxPermSize={{hbase_master_maxperm_size}} -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\"-XX:MaxPermSize=128m -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% else %}\nexport HBASE_MASTER_OPTS=\" -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\" -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% endif %}\n\n\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{hbase_log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{hbase_pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{master_jaas_config_file}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\"\nexport HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS -Djava.security.auth.login.config={{ams_zookeeper_jaas_config_file}}\"\n{% endif %}\n\n# use embedded native libs\n_HADOOP_NATIVE_LIB=\"/usr/lib/ams-hbase/lib/hadoop-native/\"\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.library.path=${_HADOOP_NATIVE_LIB}\"\n\n# Unset HADOOP_HOME to avoid importing HADOOP installed cluster related configs like: /usr/hdp/2.2.0.0-2041/hadoop/conf/\nexport HADOOP_HOME={{ams_hbase_home_dir}}\n\n# Explicitly Setting HBASE_HOME for AMS HBase so that there is no conflict\nexport HBASE_HOME={{ams_hbase_home_dir}}",
            "hbase_classpath_additional" : "",
            "hbase_log_dir" : "/var/log/ambari-metrics-collector",
            "hbase_master_heapsize" : "768",
            "hbase_master_maxperm_size" : "128",
            "hbase_master_xmn_size" : "256",
            "hbase_pid_dir" : "/var/run/ambari-metrics-collector/",
            "hbase_regionserver_heapsize" : "768",
            "hbase_regionserver_shutdown_timeout" : "30",
            "hbase_regionserver_xmn_ratio" : "0.2",
            "max_open_files_limit" : "32768",
            "regionserver_xmn_size" : "128"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Define some default values that can be overridden by system properties\nams.log.dir=.\nams.log.file=ambari-metrics-collector.log\n\n# Root logger option\nlog4j.rootLogger=INFO,file\n\n# Direct log messages to a log file\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=${ams.log.dir}/${ams.log.file}\nlog4j.appender.file.MaxFileSize=80MB\nlog4j.appender.file.MaxBackupIndex=60\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380374488,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "AMBARI_METRICS",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=AMBARI_METRICS&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-ssl-client",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks",
            "ssl.client.truststore.password" : "SECRET:ams-ssl-client:2:ssl.client.truststore.password",
            "ssl.client.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-policy",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "security.admin.protocol.acl" : "*",
            "security.client.protocol.acl" : "*",
            "security.masterregion.protocol.acl" : "*"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-grafana-ini",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "cert_file" : "/etc/ambari-metrics-grafana/conf/ams-grafana.crt",
            "cert_key" : "/etc/ambari-metrics-grafana/conf/ams-grafana.key",
            "content" : "\n##################### Grafana Configuration Example #####################\n#\n# Everything has defaults so you only need to uncomment things you want to\n# change\n\n# possible values : production, development\n; app_mode = production\n\n#################################### Paths ####################################\n[paths]\n# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)\n#\n;data = /var/lib/grafana\ndata = {{ams_grafana_data_dir}}\n#\n# Directory where grafana can store logs\n#\n;logs = /var/log/grafana\nlogs = {{ams_grafana_log_dir}}\n\n\n#################################### Server ####################################\n[server]\n# Protocol (http or https)\n;protocol = http\nprotocol = {{ams_grafana_protocol}}\n# The ip address to bind to, empty will bind to all interfaces\n;http_addr =\n\n# The http port  to use\n;http_port = 3000\nhttp_port = {{ams_grafana_port}}\n\n# The public facing domain name used to access grafana from a browser\n;domain = localhost\n\n# Redirect to correct domain if host header does not match domain\n# Prevents DNS rebinding attacks\n;enforce_domain = false\n\n# The full public facing url\n;root_url = %(protocol)s://%(domain)s:%(http_port)s/\n\n# Log web requests\n;router_logging = false\n\n# the path relative working path\n;static_root_path = public\nstatic_root_path = /usr/lib/ambari-metrics-grafana/public\n\n# enable gzip\n;enable_gzip = false\n\n# https certs & key file\n;cert_file =\n;cert_key =\ncert_file = {{ams_grafana_cert_file}}\ncert_key = {{ams_grafana_cert_key}}\n\n#################################### Database ####################################\n[database]\n# Either \"mysql\", \"postgres\" or \"sqlite3\", it's your choice\n;type = sqlite3\n;host = 127.0.0.1:3306\n;name = grafana\n;user = root\n;password =\n\n# For \"postgres\" only, either \"disable\", \"require\" or \"verify-full\"\n;ssl_mode = disable\n\n# For \"sqlite3\" only, path relative to data_path setting\n;path = grafana.db\n\n#################################### Session ####################################\n[session]\n# Either \"memory\", \"file\", \"redis\", \"mysql\", \"postgres\", default is \"file\"\n;provider = file\n\n# Provider config options\n# memory: not have any config yet\n# file: session dir path, is relative to grafana data_path\n# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`\n# mysql: go-sql-driver/mysql dsn config string, e.g. `user:password@tcp(127.0.0.1:3306)/database_name`\n# postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable\n;provider_config = sessions\n\n# Session cookie name\n;cookie_name = grafana_sess\n\n# If you use session in https only, default is false\n;cookie_secure = false\n\n# Session life time, default is 86400\n;session_life_time = 86400\n\n#################################### Analytics ####################################\n[analytics]\n# Server reporting, sends usage counters to stats.grafana.org every 24 hours.\n# No ip addresses are being tracked, only simple counters to track\n# running instances, dashboard and error counts. It is very helpful to us.\n# Change this option to false to disable reporting.\n;reporting_enabled = true\n\n# Google Analytics universal tracking code, only enabled if you specify an id here\n;google_analytics_ua_id =\n\n#################################### Security ####################################\n[security]\n# default admin user, created on startup\nadmin_user = {{ams_grafana_admin_user}}\n\n# default admin password, can be changed before first start of grafana,  or in profile settings\nadmin_password = {{ams_grafana_admin_pwd}}\n\n# used for signing\n;secret_key = SW2YcwTIb9zpOOhoPsMm\n\n# Auto-login remember days\n;login_remember_days = 7\n;cookie_username = grafana_user\n;cookie_remember_name = grafana_remember\n\n# disable gravatar profile images\n;disable_gravatar = false\n\n# data source proxy whitelist (ip_or_domain:port seperated by spaces)\n;data_source_proxy_whitelist =\n\n#################################### Users ####################################\n[users]\n# disable user signup / registration\n;allow_sign_up = true\n\n# Allow non admin users to create organizations\n;allow_org_create = true\n\n# Set to true to automatically assign new users to the default organization (id 1)\n;auto_assign_org = true\n\n# Default role new users will be automatically assigned (if disabled above is set to true)\n;auto_assign_org_role = Viewer\n\n# Background text for the user field on the login page\n;login_hint = email or username\n\n#################################### Anonymous Auth ##########################\n[auth.anonymous]\n# enable anonymous access\nenabled = true\n\n# specify organization name that should be used for unauthenticated users\norg_name = Main Org.\n\n# specify role for unauthenticated users\n;org_role = Admin\n\n#################################### Github Auth ##########################\n[auth.github]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_id\n;client_secret = some_secret\n;scopes = user:email,read:org\n;auth_url = https://github.com/login/oauth/authorize\n;token_url = https://github.com/login/oauth/access_token\n;api_url = https://api.github.com/user\n;team_ids =\n;allowed_organizations =\n\n#################################### Google Auth ##########################\n[auth.google]\n;enabled = false\n;allow_sign_up = false\n;client_id = some_client_id\n;client_secret = some_client_secret\n;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email\n;auth_url = https://accounts.google.com/o/oauth2/auth\n;token_url = https://accounts.google.com/o/oauth2/token\n;api_url = https://www.googleapis.com/oauth2/v1/userinfo\n;allowed_domains =\n\n#################################### Auth Proxy ##########################\n[auth.proxy]\n;enabled = false\n;header_name = X-WEBAUTH-USER\n;header_property = username\n;auto_sign_up = true\n\n#################################### Basic Auth ##########################\n[auth.basic]\n;enabled = true\n\n#################################### Auth LDAP ##########################\n[auth.ldap]\n;enabled = false\n;config_file = /etc/grafana/ldap.toml\n\n#################################### SMTP / Emailing ##########################\n[smtp]\n;enabled = false\n;host = localhost:25\n;user =\n;password =\n;cert_file =\n;key_file =\n;skip_verify = false\n;from_address = admin@grafana.localhost\n\n[emails]\n;welcome_email_on_sign_up = false\n\n#################################### Logging ##########################\n[log]\n# Either \"console\", \"file\", default is \"console\"\n# Use comma to separate multiple modes, e.g. \"console, file\"\n;mode = console, file\n\n# Buffer length of channel, keep it as it is if you don't know what it is.\n;buffer_len = 10000\n\n# Either \"Trace\", \"Debug\", \"Info\", \"Warn\", \"Error\", \"Critical\", default is \"Trace\"\n;level = Info\n\n# For \"console\" mode only\n[log.console]\n;level =\n\n# For \"file\" mode only\n[log.file]\n;level =\n# This enables automated log rotate(switch of following options), default is true\n;log_rotate = true\n\n# Max line number of single file, default is 1000000\n;max_lines = 1000000\n\n# Max size shift of single file, default is 28 means 1 << 28, 256MB\n;max_lines_shift = 28\n\n# Segment log daily, default is true\n;daily_rotate = true\n\n# Expired days of log file(delete after max days), default is 7\n;max_days = 7\n\n#################################### AMPQ Event Publisher ##########################\n[event_publisher]\n;enabled = false\n;rabbitmq_url = amqp://localhost/\n;exchange = grafana_events\n\n;#################################### Dashboard JSON files ##########################\n[dashboards.json]\n;enabled = false\n;path = /var/lib/grafana/dashboards\npath = /usr/lib/ambari-metrics-grafana/public/dashboards",
            "port" : "3000",
            "protocol" : "http"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-security-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ams.zookeeper.keytab" : "",
            "ams.zookeeper.principal" : "",
            "hadoop.security.authentication" : "",
            "hbase.coprocessor.master.classes" : "",
            "hbase.coprocessor.region.classes" : "",
            "hbase.master.kerberos.principal" : "",
            "hbase.master.keytab.file" : "",
            "hbase.myclient.keytab" : "",
            "hbase.myclient.principal" : "",
            "hbase.regionserver.kerberos.principal" : "",
            "hbase.regionserver.keytab.file" : "",
            "hbase.security.authentication" : "",
            "hbase.security.authorization" : "",
            "hbase.zookeeper.property.authProvider.1" : "",
            "hbase.zookeeper.property.jaasLoginRenew" : "",
            "hbase.zookeeper.property.kerberos.removeHostFromPrincipal" : "",
            "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal" : ""
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-grafana-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Set environment variables here.\n\n# AMS UI Server Home Dir\nexport AMS_GRAFANA_HOME_DIR={{ams_grafana_home_dir}}\n\n# AMS UI Server Data Dir\nexport AMS_GRAFANA_DATA_DIR={{ams_grafana_data_dir}}\n\n# AMS UI Server Log Dir\nexport AMS_GRAFANA_LOG_DIR={{ams_grafana_log_dir}}\n\n# AMS UI Server PID Dir\nexport AMS_GRAFANA_PID_DIR={{ams_grafana_pid_dir}}",
            "metrics_grafana_data_dir" : "/var/lib/ambari-metrics-grafana",
            "metrics_grafana_log_dir" : "/var/log/ambari-metrics-grafana",
            "metrics_grafana_password" : "SECRET:ams-grafana-env:2:metrics_grafana_password",
            "metrics_grafana_pid_dir" : "/var/run/ambari-metrics-grafana",
            "metrics_grafana_username" : "admin"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6+ required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nadditional_cp={{hbase_classpath_additional}}\nif [  -n \"$additional_cp\" ];\nthen\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}:$additional_cp\nelse\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}\nfi\n\n# The maximum amount of heap to use for hbase shell.\nexport HBASE_SHELL_OPTS=\"-Xmx256m\"\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport HBASE_OPTS=\"-XX:+UseConcMarkSweepGC -XX:ErrorFile={{hbase_log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{hbase_tmp_dir}}\"\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n\n{% if java_version < 8 %}\nexport HBASE_MASTER_OPTS=\" -XX:PermSize=64m -XX:MaxPermSize={{hbase_master_maxperm_size}} -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\"-XX:MaxPermSize=128m -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% else %}\nexport HBASE_MASTER_OPTS=\" -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\" -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% endif %}\n\n\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{hbase_log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{hbase_pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{master_jaas_config_file}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\"\nexport HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS -Djava.security.auth.login.config={{ams_zookeeper_jaas_config_file}}\"\n{% endif %}\n\n# use embedded native libs\n_HADOOP_NATIVE_LIB=\"/usr/lib/ams-hbase/lib/hadoop-native/\"\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.library.path=${_HADOOP_NATIVE_LIB}\"\n\n# Unset HADOOP_HOME to avoid importing HADOOP installed cluster related configs like: /usr/hdp/2.2.0.0-2041/hadoop/conf/\nexport HADOOP_HOME={{ams_hbase_home_dir}}\n\n# Explicitly Setting HBASE_HOME for AMS HBase so that there is no conflict\nexport HBASE_HOME={{ams_hbase_home_dir}}",
            "hbase_classpath_additional" : "",
            "hbase_log_dir" : "/var/log/ambari-metrics-collector",
            "hbase_master_heapsize" : "768",
            "hbase_master_maxperm_size" : "128",
            "hbase_master_xmn_size" : "256",
            "hbase_pid_dir" : "/var/run/ambari-metrics-collector/",
            "hbase_regionserver_heapsize" : "768",
            "hbase_regionserver_shutdown_timeout" : "30",
            "hbase_regionserver_xmn_ratio" : "0.2",
            "max_open_files_limit" : "32768",
            "regionserver_xmn_size" : "128"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Define some default values that can be overridden by system properties\nams.log.dir=.\nams.log.file=ambari-metrics-collector.log\n\n# Root logger option\nlog4j.rootLogger=INFO,file\n\n# Direct log messages to a log file\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=${ams.log.dir}/${ams.log.file}\nlog4j.appender.file.MaxFileSize=80MB\nlog4j.appender.file.MaxBackupIndex=60\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ambari_metrics_user" : "ams",
            "content" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# Collector Log directory for log4j\nexport AMS_COLLECTOR_LOG_DIR={{ams_collector_log_dir}}\n\n# Monitor Log directory for outfile\nexport AMS_MONITOR_LOG_DIR={{ams_monitor_log_dir}}\n\n# Collector pid directory\nexport AMS_COLLECTOR_PID_DIR={{ams_collector_pid_dir}}\n\n# Monitor pid directory\nexport AMS_MONITOR_PID_DIR={{ams_monitor_pid_dir}}\n\n# AMS HBase pid directory\nexport AMS_HBASE_PID_DIR={{hbase_pid_dir}}\n\n# AMS Collector heapsize\nexport AMS_COLLECTOR_HEAPSIZE={{metrics_collector_heapsize}}\n\n# HBase normalizer enabled\nexport AMS_HBASE_NORMALIZER_ENABLED={{ams_hbase_normalizer_enabled}}\n\n# HBase compaction policy enabled\nexport AMS_HBASE_FIFO_COMPACTION_ENABLED={{ams_hbase_fifo_compaction_enabled}}\n\n# HBase Tables Initialization check enabled\nexport AMS_HBASE_INIT_CHECK_ENABLED={{ams_hbase_init_check_enabled}}\n\n# AMS Collector options\nexport AMS_COLLECTOR_OPTS=\"-Djava.library.path=/usr/lib/ams-hbase/lib/hadoop-native\"\n{% if security_enabled %}\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS -Djava.security.auth.login.config={{ams_collector_jaas_config_file}}\"\n{% endif %}\n\n# AMS Collector GC options\nexport AMS_COLLECTOR_GC_OPTS=\"-XX:+UseConcMarkSweepGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{ams_collector_log_dir}}/collector-gc.log-`date +'%Y%m%d%H%M'`\"\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS $AMS_COLLECTOR_GC_OPTS\"",
            "metrics_collector_heapsize" : "512",
            "metrics_collector_log_dir" : "/var/log/ambari-metrics-collector",
            "metrics_collector_pid_dir" : "/var/run/ambari-metrics-collector",
            "metrics_monitor_log_dir" : "/var/log/ambari-metrics-monitor",
            "metrics_monitor_pid_dir" : "/var/run/ambari-metrics-monitor"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-ssl-server",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ssl.server.keystore.keypassword" : "SECRET:ams-ssl-server:2:ssl.server.keystore.keypassword",
            "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
            "ssl.server.keystore.password" : "SECRET:ams-ssl-server:2:ssl.server.keystore.password",
            "ssl.server.keystore.type" : "jks",
            "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
            "ssl.server.truststore.password" : "SECRET:ams-ssl-server:2:ssl.server.truststore.password",
            "ssl.server.truststore.reload.interval" : "10000",
            "ssl.server.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "dfs.client.read.shortcircuit" : "true",
            "hbase.client.scanner.caching" : "10000",
            "hbase.client.scanner.timeout.period" : "300000",
            "hbase.cluster.distributed" : "false",
            "hbase.hregion.majorcompaction" : "0",
            "hbase.hregion.max.filesize" : "4294967296",
            "hbase.hregion.memstore.block.multiplier" : "4",
            "hbase.hregion.memstore.flush.size" : "134217728",
            "hbase.hstore.blockingStoreFiles" : "200",
            "hbase.hstore.flusher.count" : "2",
            "hbase.local.dir" : "${hbase.tmp.dir}/local",
            "hbase.master.info.bindAddress" : "0.0.0.0",
            "hbase.master.info.port" : "61310",
            "hbase.master.normalizer.class" : "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer",
            "hbase.master.port" : "61300",
            "hbase.master.wait.on.regionservers.mintostart" : "1",
            "hbase.normalizer.enabled" : "true",
            "hbase.normalizer.period" : "600000",
            "hbase.regionserver.global.memstore.lowerLimit" : "0.3",
            "hbase.regionserver.global.memstore.upperLimit" : "0.35",
            "hbase.regionserver.info.port" : "61330",
            "hbase.regionserver.port" : "61320",
            "hbase.regionserver.thread.compaction.large" : "2",
            "hbase.regionserver.thread.compaction.small" : "3",
            "hbase.replication" : "false",
            "hbase.rootdir" : "file:///var/lib/ambari-metrics-collector/hbase",
            "hbase.rpc.timeout" : "30000",
            "hbase.snapshot.enabled" : "false",
            "hbase.tmp.dir" : "/var/lib/ambari-metrics-collector/hbase-tmp",
            "hbase.zookeeper.leaderport" : "61388",
            "hbase.zookeeper.peerport" : "61288",
            "hbase.zookeeper.property.clientPort" : "{{zookeeper_clientPort}}",
            "hbase.zookeeper.property.dataDir" : "${hbase.tmp.dir}/zookeeper",
            "hbase.zookeeper.property.tickTime" : "6000",
            "hbase.zookeeper.quorum" : "{{zookeeper_quorum_hosts}}",
            "hfile.block.cache.size" : "0.3",
            "phoenix.coprocessor.maxMetaDataCacheSize" : "20480000",
            "phoenix.coprocessor.maxServerCacheTimeToLiveMs" : "60000",
            "phoenix.groupby.maxCacheSize" : "307200000",
            "phoenix.mutate.batchSize" : "10000",
            "phoenix.query.keepAliveMs" : "300000",
            "phoenix.query.maxGlobalMemoryPercentage" : "15",
            "phoenix.query.rowKeyOrderSaltedTable" : "true",
            "phoenix.query.spoolThresholdBytes" : "20971520",
            "phoenix.query.timeoutMs" : "300000",
            "phoenix.sequence.saltBuckets" : "2",
            "phoenix.spool.directory" : "${hbase.tmp.dir}/phoenix-spool",
            "zookeeper.session.timeout" : "120000",
            "zookeeper.session.timeout.localHBaseCluster" : "120000",
            "zookeeper.znode.parent" : "/ams-hbase-unsecure"
          },
          "properties_attributes" : {
            "hbase.zookeeper.quorum" : {
              "final" : "true"
            },
            "final" : {
              "hbase.zookeeper.quorum" : "true"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-hbase-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ams-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "phoenix.query.maxGlobalMemoryPercentage" : "25",
            "phoenix.spool.directory" : "/tmp",
            "timeline.metrics.aggregator.checkpoint.dir" : "/var/lib/ambari-metrics-collector/checkpoint",
            "timeline.metrics.aggregators.skip.blockcache.enabled" : "false",
            "timeline.metrics.cache.commit.interval" : "3",
            "timeline.metrics.cache.enabled" : "true",
            "timeline.metrics.cache.size" : "150",
            "timeline.metrics.cluster.aggregate.splitpoints" : "kafka.server.BrokerTopicMetrics.FailedFetchRequestsPerSec.meanRate",
            "timeline.metrics.cluster.aggregator.daily.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.cluster.aggregator.daily.disabled" : "false",
            "timeline.metrics.cluster.aggregator.daily.interval" : "86400",
            "timeline.metrics.cluster.aggregator.daily.ttl" : "63072000",
            "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.cluster.aggregator.hourly.disabled" : "false",
            "timeline.metrics.cluster.aggregator.hourly.interval" : "3600",
            "timeline.metrics.cluster.aggregator.hourly.ttl" : "31536000",
            "timeline.metrics.cluster.aggregator.interpolation.enabled" : "true",
            "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.cluster.aggregator.minute.disabled" : "false",
            "timeline.metrics.cluster.aggregator.minute.interval" : "300",
            "timeline.metrics.cluster.aggregator.minute.ttl" : "2592000",
            "timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.cluster.aggregator.second.disabled" : "false",
            "timeline.metrics.cluster.aggregator.second.interval" : "120",
            "timeline.metrics.cluster.aggregator.second.timeslice.interval" : "30",
            "timeline.metrics.cluster.aggregator.second.ttl" : "604800",
            "timeline.metrics.daily.aggregator.minute.interval" : "86400",
            "timeline.metrics.hbase.compression.scheme" : "SNAPPY",
            "timeline.metrics.hbase.data.block.encoding" : "FAST_DIFF",
            "timeline.metrics.hbase.fifo.compaction.enabled" : "true",
            "timeline.metrics.hbase.init.check.enabled" : "true",
            "timeline.metrics.host.aggregate.splitpoints" : "kafka.server.BrokerTopicMetrics.FailedFetchRequestsPerSec.meanRate",
            "timeline.metrics.host.aggregator.daily.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.host.aggregator.daily.disabled" : "false",
            "timeline.metrics.host.aggregator.daily.ttl" : "31536000",
            "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.host.aggregator.hourly.disabled" : "false",
            "timeline.metrics.host.aggregator.hourly.interval" : "3600",
            "timeline.metrics.host.aggregator.hourly.ttl" : "2592000",
            "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier" : "2",
            "timeline.metrics.host.aggregator.minute.disabled" : "false",
            "timeline.metrics.host.aggregator.minute.interval" : "300",
            "timeline.metrics.host.aggregator.minute.ttl" : "604800",
            "timeline.metrics.host.aggregator.ttl" : "86400",
            "timeline.metrics.service.checkpointDelay" : "60",
            "timeline.metrics.service.cluster.aggregator.appIds" : "datanode,nodemanager,hbase",
            "timeline.metrics.service.default.result.limit" : "15840",
            "timeline.metrics.service.handler.thread.count" : "20",
            "timeline.metrics.service.http.policy" : "HTTP_ONLY",
            "timeline.metrics.service.operation.mode" : "embedded",
            "timeline.metrics.service.resultset.fetchSize" : "2000",
            "timeline.metrics.service.rpc.address" : "0.0.0.0:60200",
            "timeline.metrics.service.use.groupBy.aggregators" : "true",
            "timeline.metrics.service.watcher.delay" : "30",
            "timeline.metrics.service.watcher.disabled" : "false",
            "timeline.metrics.service.watcher.initial.delay" : "600",
            "timeline.metrics.service.watcher.timeout" : "30",
            "timeline.metrics.service.webapp.address" : "sandbox.hortonworks.com:6188",
            "timeline.metrics.sink.collection.period" : "10",
            "timeline.metrics.sink.report.interval" : "60"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380380420,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "AMBARI_METRICS",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=ATLAS&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-atlas-policymgr-ssl",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/atlas-server/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-atlas-policymgr-ssl:1:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/atlas-server/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-atlas-policymgr-ssl:1:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-atlas-audit",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_1%:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/atlas/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "atlas-solrconfig",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<!--\n     ***\n     For more details about configurations options that may appear in\n     this file, see http://wiki.apache.org/solr/SolrConfigXml.\n-->\n<config>\n  <!-- In all configuration below, a prefix of \"solr.\" for class names\n       is an alias that causes solr to search appropriate packages,\n       including org.apache.solr.(search|update|request|core|analysis)\n\n       You may also specify a fully qualified Java classname if you\n       have your own custom plugins.\n    -->\n\n  <!-- Controls what version of Lucene various components of Solr\n       adhere to.  Generally, you want to use the latest version to\n       get all bug fixes and improvements. It is highly recommended\n       that you fully re-index after changing this setting as it can\n       affect both how text is indexed and queried.\n  -->\n  <luceneMatchVersion>5.5.1</luceneMatchVersion>\n\n  <!-- Data Directory\n\n       Used to specify an alternate directory to hold all index data\n       other than the default ./data under the Solr home.  If\n       replication is in use, this should match the replication\n       configuration.\n    -->\n  <dataDir>${solr.data.dir:}</dataDir>\n\n\n  <!-- The DirectoryFactory to use for indexes.\n\n       solr.StandardDirectoryFactory is filesystem\n       based and tries to pick the best implementation for the current\n       JVM and platform.  solr.NRTCachingDirectoryFactory, the default,\n       wraps solr.StandardDirectoryFactory and caches small files in memory\n       for better NRT performance.\n\n       One can force a particular implementation via solr.MMapDirectoryFactory,\n       solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory.\n\n       solr.RAMDirectoryFactory is memory based, not\n       persistent, and doesn't work with replication.\n    -->\n  <directoryFactory name=\"DirectoryFactory\"\n                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\">\n  </directoryFactory>\n\n  <!-- The CodecFactory for defining the format of the inverted index.\n       The default implementation is SchemaCodecFactory, which is the official Lucene\n       index format, but hooks into the schema to provide per-field customization of\n       the postings lists and per-document values in the fieldType element\n       (postingsFormat/docValuesFormat). Note that most of the alternative implementations\n       are experimental, so if you choose to customize the index format, it's a good\n       idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)\n       before upgrading to a newer version to avoid unnecessary reindexing.\n       A \"compressionMode\" string element can be added to <codecFactory> to choose\n       between the existing compression modes in the default codec: \"BEST_SPEED\" (default)\n       or \"BEST_COMPRESSION\".\n  -->\n  <codecFactory class=\"solr.SchemaCodecFactory\"/>\n\n  <!-- To disable dynamic schema REST APIs, use the following for <schemaFactory>:\n\n       <schemaFactory class=\"ClassicIndexSchemaFactory\"/>\n\n       When ManagedIndexSchemaFactory is specified instead, Solr will load the schema from\n       the resource named in 'managedSchemaResourceName', rather than from schema.xml.\n       Note that the managed schema resource CANNOT be named schema.xml.  If the managed\n       schema does not exist, Solr will create it after reading schema.xml, then rename\n       'schema.xml' to 'schema.xml.bak'.\n\n       Do NOT hand edit the managed schema - external modifications will be ignored and\n       overwritten as a result of schema modification REST API calls.\n\n       When ManagedIndexSchemaFactory is specified with mutable = true, schema\n       modification REST API calls will be allowed; otherwise, error responses will be\n       sent back for these requests.\n  -->\n  <schemaFactory class=\"ManagedIndexSchemaFactory\">\n    <bool name=\"mutable\">true</bool>\n    <str name=\"managedSchemaResourceName\">managed-schema</str>\n  </schemaFactory>\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Index Config - These settings control low-level behavior of indexing\n       Most example settings here show the default value, but are commented\n       out, to more easily see where customizations have been made.\n\n       Note: This replaces <indexDefaults> and <mainIndex> from older versions\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <indexConfig>\n\n    <!-- LockFactory\n\n         This option specifies which Lucene LockFactory implementation\n         to use.\n\n         single = SingleInstanceLockFactory - suggested for a\n                  read-only index or when there is no possibility of\n                  another process trying to modify the index.\n         native = NativeFSLockFactory - uses OS native file locking.\n                  Do not use when multiple solr webapps in the same\n                  JVM are attempting to share a single index.\n         simple = SimpleFSLockFactory  - uses a plain file for locking\n\n         Defaults: 'native' is default for Solr3.6 and later, otherwise\n                   'simple' is the default\n\n         More details on the nuances of each LockFactory...\n         http://wiki.apache.org/lucene-java/AvailableLockFactories\n    -->\n    <lockType>${solr.lock.type:native}</lockType>\n\n    <!-- Lucene Infostream\n\n         To aid in advanced debugging, Lucene provides an \"InfoStream\"\n         of detailed information when indexing.\n\n         Setting the value to true will instruct the underlying Lucene\n         IndexWriter to write its info stream to solr's log. By default,\n         this is enabled here, and controlled through log4j.properties.\n      -->\n    <infoStream>true</infoStream>\n  </indexConfig>\n\n\n  <!-- JMX\n\n       This example enables JMX if and only if an existing MBeanServer\n       is found, use this if you want to configure JMX through JVM\n       parameters. Remove this to disable exposing Solr configuration\n       and statistics to JMX.\n\n       For more details see http://wiki.apache.org/solr/SolrJmx\n    -->\n  <jmx />\n  <!-- If you want to connect to a particular server, specify the\n       agentId\n    -->\n  <!-- <jmx agentId=\"myAgent\" /> -->\n  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->\n  <!-- <jmx serviceUrl=\"service:jmx:rmi:///jndi/rmi://localhost:9999/solr\"/>\n    -->\n\n  <!-- The default high-performance update handler -->\n  <updateHandler class=\"solr.DirectUpdateHandler2\">\n\n    <!-- Enables a transaction log, used for real-time get, durability, and\n         and solr cloud replica recovery.  The log can grow as big as\n         uncommitted changes to the index, so use of a hard autoCommit\n         is recommended (see below).\n         \"dir\" - the target directory for transaction logs, defaults to the\n                solr data directory.\n         \"numVersionBuckets\" - sets the number of buckets used to keep\n                track of max version values when checking for re-ordered\n                updates; increase this value to reduce the cost of\n                synchronizing access to version buckets during high-volume\n                indexing, this requires 8 bytes (long) * numVersionBuckets\n                of heap space per Solr core.\n    -->\n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n      <int name=\"numVersionBuckets\">${solr.ulog.numVersionBuckets:65536}</int>\n    </updateLog>\n\n    <!-- AutoCommit\n\n         Perform a hard commit automatically under certain conditions.\n         Instead of enabling autoCommit, consider using \"commitWithin\"\n         when adding documents.\n\n         http://wiki.apache.org/solr/UpdateXmlMessages\n\n         maxDocs - Maximum number of documents to add since the last\n                   commit before automatically triggering a new commit.\n\n         maxTime - Maximum amount of time in ms that is allowed to pass\n                   since a document was added before automatically\n                   triggering a new commit.\n         openSearcher - if false, the commit causes recent index changes\n           to be flushed to stable storage, but does not cause a new\n           searcher to be opened to make those changes visible.\n\n         If the updateLog is enabled, then it's highly recommended to\n         have some sort of hard autoCommit to limit the log size.\n      -->\n    <autoCommit>\n      <maxTime>${solr.autoCommit.maxTime:15000}</maxTime>\n      <openSearcher>false</openSearcher>\n    </autoCommit>\n\n    <!-- softAutoCommit is like autoCommit except it causes a\n         'soft' commit which only ensures that changes are visible\n         but does not ensure that data is synced to disk.  This is\n         faster and more near-realtime friendly than a hard commit.\n      -->\n    <autoSoftCommit>\n      <maxTime>${solr.autoSoftCommit.maxTime:-1}</maxTime>\n    </autoSoftCommit>\n\n  </updateHandler>\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Query section - these settings control query time things like caches\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <query>\n    <!-- Max Boolean Clauses\n\n         Maximum number of clauses in each BooleanQuery,  an exception\n         is thrown if exceeded.\n\n         ** WARNING **\n\n         This option actually modifies a global Lucene property that\n         will affect all SolrCores.  If multiple solrconfig.xml files\n         disagree on this property, the value at any given moment will\n         be based on the last SolrCore to be initialized.\n\n      -->\n    <maxBooleanClauses>1024</maxBooleanClauses>\n\n\n    <!-- Solr Internal Query Caches\n\n         There are two implementations of cache available for Solr,\n         LRUCache, based on a synchronized LinkedHashMap, and\n         FastLRUCache, based on a ConcurrentHashMap.\n\n         FastLRUCache has faster gets and slower puts in single\n         threaded operation and thus is generally faster than LRUCache\n         when the hit ratio of the cache is high (> 75%), and may be\n         faster under other scenarios on multi-cpu systems.\n    -->\n\n    <!-- Filter Cache\n\n         Cache used by SolrIndexSearcher for filters (DocSets),\n         unordered sets of *all* documents that match a query.  When a\n         new searcher is opened, its caches may be prepopulated or\n         \"autowarmed\" using data from caches in the old searcher.\n         autowarmCount is the number of items to prepopulate.  For\n         LRUCache, the autowarmed items will be the most recently\n         accessed items.\n\n         Parameters:\n           class - the SolrCache implementation LRUCache or\n               (LRUCache or FastLRUCache)\n           size - the maximum number of entries in the cache\n           initialSize - the initial capacity (number of entries) of\n               the cache.  (see java.util.HashMap)\n           autowarmCount - the number of entries to prepopulate from\n               and old cache.\n      -->\n    <filterCache class=\"solr.FastLRUCache\"\n                 size=\"512\"\n                 initialSize=\"512\"\n                 autowarmCount=\"0\"/>\n\n    <!-- Query Result Cache\n\n        Caches results of searches - ordered lists of document ids\n        (DocList) based on a query, a sort, and the range of documents requested.\n        Additional supported parameter by LRUCache:\n           maxRamMB - the maximum amount of RAM (in MB) that this cache is allowed\n                      to occupy\n     -->\n    <queryResultCache class=\"solr.LRUCache\"\n                      size=\"512\"\n                      initialSize=\"512\"\n                      autowarmCount=\"0\"/>\n\n    <!-- Document Cache\n\n         Caches Lucene Document objects (the stored fields for each\n         document).  Since Lucene internal document ids are transient,\n         this cache will not be autowarmed.\n      -->\n    <documentCache class=\"solr.LRUCache\"\n                   size=\"512\"\n                   initialSize=\"512\"\n                   autowarmCount=\"0\"/>\n\n    <!-- custom cache currently used by block join -->\n    <cache name=\"perSegFilter\"\n           class=\"solr.search.LRUCache\"\n           size=\"10\"\n           initialSize=\"0\"\n           autowarmCount=\"10\"\n           regenerator=\"solr.NoOpRegenerator\" />\n\n    <!-- Lazy Field Loading\n\n         If true, stored fields that are not requested will be loaded\n         lazily.  This can result in a significant speed improvement\n         if the usual case is to not load all stored fields,\n         especially if the skipped fields are large compressed text\n         fields.\n    -->\n    <enableLazyFieldLoading>true</enableLazyFieldLoading>\n\n    <!-- Result Window Size\n\n         An optimization for use with the queryResultCache.  When a search\n         is requested, a superset of the requested number of document ids\n         are collected.  For example, if a search for a particular query\n         requests matching documents 10 through 19, and queryWindowSize is 50,\n         then documents 0 through 49 will be collected and cached.  Any further\n         requests in that range can be satisfied via the cache.\n      -->\n    <queryResultWindowSize>20</queryResultWindowSize>\n\n    <!-- Maximum number of documents to cache for any entry in the\n         queryResultCache.\n      -->\n    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>\n\n    <!-- Use Cold Searcher\n\n         If a search request comes in and there is no current\n         registered searcher, then immediately register the still\n         warming searcher and use it.  If \"false\" then all requests\n         will block until the first searcher is done warming.\n      -->\n    <useColdSearcher>false</useColdSearcher>\n\n    <!-- Max Warming Searchers\n\n         Maximum number of searchers that may be warming in the\n         background concurrently.  An error is returned if this limit\n         is exceeded.\n\n         Recommend values of 1-2 for read-only slaves, higher for\n         masters w/o cache warming.\n      -->\n    <maxWarmingSearchers>2</maxWarmingSearchers>\n\n  </query>\n\n\n  <!-- Request Dispatcher\n\n       This section contains instructions for how the SolrDispatchFilter\n       should behave when processing requests for this SolrCore.\n\n       handleSelect is a legacy option that affects the behavior of requests\n       such as /select?qt=XXX\n\n       handleSelect=\"true\" will cause the SolrDispatchFilter to process\n       the request and dispatch the query to a handler specified by the\n       \"qt\" param, assuming \"/select\" isn't already registered.\n\n       handleSelect=\"false\" will cause the SolrDispatchFilter to\n       ignore \"/select\" requests, resulting in a 404 unless a handler\n       is explicitly registered with the name \"/select\"\n\n       handleSelect=\"true\" is not recommended for new users, but is the default\n       for backwards compatibility\n    -->\n  <requestDispatcher handleSelect=\"false\" >\n    <!-- Request Parsing\n\n         These settings indicate how Solr Requests may be parsed, and\n         what restrictions may be placed on the ContentStreams from\n         those requests\n\n         enableRemoteStreaming - enables use of the stream.file\n         and stream.url parameters for specifying remote streams.\n\n         multipartUploadLimitInKB - specifies the max size (in KiB) of\n         Multipart File Uploads that Solr will allow in a Request.\n\n         formdataUploadLimitInKB - specifies the max size (in KiB) of\n         form data (application/x-www-form-urlencoded) sent via\n         POST. You can use POST to pass request parameters not\n         fitting into the URL.\n\n         addHttpRequestToContext - if set to true, it will instruct\n         the requestParsers to include the original HttpServletRequest\n         object in the context map of the SolrQueryRequest under the\n         key \"httpRequest\". It will not be used by any of the existing\n         Solr components, but may be useful when developing custom\n         plugins.\n\n         *** WARNING ***\n         The settings below authorize Solr to fetch remote files, You\n         should make sure your system has some authentication before\n         using enableRemoteStreaming=\"true\"\n\n      -->\n    <requestParsers enableRemoteStreaming=\"true\"\n                    multipartUploadLimitInKB=\"2048000\"\n                    formdataUploadLimitInKB=\"2048\"\n                    addHttpRequestToContext=\"false\"/>\n\n    <!-- HTTP Caching\n\n         Set HTTP caching related parameters (for proxy caches and clients).\n\n         The options below instruct Solr not to output any HTTP Caching\n         related headers\n      -->\n    <httpCaching never304=\"true\" />\n\n  </requestDispatcher>\n\n  <!-- Request Handlers\n\n       http://wiki.apache.org/solr/SolrRequestHandler\n\n       Incoming queries will be dispatched to a specific handler by name\n       based on the path specified in the request.\n\n       Legacy behavior: If the request path uses \"/select\" but no Request\n       Handler has that name, and if handleSelect=\"true\" has been specified in\n       the requestDispatcher, then the Request Handler is dispatched based on\n       the qt parameter.  Handlers without a leading '/' are accessed this way\n       like so: http://host/app/[core/]select?qt=name  If no qt is\n       given, then the requestHandler that declares default=\"true\" will be\n       used or the one named \"standard\".\n\n       If a Request Handler is declared with startup=\"lazy\", then it will\n       not be initialized until the first request that uses it.\n\n    -->\n  <!-- SearchHandler\n\n       http://wiki.apache.org/solr/SearchHandler\n\n       For processing Search Queries, the primary Request Handler\n       provided with Solr is \"SearchHandler\" It delegates to a sequent\n       of SearchComponents (see below) and supports distributed\n       queries across multiple shards\n    -->\n  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n    <!-- default values for query parameters can be specified, these\n         will be overridden by parameters in the request\n      -->\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <int name=\"rows\">10</int>\n    </lst>\n\n  </requestHandler>\n\n  <!-- A request handler that returns indented JSON by default -->\n  <requestHandler name=\"/query\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"wt\">json</str>\n      <str name=\"indent\">true</str>\n      <str name=\"df\">text</str>\n    </lst>\n  </requestHandler>\n\n  <!--\n    The export request handler is used to export full sorted result sets.\n    Do not change these defaults.\n  -->\n  <requestHandler name=\"/export\" class=\"solr.SearchHandler\">\n    <lst name=\"invariants\">\n      <str name=\"rq\">{!xport}</str>\n      <str name=\"wt\">xsort</str>\n      <str name=\"distrib\">false</str>\n    </lst>\n\n    <arr name=\"components\">\n      <str>query</str>\n    </arr>\n  </requestHandler>\n\n\n  <initParams path=\"/update/**,/query,/select,/tvrh,/elevate,/spell\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n    </lst>\n  </initParams>\n\n  <!-- Field Analysis Request Handler\n\n       RequestHandler that provides much the same functionality as\n       analysis.jsp. Provides the ability to specify multiple field\n       types and field names in the same request and outputs\n       index-time and query-time analysis for each of them.\n\n       Request parameters are:\n       analysis.fieldname - field name whose analyzers are to be used\n\n       analysis.fieldtype - field type whose analyzers are to be used\n       analysis.fieldvalue - text for index-time analysis\n       q (or analysis.q) - text for query time analysis\n       analysis.showmatch (true|false) - When set to true and when\n           query analysis is performed, the produced tokens of the\n           field value analysis will be marked as \"matched\" for every\n           token that is produces by the query analysis\n   -->\n  <requestHandler name=\"/analysis/field\"\n                  startup=\"lazy\"\n                  class=\"solr.FieldAnalysisRequestHandler\" />\n\n\n  <!-- Document Analysis Handler\n\n       http://wiki.apache.org/solr/AnalysisRequestHandler\n\n       An analysis handler that provides a breakdown of the analysis\n       process of provided documents. This handler expects a (single)\n       content stream with the following format:\n\n       <docs>\n         <doc>\n           <field name=\"id\">1</field>\n           <field name=\"name\">The Name</field>\n           <field name=\"text\">The Text Value</field>\n         </doc>\n         <doc>...</doc>\n         <doc>...</doc>\n         ...\n       </docs>\n\n    Note: Each document must contain a field which serves as the\n    unique key. This key is used in the returned response to associate\n    an analysis breakdown to the analyzed document.\n\n    Like the FieldAnalysisRequestHandler, this handler also supports\n    query analysis by sending either an \"analysis.query\" or \"q\"\n    request parameter that holds the query text to be analyzed. It\n    also supports the \"analysis.showmatch\" parameter which when set to\n    true, all field tokens that match the query tokens will be marked\n    as a \"match\".\n  -->\n  <requestHandler name=\"/analysis/document\"\n                  class=\"solr.DocumentAnalysisRequestHandler\"\n                  startup=\"lazy\" />\n\n  <!-- Echo the request contents back to the client -->\n  <requestHandler name=\"/debug/dump\" class=\"solr.DumpRequestHandler\" >\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"echoHandler\">true</str>\n    </lst>\n  </requestHandler>\n\n\n\n  <!-- Search Components\n\n       Search components are registered to SolrCore and used by\n       instances of SearchHandler (which can access them by name)\n\n       By default, the following components are available:\n\n       <searchComponent name=\"query\"     class=\"solr.QueryComponent\" />\n       <searchComponent name=\"facet\"     class=\"solr.FacetComponent\" />\n       <searchComponent name=\"mlt\"       class=\"solr.MoreLikeThisComponent\" />\n       <searchComponent name=\"highlight\" class=\"solr.HighlightComponent\" />\n       <searchComponent name=\"stats\"     class=\"solr.StatsComponent\" />\n       <searchComponent name=\"debug\"     class=\"solr.DebugComponent\" />\n\n     -->\n\n  <!-- Terms Component\n\n       http://wiki.apache.org/solr/TermsComponent\n\n       A component to return terms and document frequency of those\n       terms\n    -->\n  <searchComponent name=\"terms\" class=\"solr.TermsComponent\"/>\n\n  <!-- A request handler for demonstrating the terms component -->\n  <requestHandler name=\"/terms\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <bool name=\"terms\">true</bool>\n      <bool name=\"distrib\">false</bool>\n    </lst>\n    <arr name=\"components\">\n      <str>terms</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Legacy config for the admin interface -->\n  <admin>\n    <defaultQuery>*:*</defaultQuery>\n  </admin>\n\n</config>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "atlas-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "atlas_server_max_new_size" : "600",
            "atlas_server_metadata_size" : "50000",
            "atlas_server_xmx" : "2048",
            "atlas_solr_shards" : "1",
            "content" : "\n      # The java implementation to use. If JAVA_HOME is not found we expect java and jar to be in path\n      export JAVA_HOME={{java64_home}}\n\n      # any additional java opts you want to set. This will apply to both client and server operations\n      {% if security_enabled %}\n      export ATLAS_OPTS=\"{{metadata_opts}} -Djava.security.auth.login.config={{atlas_jaas_file}}\"\n      {% else %}\n      export ATLAS_OPTS=\"{{metadata_opts}}\"\n      {% endif %}\n\n      # metadata configuration directory\n      export ATLAS_CONF={{conf_dir}}\n\n      # Where log files are stored. Defatult is logs directory under the base install location\n      export ATLAS_LOG_DIR={{log_dir}}\n\n      # additional classpath entries\n      export ATLASCPPATH={{metadata_classpath}}\n\n      # data dir\n      export ATLAS_DATA_DIR={{data_dir}}\n\n      # pid dir\n      export ATLAS_PID_DIR={{pid_dir}}\n\n      # hbase conf dir\n      export HBASE_CONF_DIR={{hbase_conf_dir}}\n\n      # Where do you want to expand the war file. By Default it is in /server/webapp dir under the base install dir.\n      export ATLAS_EXPANDED_WEBAPP_DIR={{expanded_war_dir}}\n      export ATLAS_SERVER_OPTS=\"-server -XX:SoftRefLRUPolicyMSPerMB=0 -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+PrintTenuringDistribution -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$ATLAS_LOG_DIR/atlas_server.hprof -Xloggc:$ATLAS_LOG_DIRgc-worker.log -verbose:gc -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1m -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCTimeStamps\"\n      {% if java_version == 8 %}\n      export ATLAS_SERVER_HEAP=\"-Xms{{atlas_server_xmx}}m -Xmx{{atlas_server_xmx}}m -XX:MaxNewSize={{atlas_server_max_new_size}}m \"\n      {% else %}\n      export ATLAS_SERVER_HEAP=\"-Xms{{atlas_server_xmx}}m -Xmx{{atlas_server_xmx}}m -XX:MaxNewSize={{atlas_server_max_new_size}}m -XX:MaxPermSize=512m\"\n      {% endif %}",
            "metadata_classpath" : " ",
            "metadata_conf_file" : "atlas-application.properties",
            "metadata_data_dir" : "/var/lib/atlas/data",
            "metadata_expanded_war_dir" : "./server/webapp",
            "metadata_log_dir" : "/var/log/atlas",
            "metadata_opts" : "-Dlog4j.configuration=atlas-log4j.xml",
            "metadata_pid_dir" : "/var/run/atlas",
            "metadata_user" : "atlas"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "atlas-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "atlas_log_level" : "info",
            "audit_log_level" : "OFF",
            "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one\n  ~ or more contributor license agreements.  See the NOTICE file\n  ~ distributed with this work for additional information\n  ~ regarding copyright ownership.  The ASF licenses this file\n  ~ to you under the Apache License, Version 2.0 (the\n  ~ \"License\"); you may not use this file except in compliance\n  ~ with the License.  You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n\n<log4j:configuration xmlns:log4j=\"http://jakarta.apache.org/log4j/\">\n  <appender name=\"console\" class=\"org.apache.log4j.ConsoleAppender\">\n    <param name=\"Target\" value=\"System.out\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d %-5p - [%t:%x] ~ %m (%c{1}:%L)%n\"/>\n    </layout>\n  </appender>\n\n  <appender name=\"FILE\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n    <param name=\"File\" value=\"{{log_dir}}/application.log\"/>\n    <param name=\"Append\" value=\"true\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d %-5p - [%t:%x] ~ %m (%c{1}:%L)%n\"/>\n    </layout>\n  </appender>\n\n  <appender name=\"AUDIT\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n    <param name=\"File\" value=\"{{log_dir}}/audit.log\"/>\n    <param name=\"Append\" value=\"true\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d %x %m%n\"/>\n    </layout>\n  </appender>\n\n  <logger name=\"org.apache.atlas\" additivity=\"false\">\n    <level value=\"{{atlas_log_level}}\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n\n  <logger name=\"com.thinkaurelius.titan\" additivity=\"false\">\n    <level value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n  <logger name=\"org.elasticsearch\" additivity=\"false\">\n    <level value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n  <logger name=\"org.apache.lucene\" additivity=\"false\">\n    <level value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n  <logger name=\"com.google\" additivity=\"false\">\n    <level value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n  <logger name=\"AUDIT\">\n    <level value=\"{{audit_log_level}}\"/>\n    <appender-ref ref=\"AUDIT\"/>\n  </logger>\n\n  <root>\n    <priority value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n\n</log4j:configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-atlas-security",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.plugin.atlas.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.atlas.policy.pollIntervalMs" : "30000",
            "ranger.plugin.atlas.policy.rest.ssl.config.file" : "/usr/hdp/current/atlas-server/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.atlas.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.atlas.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.atlas.service.name" : "{{repo_name}}",
            "xasecure.add-hadoop-authorization" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "application-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "atlas.audit.hbase.tablename" : "ATLAS_ENTITY_AUDIT_EVENTS",
            "atlas.audit.hbase.zookeeper.quorum" : "%HOSTGROUP::host_group_1%",
            "atlas.audit.zookeeper.session.timeout.ms" : "1000",
            "atlas.auth.policy.file" : "{{conf_dir}}/policy-store.txt",
            "atlas.authentication.keytab" : "/etc/security/keytabs/atlas.service.keytab",
            "atlas.authentication.method.file" : "true",
            "atlas.authentication.method.file.filename" : "{{conf_dir}}/users-credentials.properties",
            "atlas.authentication.method.kerberos" : "false",
            "atlas.authentication.method.ldap" : "false",
            "atlas.authentication.method.ldap.ad.base.dn" : "",
            "atlas.authentication.method.ldap.ad.bind.dn" : "",
            "atlas.authentication.method.ldap.ad.bind.password" : "",
            "atlas.authentication.method.ldap.ad.default.role" : "ROLE_USER",
            "atlas.authentication.method.ldap.ad.domain" : "",
            "atlas.authentication.method.ldap.ad.referral" : "ignore",
            "atlas.authentication.method.ldap.ad.url" : "",
            "atlas.authentication.method.ldap.ad.user.searchfilter" : "(sAMAccountName={0})",
            "atlas.authentication.method.ldap.base.dn" : "",
            "atlas.authentication.method.ldap.bind.dn" : "",
            "atlas.authentication.method.ldap.bind.password" : "",
            "atlas.authentication.method.ldap.default.role" : "ROLE_USER",
            "atlas.authentication.method.ldap.groupRoleAttribute" : "cn",
            "atlas.authentication.method.ldap.groupSearchBase" : "",
            "atlas.authentication.method.ldap.groupSearchFilter" : "",
            "atlas.authentication.method.ldap.referral" : "ignore",
            "atlas.authentication.method.ldap.type" : "none",
            "atlas.authentication.method.ldap.url" : "",
            "atlas.authentication.method.ldap.user.searchfilter" : "",
            "atlas.authentication.method.ldap.userDNpattern" : "uid=",
            "atlas.authentication.principal" : "atlas",
            "atlas.authorizer.impl" : "ranger",
            "atlas.cluster.name" : "{{cluster_name}}",
            "atlas.enableTLS" : "false",
            "atlas.graph.index.search.backend" : "solr5",
            "atlas.graph.index.search.solr.mode" : "cloud",
            "atlas.graph.index.search.solr.zookeeper-url" : "%HOSTGROUP::host_group_1%:2181/infra-solr",
            "atlas.graph.storage.backend" : "hbase",
            "atlas.graph.storage.hbase.table" : "atlas_titan",
            "atlas.graph.storage.hostname" : "%HOSTGROUP::host_group_1%",
            "atlas.hook.falcon.queueSize" : "1000",
            "atlas.kafka.auto.commit.enable" : "false",
            "atlas.kafka.bootstrap.servers" : "%HOSTGROUP::host_group_1%:6667",
            "atlas.kafka.hook.group.id" : "atlas",
            "atlas.kafka.zookeeper.connect" : "%HOSTGROUP::host_group_1%:2181",
            "atlas.kafka.zookeeper.connection.timeout.ms" : "200",
            "atlas.kafka.zookeeper.session.timeout.ms" : "400",
            "atlas.kafka.zookeeper.sync.time.ms" : "20",
            "atlas.lineage.schema.query.Table" : "Table where __guid='%s'\\, columns",
            "atlas.lineage.schema.query.hive_table" : "hive_table where __guid='%s'\\, columns",
            "atlas.notification.create.topics" : "true",
            "atlas.notification.embedded" : "false",
            "atlas.notification.replicas" : "1",
            "atlas.notification.topics" : "ATLAS_HOOK,ATLAS_ENTITIES",
            "atlas.rest.address" : "http://sandbox.hortonworks.com:21000",
            "atlas.server.bind.address" : "%HOSTGROUP::host_group_1%",
            "atlas.server.http.port" : "21000",
            "atlas.server.https.port" : "21443",
            "atlas.solr.kerberos.enable" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-atlas-plugin-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-atlas-plugin-properties:1:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "atlas",
            "common.name.for.certificate" : "",
            "policy_user" : "ambari-qa",
            "ranger-atlas-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380371037,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "ATLAS",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=ATLAS&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-atlas-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/atlas-server/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-atlas-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/atlas-server/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-atlas-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-atlas-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/atlas/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "atlas-solrconfig",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<!--\n     ***\n     For more details about configurations options that may appear in\n     this file, see http://wiki.apache.org/solr/SolrConfigXml.\n-->\n<config>\n  <!-- In all configuration below, a prefix of \"solr.\" for class names\n       is an alias that causes solr to search appropriate packages,\n       including org.apache.solr.(search|update|request|core|analysis)\n\n       You may also specify a fully qualified Java classname if you\n       have your own custom plugins.\n    -->\n\n  <!-- Controls what version of Lucene various components of Solr\n       adhere to.  Generally, you want to use the latest version to\n       get all bug fixes and improvements. It is highly recommended\n       that you fully re-index after changing this setting as it can\n       affect both how text is indexed and queried.\n  -->\n  <luceneMatchVersion>5.5.1</luceneMatchVersion>\n\n  <!-- Data Directory\n\n       Used to specify an alternate directory to hold all index data\n       other than the default ./data under the Solr home.  If\n       replication is in use, this should match the replication\n       configuration.\n    -->\n  <dataDir>${solr.data.dir:}</dataDir>\n\n\n  <!-- The DirectoryFactory to use for indexes.\n\n       solr.StandardDirectoryFactory is filesystem\n       based and tries to pick the best implementation for the current\n       JVM and platform.  solr.NRTCachingDirectoryFactory, the default,\n       wraps solr.StandardDirectoryFactory and caches small files in memory\n       for better NRT performance.\n\n       One can force a particular implementation via solr.MMapDirectoryFactory,\n       solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory.\n\n       solr.RAMDirectoryFactory is memory based, not\n       persistent, and doesn't work with replication.\n    -->\n  <directoryFactory name=\"DirectoryFactory\"\n                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\">\n  </directoryFactory>\n\n  <!-- The CodecFactory for defining the format of the inverted index.\n       The default implementation is SchemaCodecFactory, which is the official Lucene\n       index format, but hooks into the schema to provide per-field customization of\n       the postings lists and per-document values in the fieldType element\n       (postingsFormat/docValuesFormat). Note that most of the alternative implementations\n       are experimental, so if you choose to customize the index format, it's a good\n       idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)\n       before upgrading to a newer version to avoid unnecessary reindexing.\n       A \"compressionMode\" string element can be added to <codecFactory> to choose\n       between the existing compression modes in the default codec: \"BEST_SPEED\" (default)\n       or \"BEST_COMPRESSION\".\n  -->\n  <codecFactory class=\"solr.SchemaCodecFactory\"/>\n\n  <!-- To disable dynamic schema REST APIs, use the following for <schemaFactory>:\n\n       <schemaFactory class=\"ClassicIndexSchemaFactory\"/>\n\n       When ManagedIndexSchemaFactory is specified instead, Solr will load the schema from\n       the resource named in 'managedSchemaResourceName', rather than from schema.xml.\n       Note that the managed schema resource CANNOT be named schema.xml.  If the managed\n       schema does not exist, Solr will create it after reading schema.xml, then rename\n       'schema.xml' to 'schema.xml.bak'.\n\n       Do NOT hand edit the managed schema - external modifications will be ignored and\n       overwritten as a result of schema modification REST API calls.\n\n       When ManagedIndexSchemaFactory is specified with mutable = true, schema\n       modification REST API calls will be allowed; otherwise, error responses will be\n       sent back for these requests.\n  -->\n  <schemaFactory class=\"ManagedIndexSchemaFactory\">\n    <bool name=\"mutable\">true</bool>\n    <str name=\"managedSchemaResourceName\">managed-schema</str>\n  </schemaFactory>\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Index Config - These settings control low-level behavior of indexing\n       Most example settings here show the default value, but are commented\n       out, to more easily see where customizations have been made.\n\n       Note: This replaces <indexDefaults> and <mainIndex> from older versions\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <indexConfig>\n\n    <!-- LockFactory\n\n         This option specifies which Lucene LockFactory implementation\n         to use.\n\n         single = SingleInstanceLockFactory - suggested for a\n                  read-only index or when there is no possibility of\n                  another process trying to modify the index.\n         native = NativeFSLockFactory - uses OS native file locking.\n                  Do not use when multiple solr webapps in the same\n                  JVM are attempting to share a single index.\n         simple = SimpleFSLockFactory  - uses a plain file for locking\n\n         Defaults: 'native' is default for Solr3.6 and later, otherwise\n                   'simple' is the default\n\n         More details on the nuances of each LockFactory...\n         http://wiki.apache.org/lucene-java/AvailableLockFactories\n    -->\n    <lockType>${solr.lock.type:native}</lockType>\n\n    <!-- Lucene Infostream\n\n         To aid in advanced debugging, Lucene provides an \"InfoStream\"\n         of detailed information when indexing.\n\n         Setting the value to true will instruct the underlying Lucene\n         IndexWriter to write its info stream to solr's log. By default,\n         this is enabled here, and controlled through log4j.properties.\n      -->\n    <infoStream>true</infoStream>\n  </indexConfig>\n\n\n  <!-- JMX\n\n       This example enables JMX if and only if an existing MBeanServer\n       is found, use this if you want to configure JMX through JVM\n       parameters. Remove this to disable exposing Solr configuration\n       and statistics to JMX.\n\n       For more details see http://wiki.apache.org/solr/SolrJmx\n    -->\n  <jmx />\n  <!-- If you want to connect to a particular server, specify the\n       agentId\n    -->\n  <!-- <jmx agentId=\"myAgent\" /> -->\n  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->\n  <!-- <jmx serviceUrl=\"service:jmx:rmi:///jndi/rmi://localhost:9999/solr\"/>\n    -->\n\n  <!-- The default high-performance update handler -->\n  <updateHandler class=\"solr.DirectUpdateHandler2\">\n\n    <!-- Enables a transaction log, used for real-time get, durability, and\n         and solr cloud replica recovery.  The log can grow as big as\n         uncommitted changes to the index, so use of a hard autoCommit\n         is recommended (see below).\n         \"dir\" - the target directory for transaction logs, defaults to the\n                solr data directory.\n         \"numVersionBuckets\" - sets the number of buckets used to keep\n                track of max version values when checking for re-ordered\n                updates; increase this value to reduce the cost of\n                synchronizing access to version buckets during high-volume\n                indexing, this requires 8 bytes (long) * numVersionBuckets\n                of heap space per Solr core.\n    -->\n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n      <int name=\"numVersionBuckets\">${solr.ulog.numVersionBuckets:65536}</int>\n    </updateLog>\n\n    <!-- AutoCommit\n\n         Perform a hard commit automatically under certain conditions.\n         Instead of enabling autoCommit, consider using \"commitWithin\"\n         when adding documents.\n\n         http://wiki.apache.org/solr/UpdateXmlMessages\n\n         maxDocs - Maximum number of documents to add since the last\n                   commit before automatically triggering a new commit.\n\n         maxTime - Maximum amount of time in ms that is allowed to pass\n                   since a document was added before automatically\n                   triggering a new commit.\n         openSearcher - if false, the commit causes recent index changes\n           to be flushed to stable storage, but does not cause a new\n           searcher to be opened to make those changes visible.\n\n         If the updateLog is enabled, then it's highly recommended to\n         have some sort of hard autoCommit to limit the log size.\n      -->\n    <autoCommit>\n      <maxTime>${solr.autoCommit.maxTime:15000}</maxTime>\n      <openSearcher>false</openSearcher>\n    </autoCommit>\n\n    <!-- softAutoCommit is like autoCommit except it causes a\n         'soft' commit which only ensures that changes are visible\n         but does not ensure that data is synced to disk.  This is\n         faster and more near-realtime friendly than a hard commit.\n      -->\n    <autoSoftCommit>\n      <maxTime>${solr.autoSoftCommit.maxTime:-1}</maxTime>\n    </autoSoftCommit>\n\n  </updateHandler>\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Query section - these settings control query time things like caches\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <query>\n    <!-- Max Boolean Clauses\n\n         Maximum number of clauses in each BooleanQuery,  an exception\n         is thrown if exceeded.\n\n         ** WARNING **\n\n         This option actually modifies a global Lucene property that\n         will affect all SolrCores.  If multiple solrconfig.xml files\n         disagree on this property, the value at any given moment will\n         be based on the last SolrCore to be initialized.\n\n      -->\n    <maxBooleanClauses>1024</maxBooleanClauses>\n\n\n    <!-- Solr Internal Query Caches\n\n         There are two implementations of cache available for Solr,\n         LRUCache, based on a synchronized LinkedHashMap, and\n         FastLRUCache, based on a ConcurrentHashMap.\n\n         FastLRUCache has faster gets and slower puts in single\n         threaded operation and thus is generally faster than LRUCache\n         when the hit ratio of the cache is high (> 75%), and may be\n         faster under other scenarios on multi-cpu systems.\n    -->\n\n    <!-- Filter Cache\n\n         Cache used by SolrIndexSearcher for filters (DocSets),\n         unordered sets of *all* documents that match a query.  When a\n         new searcher is opened, its caches may be prepopulated or\n         \"autowarmed\" using data from caches in the old searcher.\n         autowarmCount is the number of items to prepopulate.  For\n         LRUCache, the autowarmed items will be the most recently\n         accessed items.\n\n         Parameters:\n           class - the SolrCache implementation LRUCache or\n               (LRUCache or FastLRUCache)\n           size - the maximum number of entries in the cache\n           initialSize - the initial capacity (number of entries) of\n               the cache.  (see java.util.HashMap)\n           autowarmCount - the number of entries to prepopulate from\n               and old cache.\n      -->\n    <filterCache class=\"solr.FastLRUCache\"\n                 size=\"512\"\n                 initialSize=\"512\"\n                 autowarmCount=\"0\"/>\n\n    <!-- Query Result Cache\n\n        Caches results of searches - ordered lists of document ids\n        (DocList) based on a query, a sort, and the range of documents requested.\n        Additional supported parameter by LRUCache:\n           maxRamMB - the maximum amount of RAM (in MB) that this cache is allowed\n                      to occupy\n     -->\n    <queryResultCache class=\"solr.LRUCache\"\n                      size=\"512\"\n                      initialSize=\"512\"\n                      autowarmCount=\"0\"/>\n\n    <!-- Document Cache\n\n         Caches Lucene Document objects (the stored fields for each\n         document).  Since Lucene internal document ids are transient,\n         this cache will not be autowarmed.\n      -->\n    <documentCache class=\"solr.LRUCache\"\n                   size=\"512\"\n                   initialSize=\"512\"\n                   autowarmCount=\"0\"/>\n\n    <!-- custom cache currently used by block join -->\n    <cache name=\"perSegFilter\"\n           class=\"solr.search.LRUCache\"\n           size=\"10\"\n           initialSize=\"0\"\n           autowarmCount=\"10\"\n           regenerator=\"solr.NoOpRegenerator\" />\n\n    <!-- Lazy Field Loading\n\n         If true, stored fields that are not requested will be loaded\n         lazily.  This can result in a significant speed improvement\n         if the usual case is to not load all stored fields,\n         especially if the skipped fields are large compressed text\n         fields.\n    -->\n    <enableLazyFieldLoading>true</enableLazyFieldLoading>\n\n    <!-- Result Window Size\n\n         An optimization for use with the queryResultCache.  When a search\n         is requested, a superset of the requested number of document ids\n         are collected.  For example, if a search for a particular query\n         requests matching documents 10 through 19, and queryWindowSize is 50,\n         then documents 0 through 49 will be collected and cached.  Any further\n         requests in that range can be satisfied via the cache.\n      -->\n    <queryResultWindowSize>20</queryResultWindowSize>\n\n    <!-- Maximum number of documents to cache for any entry in the\n         queryResultCache.\n      -->\n    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>\n\n    <!-- Use Cold Searcher\n\n         If a search request comes in and there is no current\n         registered searcher, then immediately register the still\n         warming searcher and use it.  If \"false\" then all requests\n         will block until the first searcher is done warming.\n      -->\n    <useColdSearcher>false</useColdSearcher>\n\n    <!-- Max Warming Searchers\n\n         Maximum number of searchers that may be warming in the\n         background concurrently.  An error is returned if this limit\n         is exceeded.\n\n         Recommend values of 1-2 for read-only slaves, higher for\n         masters w/o cache warming.\n      -->\n    <maxWarmingSearchers>2</maxWarmingSearchers>\n\n  </query>\n\n\n  <!-- Request Dispatcher\n\n       This section contains instructions for how the SolrDispatchFilter\n       should behave when processing requests for this SolrCore.\n\n       handleSelect is a legacy option that affects the behavior of requests\n       such as /select?qt=XXX\n\n       handleSelect=\"true\" will cause the SolrDispatchFilter to process\n       the request and dispatch the query to a handler specified by the\n       \"qt\" param, assuming \"/select\" isn't already registered.\n\n       handleSelect=\"false\" will cause the SolrDispatchFilter to\n       ignore \"/select\" requests, resulting in a 404 unless a handler\n       is explicitly registered with the name \"/select\"\n\n       handleSelect=\"true\" is not recommended for new users, but is the default\n       for backwards compatibility\n    -->\n  <requestDispatcher handleSelect=\"false\" >\n    <!-- Request Parsing\n\n         These settings indicate how Solr Requests may be parsed, and\n         what restrictions may be placed on the ContentStreams from\n         those requests\n\n         enableRemoteStreaming - enables use of the stream.file\n         and stream.url parameters for specifying remote streams.\n\n         multipartUploadLimitInKB - specifies the max size (in KiB) of\n         Multipart File Uploads that Solr will allow in a Request.\n\n         formdataUploadLimitInKB - specifies the max size (in KiB) of\n         form data (application/x-www-form-urlencoded) sent via\n         POST. You can use POST to pass request parameters not\n         fitting into the URL.\n\n         addHttpRequestToContext - if set to true, it will instruct\n         the requestParsers to include the original HttpServletRequest\n         object in the context map of the SolrQueryRequest under the\n         key \"httpRequest\". It will not be used by any of the existing\n         Solr components, but may be useful when developing custom\n         plugins.\n\n         *** WARNING ***\n         The settings below authorize Solr to fetch remote files, You\n         should make sure your system has some authentication before\n         using enableRemoteStreaming=\"true\"\n\n      -->\n    <requestParsers enableRemoteStreaming=\"true\"\n                    multipartUploadLimitInKB=\"2048000\"\n                    formdataUploadLimitInKB=\"2048\"\n                    addHttpRequestToContext=\"false\"/>\n\n    <!-- HTTP Caching\n\n         Set HTTP caching related parameters (for proxy caches and clients).\n\n         The options below instruct Solr not to output any HTTP Caching\n         related headers\n      -->\n    <httpCaching never304=\"true\" />\n\n  </requestDispatcher>\n\n  <!-- Request Handlers\n\n       http://wiki.apache.org/solr/SolrRequestHandler\n\n       Incoming queries will be dispatched to a specific handler by name\n       based on the path specified in the request.\n\n       Legacy behavior: If the request path uses \"/select\" but no Request\n       Handler has that name, and if handleSelect=\"true\" has been specified in\n       the requestDispatcher, then the Request Handler is dispatched based on\n       the qt parameter.  Handlers without a leading '/' are accessed this way\n       like so: http://host/app/[core/]select?qt=name  If no qt is\n       given, then the requestHandler that declares default=\"true\" will be\n       used or the one named \"standard\".\n\n       If a Request Handler is declared with startup=\"lazy\", then it will\n       not be initialized until the first request that uses it.\n\n    -->\n  <!-- SearchHandler\n\n       http://wiki.apache.org/solr/SearchHandler\n\n       For processing Search Queries, the primary Request Handler\n       provided with Solr is \"SearchHandler\" It delegates to a sequent\n       of SearchComponents (see below) and supports distributed\n       queries across multiple shards\n    -->\n  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n    <!-- default values for query parameters can be specified, these\n         will be overridden by parameters in the request\n      -->\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <int name=\"rows\">10</int>\n    </lst>\n\n  </requestHandler>\n\n  <!-- A request handler that returns indented JSON by default -->\n  <requestHandler name=\"/query\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"wt\">json</str>\n      <str name=\"indent\">true</str>\n      <str name=\"df\">text</str>\n    </lst>\n  </requestHandler>\n\n  <!--\n    The export request handler is used to export full sorted result sets.\n    Do not change these defaults.\n  -->\n  <requestHandler name=\"/export\" class=\"solr.SearchHandler\">\n    <lst name=\"invariants\">\n      <str name=\"rq\">{!xport}</str>\n      <str name=\"wt\">xsort</str>\n      <str name=\"distrib\">false</str>\n    </lst>\n\n    <arr name=\"components\">\n      <str>query</str>\n    </arr>\n  </requestHandler>\n\n\n  <initParams path=\"/update/**,/query,/select,/tvrh,/elevate,/spell\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n    </lst>\n  </initParams>\n\n  <!-- Field Analysis Request Handler\n\n       RequestHandler that provides much the same functionality as\n       analysis.jsp. Provides the ability to specify multiple field\n       types and field names in the same request and outputs\n       index-time and query-time analysis for each of them.\n\n       Request parameters are:\n       analysis.fieldname - field name whose analyzers are to be used\n\n       analysis.fieldtype - field type whose analyzers are to be used\n       analysis.fieldvalue - text for index-time analysis\n       q (or analysis.q) - text for query time analysis\n       analysis.showmatch (true|false) - When set to true and when\n           query analysis is performed, the produced tokens of the\n           field value analysis will be marked as \"matched\" for every\n           token that is produces by the query analysis\n   -->\n  <requestHandler name=\"/analysis/field\"\n                  startup=\"lazy\"\n                  class=\"solr.FieldAnalysisRequestHandler\" />\n\n\n  <!-- Document Analysis Handler\n\n       http://wiki.apache.org/solr/AnalysisRequestHandler\n\n       An analysis handler that provides a breakdown of the analysis\n       process of provided documents. This handler expects a (single)\n       content stream with the following format:\n\n       <docs>\n         <doc>\n           <field name=\"id\">1</field>\n           <field name=\"name\">The Name</field>\n           <field name=\"text\">The Text Value</field>\n         </doc>\n         <doc>...</doc>\n         <doc>...</doc>\n         ...\n       </docs>\n\n    Note: Each document must contain a field which serves as the\n    unique key. This key is used in the returned response to associate\n    an analysis breakdown to the analyzed document.\n\n    Like the FieldAnalysisRequestHandler, this handler also supports\n    query analysis by sending either an \"analysis.query\" or \"q\"\n    request parameter that holds the query text to be analyzed. It\n    also supports the \"analysis.showmatch\" parameter which when set to\n    true, all field tokens that match the query tokens will be marked\n    as a \"match\".\n  -->\n  <requestHandler name=\"/analysis/document\"\n                  class=\"solr.DocumentAnalysisRequestHandler\"\n                  startup=\"lazy\" />\n\n  <!-- Echo the request contents back to the client -->\n  <requestHandler name=\"/debug/dump\" class=\"solr.DumpRequestHandler\" >\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"echoHandler\">true</str>\n    </lst>\n  </requestHandler>\n\n\n\n  <!-- Search Components\n\n       Search components are registered to SolrCore and used by\n       instances of SearchHandler (which can access them by name)\n\n       By default, the following components are available:\n\n       <searchComponent name=\"query\"     class=\"solr.QueryComponent\" />\n       <searchComponent name=\"facet\"     class=\"solr.FacetComponent\" />\n       <searchComponent name=\"mlt\"       class=\"solr.MoreLikeThisComponent\" />\n       <searchComponent name=\"highlight\" class=\"solr.HighlightComponent\" />\n       <searchComponent name=\"stats\"     class=\"solr.StatsComponent\" />\n       <searchComponent name=\"debug\"     class=\"solr.DebugComponent\" />\n\n     -->\n\n  <!-- Terms Component\n\n       http://wiki.apache.org/solr/TermsComponent\n\n       A component to return terms and document frequency of those\n       terms\n    -->\n  <searchComponent name=\"terms\" class=\"solr.TermsComponent\"/>\n\n  <!-- A request handler for demonstrating the terms component -->\n  <requestHandler name=\"/terms\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <bool name=\"terms\">true</bool>\n      <bool name=\"distrib\">false</bool>\n    </lst>\n    <arr name=\"components\">\n      <str>terms</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Legacy config for the admin interface -->\n  <admin>\n    <defaultQuery>*:*</defaultQuery>\n  </admin>\n\n</config>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "atlas-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "atlas_server_max_new_size" : "600",
            "atlas_server_metadata_size" : "50000",
            "atlas_server_xmx" : "2048",
            "atlas_solr_shards" : "1",
            "content" : "\n      # The java implementation to use. If JAVA_HOME is not found we expect java and jar to be in path\n      export JAVA_HOME={{java64_home}}\n\n      # any additional java opts you want to set. This will apply to both client and server operations\n      {% if security_enabled %}\n      export ATLAS_OPTS=\"{{metadata_opts}} -Djava.security.auth.login.config={{atlas_jaas_file}}\"\n      {% else %}\n      export ATLAS_OPTS=\"{{metadata_opts}}\"\n      {% endif %}\n\n      # metadata configuration directory\n      export ATLAS_CONF={{conf_dir}}\n\n      # Where log files are stored. Defatult is logs directory under the base install location\n      export ATLAS_LOG_DIR={{log_dir}}\n\n      # additional classpath entries\n      export ATLASCPPATH={{metadata_classpath}}\n\n      # data dir\n      export ATLAS_DATA_DIR={{data_dir}}\n\n      # pid dir\n      export ATLAS_PID_DIR={{pid_dir}}\n\n      # hbase conf dir\n      export HBASE_CONF_DIR={{hbase_conf_dir}}\n\n      # Where do you want to expand the war file. By Default it is in /server/webapp dir under the base install dir.\n      export ATLAS_EXPANDED_WEBAPP_DIR={{expanded_war_dir}}\n      export ATLAS_SERVER_OPTS=\"-server -XX:SoftRefLRUPolicyMSPerMB=0 -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+PrintTenuringDistribution -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$ATLAS_LOG_DIR/atlas_server.hprof -Xloggc:$ATLAS_LOG_DIRgc-worker.log -verbose:gc -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1m -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCTimeStamps\"\n      {% if java_version == 8 %}\n      export ATLAS_SERVER_HEAP=\"-Xms{{atlas_server_xmx}}m -Xmx{{atlas_server_xmx}}m -XX:MaxNewSize={{atlas_server_max_new_size}}m \"\n      {% else %}\n      export ATLAS_SERVER_HEAP=\"-Xms{{atlas_server_xmx}}m -Xmx{{atlas_server_xmx}}m -XX:MaxNewSize={{atlas_server_max_new_size}}m -XX:MaxPermSize=512m\"\n      {% endif %}",
            "metadata_classpath" : " ",
            "metadata_conf_file" : "atlas-application.properties",
            "metadata_data_dir" : "/var/lib/atlas/data",
            "metadata_expanded_war_dir" : "./server/webapp",
            "metadata_log_dir" : "/var/log/atlas",
            "metadata_opts" : "-Dlog4j.configuration=atlas-log4j.xml",
            "metadata_pid_dir" : "/var/run/atlas",
            "metadata_user" : "atlas"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "atlas-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "atlas_log_level" : "info",
            "audit_log_level" : "OFF",
            "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one\n  ~ or more contributor license agreements.  See the NOTICE file\n  ~ distributed with this work for additional information\n  ~ regarding copyright ownership.  The ASF licenses this file\n  ~ to you under the Apache License, Version 2.0 (the\n  ~ \"License\"); you may not use this file except in compliance\n  ~ with the License.  You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n\n<log4j:configuration xmlns:log4j=\"http://jakarta.apache.org/log4j/\">\n  <appender name=\"console\" class=\"org.apache.log4j.ConsoleAppender\">\n    <param name=\"Target\" value=\"System.out\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d %-5p - [%t:%x] ~ %m (%c{1}:%L)%n\"/>\n    </layout>\n  </appender>\n\n  <appender name=\"FILE\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n    <param name=\"File\" value=\"{{log_dir}}/application.log\"/>\n    <param name=\"Append\" value=\"true\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d %-5p - [%t:%x] ~ %m (%c{1}:%L)%n\"/>\n    </layout>\n  </appender>\n\n  <appender name=\"AUDIT\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n    <param name=\"File\" value=\"{{log_dir}}/audit.log\"/>\n    <param name=\"Append\" value=\"true\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <layout class=\"org.apache.log4j.PatternLayout\">\n      <param name=\"ConversionPattern\" value=\"%d %x %m%n\"/>\n    </layout>\n  </appender>\n\n  <logger name=\"org.apache.atlas\" additivity=\"false\">\n    <level value=\"{{atlas_log_level}}\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n\n  <logger name=\"com.thinkaurelius.titan\" additivity=\"false\">\n    <level value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n  <logger name=\"org.elasticsearch\" additivity=\"false\">\n    <level value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n  <logger name=\"org.apache.lucene\" additivity=\"false\">\n    <level value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n  <logger name=\"com.google\" additivity=\"false\">\n    <level value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </logger>\n\n  <logger name=\"AUDIT\">\n    <level value=\"{{audit_log_level}}\"/>\n    <appender-ref ref=\"AUDIT\"/>\n  </logger>\n\n  <root>\n    <priority value=\"info\"/>\n    <appender-ref ref=\"FILE\"/>\n  </root>\n\n</log4j:configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-atlas-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.atlas.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.atlas.policy.pollIntervalMs" : "30000",
            "ranger.plugin.atlas.policy.rest.ssl.config.file" : "/usr/hdp/current/atlas-server/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.atlas.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.atlas.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.atlas.service.name" : "{{repo_name}}",
            "xasecure.add-hadoop-authorization" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "application-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "atlas.audit.hbase.tablename" : "ATLAS_ENTITY_AUDIT_EVENTS",
            "atlas.audit.hbase.zookeeper.quorum" : "sandbox.hortonworks.com",
            "atlas.audit.zookeeper.session.timeout.ms" : "1000",
            "atlas.auth.policy.file" : "{{conf_dir}}/policy-store.txt",
            "atlas.authentication.keytab" : "/etc/security/keytabs/atlas.service.keytab",
            "atlas.authentication.method.file" : "true",
            "atlas.authentication.method.file.filename" : "{{conf_dir}}/users-credentials.properties",
            "atlas.authentication.method.kerberos" : "false",
            "atlas.authentication.method.ldap" : "false",
            "atlas.authentication.method.ldap.ad.base.dn" : "",
            "atlas.authentication.method.ldap.ad.bind.dn" : "",
            "atlas.authentication.method.ldap.ad.bind.password" : "",
            "atlas.authentication.method.ldap.ad.default.role" : "ROLE_USER",
            "atlas.authentication.method.ldap.ad.domain" : "",
            "atlas.authentication.method.ldap.ad.referral" : "ignore",
            "atlas.authentication.method.ldap.ad.url" : "",
            "atlas.authentication.method.ldap.ad.user.searchfilter" : "(sAMAccountName={0})",
            "atlas.authentication.method.ldap.base.dn" : "",
            "atlas.authentication.method.ldap.bind.dn" : "",
            "atlas.authentication.method.ldap.bind.password" : "",
            "atlas.authentication.method.ldap.default.role" : "ROLE_USER",
            "atlas.authentication.method.ldap.groupRoleAttribute" : "cn",
            "atlas.authentication.method.ldap.groupSearchBase" : "",
            "atlas.authentication.method.ldap.groupSearchFilter" : "",
            "atlas.authentication.method.ldap.referral" : "ignore",
            "atlas.authentication.method.ldap.type" : "none",
            "atlas.authentication.method.ldap.url" : "",
            "atlas.authentication.method.ldap.user.searchfilter" : "",
            "atlas.authentication.method.ldap.userDNpattern" : "uid=",
            "atlas.authentication.principal" : "atlas",
            "atlas.authorizer.impl" : "ranger",
            "atlas.cluster.name" : "{{cluster_name}}",
            "atlas.enableTLS" : "false",
            "atlas.graph.index.search.backend" : "solr5",
            "atlas.graph.index.search.solr.mode" : "cloud",
            "atlas.graph.index.search.solr.zookeeper-url" : "sandbox.hortonworks.com:2181/infra-solr",
            "atlas.graph.storage.backend" : "hbase",
            "atlas.graph.storage.hbase.table" : "atlas_titan",
            "atlas.graph.storage.hostname" : "sandbox.hortonworks.com",
            "atlas.hook.falcon.queueSize" : "1000",
            "atlas.kafka.auto.commit.enable" : "false",
            "atlas.kafka.bootstrap.servers" : "sandbox.hortonworks.com:6667",
            "atlas.kafka.hook.group.id" : "atlas",
            "atlas.kafka.zookeeper.connect" : "sandbox.hortonworks.com:2181",
            "atlas.kafka.zookeeper.connection.timeout.ms" : "200",
            "atlas.kafka.zookeeper.session.timeout.ms" : "400",
            "atlas.kafka.zookeeper.sync.time.ms" : "20",
            "atlas.lineage.schema.query.Table" : "Table where __guid='%s'\\, columns",
            "atlas.lineage.schema.query.hive_table" : "hive_table where __guid='%s'\\, columns",
            "atlas.notification.create.topics" : "true",
            "atlas.notification.embedded" : "false",
            "atlas.notification.replicas" : "1",
            "atlas.notification.topics" : "ATLAS_HOOK,ATLAS_ENTITIES",
            "atlas.rest.address" : "http://sandbox.hortonworks.com:21000",
            "atlas.server.bind.address" : "sandbox.hortonworks.com",
            "atlas.server.http.port" : "21000",
            "atlas.server.https.port" : "21443",
            "atlas.solr.kerberos.enable" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-atlas-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-atlas-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "atlas",
            "common.name.for.certificate" : "",
            "policy_user" : "ambari-qa",
            "ranger-atlas-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380379744,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "ATLAS",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=FALCON&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-atlas-application.properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "atlas.hook.falcon.keepAliveTime" : "10",
            "atlas.hook.falcon.maxThreads" : "5",
            "atlas.hook.falcon.minThreads" : "5",
            "atlas.hook.falcon.numRetries" : "3",
            "atlas.hook.falcon.queueSize" : "1000",
            "atlas.hook.falcon.synchronous" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-client.properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "falcon.url" : "http://{{falcon_host}}:{{falcon_port}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# The java implementation to use. If JAVA_HOME is not found we expect java and jar to be in path\nexport JAVA_HOME={{java_home}}\n\n# any additional java opts you want to set. This will apply to both client and server operations\n#export FALCON_OPTS=\n\n# any additional java opts that you want to set for client only\n#export FALCON_CLIENT_OPTS=\n\n# java heap size we want to set for the client. Default is 1024MB\n#export FALCON_CLIENT_HEAP=\n\n# any additional opts you want to set for prisim service.\n#export FALCON_PRISM_OPTS=\n\n# java heap size we want to set for the prisim service. Default is 1024MB\n#export FALCON_PRISM_HEAP=\n\n# any additional opts you want to set for falcon service.\nexport FALCON_SERVER_OPTS=\"-Dfalcon.embeddedmq={{falcon_embeddedmq_enabled}} -Dfalcon.emeddedmq.port={{falcon_emeddedmq_port}}\"\n\n# java heap size we want to set for the falcon server. Default is 1024MB\n#export FALCON_SERVER_HEAP=\n\n# What is is considered as falcon home dir. Default is the base location of the installed software\n#export FALCON_HOME_DIR=\n\n# Where log files are stored. Defatult is logs directory under the base install location\nexport FALCON_LOG_DIR={{falcon_log_dir}}\n\n# Where pid files are stored. Defatult is logs directory under the base install location\nexport FALCON_PID_DIR={{falcon_pid_dir}}\n\n# where the falcon active mq data is stored. Defatult is logs/data directory under the base install location\nexport FALCON_DATA_DIR={{falcon_embeddedmq_data}}\n\n# Where do you want to expand the war file. By Default it is in /server/webapp dir under the base install dir.\n#export FALCON_EXPANDED_WEBAPP_DIR=\n\n# Add the Atlas Falcon hook to the Falcon classpath\nexport FALCON_EXTRA_CLASS_PATH={{atlas_hook_cp}}${FALCON_EXTRA_CLASS_PATH}",
            "falcon.embeddedmq" : "true",
            "falcon.embeddedmq.data" : "/hadoop/falcon/embeddedmq/data",
            "falcon.emeddedmq.port" : "61616",
            "falcon_apps_hdfs_dir" : "/apps/falcon",
            "falcon_local_dir" : "/hadoop/falcon",
            "falcon_log_dir" : "/var/log/falcon",
            "falcon_pid_dir" : "/var/run/falcon",
            "falcon_port" : "15000",
            "falcon_user" : "falcon",
            "supports_hive_dr" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<!--\n    This is used for falcon packaging only.\n  -->\n\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n\n<log4j:configuration xmlns:log4j=\"http://jakarta.apache.org/log4j/\">\n    <appender name=\"FILE\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.application.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %-5p - [%t:%x] ~ %m (%c{1}:%L)%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"AUDIT\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.audit.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %x %m%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"METRIC\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.metric.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %m%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"FeedSLA\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.feed.sla.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %m%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"ALERT\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.alerts.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %m%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"SECURITY\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.security.audit.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %x %m%n\"/>\n        </layout>\n    </appender>\n\n    <logger name=\"org.apache.falcon\" additivity=\"false\">\n        <level value=\"debug\"/>\n        <appender-ref ref=\"FILE\"/>\n    </logger>\n\n    <logger name=\"AUDIT\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"AUDIT\"/>\n    </logger>\n\n    <logger name=\"METRIC\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"METRIC\"/>\n    </logger>\n\n    <logger name=\"FeedSLA\">\n        <level value=\"debug\"/>\n        <appender-ref ref=\"FeedSLA\"/>\n    </logger>\n\n    <logger name=\"org.apache.hadoop.security\" additivity=\"false\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"SECURITY\"/>\n    </logger>\n\n    <logger name=\"org.apache.hadoop\" additivity=\"false\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"FILE\"/>\n    </logger>\n\n    <logger name=\"org.apache.oozie\" additivity=\"false\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"FILE\"/>\n    </logger>\n\n    <logger name=\"org.apache.hadoop.hive\" additivity=\"false\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"FILE\"/>\n    </logger>\n\n    <root>\n        <priority value=\"info\"/>\n        <appender-ref ref=\"FILE\"/>\n    </root>\n\n</log4j:configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-runtime.properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "*.domain" : "${falcon.app.type}",
            "*.log.cleanup.frequency.days.retention" : "days(7)",
            "*.log.cleanup.frequency.hours.retention" : "minutes(1)",
            "*.log.cleanup.frequency.minutes.retention" : "hours(6)",
            "*.log.cleanup.frequency.months.retention" : "months(3)"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-startup.properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "*.ConfigSyncService.impl" : "org.apache.falcon.resource.ConfigSyncService",
            "*.ProcessInstanceManager.impl" : "org.apache.falcon.resource.InstanceManager",
            "*.SchedulableEntityManager.impl" : "org.apache.falcon.resource.SchedulableEntityManager",
            "*.application.services" : "org.apache.falcon.security.AuthenticationInitializationService,\\\n      org.apache.falcon.workflow.WorkflowJobEndNotificationService, \\\n      org.apache.falcon.service.ProcessSubscriberService,\\\n      org.apache.falcon.extensions.ExtensionService,\\\n      org.apache.falcon.service.LifecyclePolicyMap,\\\n      org.apache.falcon.entity.store.ConfigurationStore,\\\n      org.apache.falcon.rerun.service.RetryService,\\\n      org.apache.falcon.rerun.service.LateRunService,\\\n      org.apache.falcon.service.LogCleanupService,\\\n      org.apache.falcon.metadata.MetadataMappingService",
            "*.broker.impl.class" : "org.apache.activemq.ActiveMQConnectionFactory",
            "*.broker.ttlInMins" : "4320",
            "*.broker.url" : "tcp://%HOSTGROUP::host_group_1%:61616",
            "*.catalog.service.impl" : "org.apache.falcon.catalog.HiveCatalogService",
            "*.config.store.uri" : "file:///hadoop/falcon/store",
            "*.configstore.listeners" : "org.apache.falcon.entity.v0.EntityGraph,\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\n      org.apache.falcon.group.FeedGroupMap,\\\n      org.apache.falcon.service.SharedLibraryHostingService",
            "*.domain" : "${falcon.app.type}",
            "*.entity.topic" : "FALCON.ENTITY.TOPIC",
            "*.extension.store.uri" : "/apps/falcon/extensions",
            "*.falcon.authentication.type" : "simple",
            "*.falcon.cleanup.service.frequency" : "days(1)",
            "*.falcon.enableTLS" : "false",
            "*.falcon.feed.lifecycle.policies" : "org.apache.falcon.lifecycle.retention.AgeBasedDelete",
            "*.falcon.feed.lifecycle.policy.builders" : "org.apache.falcon.lifecycle.engine.oozie.retention.AgeBasedDeleteBuilder",
            "*.falcon.graph.blueprints.graph" : "com.thinkaurelius.titan.core.TitanFactory",
            "*.falcon.graph.preserve.history" : "false",
            "*.falcon.graph.serialize.path" : "/hadoop/falcon/data/lineage",
            "*.falcon.graph.storage.backend" : "berkeleyje",
            "*.falcon.graph.storage.directory" : "/hadoop/falcon/data/lineage/graphdb",
            "*.falcon.http.authentication.blacklisted.users" : "",
            "*.falcon.http.authentication.cookie.domain" : "EXAMPLE.COM",
            "*.falcon.http.authentication.kerberos.name.rules" : "DEFAULT",
            "*.falcon.http.authentication.signature.secret" : "falcon",
            "*.falcon.http.authentication.simple.anonymous.allowed" : "true",
            "*.falcon.http.authentication.token.validity" : "36000",
            "*.falcon.http.authentication.type" : "simple",
            "*.falcon.security.authorization.admin.groups" : "falcon",
            "*.falcon.security.authorization.admin.users" : "falcon,ambari-qa",
            "*.falcon.security.authorization.enabled" : "false",
            "*.falcon.security.authorization.provider" : "org.apache.falcon.security.DefaultAuthorizationProvider",
            "*.falcon.security.authorization.superusergroup" : "falcon",
            "*.hive.shared.libs" : "hive-exec,hive-metastore,hive-common,hive-service,hive-hcatalog-server-extensions,\\\nhive-hcatalog-core,hive-jdbc,hive-webhcat-java-client",
            "*.internal.queue.size" : "1000",
            "*.journal.impl" : "org.apache.falcon.transaction.SharedFileSystemJournal",
            "*.lifecycle.engine.impl" : "org.apache.falcon.lifecycle.engine.oozie.OoziePolicyBuilderFactory",
            "*.max.retry.failure.count" : "1",
            "*.oozie.feed.workflow.builder" : "org.apache.falcon.workflow.OozieFeedWorkflowBuilder",
            "*.oozie.process.workflow.builder" : "org.apache.falcon.workflow.OozieProcessWorkflowBuilder",
            "*.retry.recorder.path" : "${falcon.log.dir}/retry",
            "*.shared.libs" : "activemq-all,ant,geronimo-j2ee-management,jms,json-simple,oozie-client,spring-jms,commons-lang3,commons-el",
            "*.system.lib.location" : "${falcon.home}/server/webapp/${falcon.app.type}/WEB-INF/lib",
            "*.workflow.engine.impl" : "org.apache.falcon.workflow.engine.OozieWorkflowEngine",
            "prism.application.services" : "org.apache.falcon.entity.store.ConfigurationStore",
            "prism.configstore.listeners" : "org.apache.falcon.entity.v0.EntityGraph,\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\n      org.apache.falcon.group.FeedGroupMap"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380375830,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "FALCON",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=FALCON&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-atlas-application.properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "atlas.hook.falcon.keepAliveTime" : "10",
            "atlas.hook.falcon.maxThreads" : "5",
            "atlas.hook.falcon.minThreads" : "5",
            "atlas.hook.falcon.numRetries" : "3",
            "atlas.hook.falcon.queueSize" : "1000",
            "atlas.hook.falcon.synchronous" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-client.properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "falcon.url" : "http://{{falcon_host}}:{{falcon_port}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# The java implementation to use. If JAVA_HOME is not found we expect java and jar to be in path\nexport JAVA_HOME={{java_home}}\n\n# any additional java opts you want to set. This will apply to both client and server operations\n#export FALCON_OPTS=\n\n# any additional java opts that you want to set for client only\n#export FALCON_CLIENT_OPTS=\n\n# java heap size we want to set for the client. Default is 1024MB\n#export FALCON_CLIENT_HEAP=\n\n# any additional opts you want to set for prisim service.\n#export FALCON_PRISM_OPTS=\n\n# java heap size we want to set for the prisim service. Default is 1024MB\n#export FALCON_PRISM_HEAP=\n\n# any additional opts you want to set for falcon service.\nexport FALCON_SERVER_OPTS=\"-Dfalcon.embeddedmq={{falcon_embeddedmq_enabled}} -Dfalcon.emeddedmq.port={{falcon_emeddedmq_port}}\"\n\n# java heap size we want to set for the falcon server. Default is 1024MB\n#export FALCON_SERVER_HEAP=\n\n# What is is considered as falcon home dir. Default is the base location of the installed software\n#export FALCON_HOME_DIR=\n\n# Where log files are stored. Defatult is logs directory under the base install location\nexport FALCON_LOG_DIR={{falcon_log_dir}}\n\n# Where pid files are stored. Defatult is logs directory under the base install location\nexport FALCON_PID_DIR={{falcon_pid_dir}}\n\n# where the falcon active mq data is stored. Defatult is logs/data directory under the base install location\nexport FALCON_DATA_DIR={{falcon_embeddedmq_data}}\n\n# Where do you want to expand the war file. By Default it is in /server/webapp dir under the base install dir.\n#export FALCON_EXPANDED_WEBAPP_DIR=\n\n# Add the Atlas Falcon hook to the Falcon classpath\nexport FALCON_EXTRA_CLASS_PATH={{atlas_hook_cp}}${FALCON_EXTRA_CLASS_PATH}",
            "falcon.embeddedmq" : "true",
            "falcon.embeddedmq.data" : "/hadoop/falcon/embeddedmq/data",
            "falcon.emeddedmq.port" : "61616",
            "falcon_apps_hdfs_dir" : "/apps/falcon",
            "falcon_local_dir" : "/hadoop/falcon",
            "falcon_log_dir" : "/var/log/falcon",
            "falcon_pid_dir" : "/var/run/falcon",
            "falcon_port" : "15000",
            "falcon_user" : "falcon",
            "supports_hive_dr" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<!--\n    This is used for falcon packaging only.\n  -->\n\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n\n<log4j:configuration xmlns:log4j=\"http://jakarta.apache.org/log4j/\">\n    <appender name=\"FILE\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.application.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %-5p - [%t:%x] ~ %m (%c{1}:%L)%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"AUDIT\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.audit.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %x %m%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"METRIC\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.metric.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %m%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"FeedSLA\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.feed.sla.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %m%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"ALERT\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.alerts.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %m%n\"/>\n        </layout>\n    </appender>\n\n    <appender name=\"SECURITY\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${falcon.log.dir}/${falcon.app.type}.security.audit.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n        <param name=\"Threshold\" value=\"debug\"/>\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d %x %m%n\"/>\n        </layout>\n    </appender>\n\n    <logger name=\"org.apache.falcon\" additivity=\"false\">\n        <level value=\"debug\"/>\n        <appender-ref ref=\"FILE\"/>\n    </logger>\n\n    <logger name=\"AUDIT\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"AUDIT\"/>\n    </logger>\n\n    <logger name=\"METRIC\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"METRIC\"/>\n    </logger>\n\n    <logger name=\"FeedSLA\">\n        <level value=\"debug\"/>\n        <appender-ref ref=\"FeedSLA\"/>\n    </logger>\n\n    <logger name=\"org.apache.hadoop.security\" additivity=\"false\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"SECURITY\"/>\n    </logger>\n\n    <logger name=\"org.apache.hadoop\" additivity=\"false\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"FILE\"/>\n    </logger>\n\n    <logger name=\"org.apache.oozie\" additivity=\"false\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"FILE\"/>\n    </logger>\n\n    <logger name=\"org.apache.hadoop.hive\" additivity=\"false\">\n        <level value=\"info\"/>\n        <appender-ref ref=\"FILE\"/>\n    </logger>\n\n    <root>\n        <priority value=\"info\"/>\n        <appender-ref ref=\"FILE\"/>\n    </root>\n\n</log4j:configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-runtime.properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "*.domain" : "${falcon.app.type}",
            "*.log.cleanup.frequency.days.retention" : "days(7)",
            "*.log.cleanup.frequency.hours.retention" : "minutes(1)",
            "*.log.cleanup.frequency.minutes.retention" : "hours(6)",
            "*.log.cleanup.frequency.months.retention" : "months(3)"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "falcon-startup.properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "*.ConfigSyncService.impl" : "org.apache.falcon.resource.ConfigSyncService",
            "*.ProcessInstanceManager.impl" : "org.apache.falcon.resource.InstanceManager",
            "*.SchedulableEntityManager.impl" : "org.apache.falcon.resource.SchedulableEntityManager",
            "*.application.services" : "org.apache.falcon.security.AuthenticationInitializationService,\\\n      org.apache.falcon.workflow.WorkflowJobEndNotificationService, \\\n      org.apache.falcon.service.ProcessSubscriberService,\\\n      org.apache.falcon.extensions.ExtensionService,\\\n      org.apache.falcon.service.LifecyclePolicyMap,\\\n      org.apache.falcon.entity.store.ConfigurationStore,\\\n      org.apache.falcon.rerun.service.RetryService,\\\n      org.apache.falcon.rerun.service.LateRunService,\\\n      org.apache.falcon.service.LogCleanupService,\\\n      org.apache.falcon.metadata.MetadataMappingService",
            "*.broker.impl.class" : "org.apache.activemq.ActiveMQConnectionFactory",
            "*.broker.ttlInMins" : "4320",
            "*.broker.url" : "tcp://sandbox.hortonworks.com:61616",
            "*.catalog.service.impl" : "org.apache.falcon.catalog.HiveCatalogService",
            "*.config.store.uri" : "file:///hadoop/falcon/store",
            "*.configstore.listeners" : "org.apache.falcon.entity.v0.EntityGraph,\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\n      org.apache.falcon.group.FeedGroupMap,\\\n      org.apache.falcon.service.SharedLibraryHostingService",
            "*.domain" : "${falcon.app.type}",
            "*.entity.topic" : "FALCON.ENTITY.TOPIC",
            "*.extension.store.uri" : "/apps/falcon/extensions",
            "*.falcon.authentication.type" : "simple",
            "*.falcon.cleanup.service.frequency" : "days(1)",
            "*.falcon.enableTLS" : "false",
            "*.falcon.feed.lifecycle.policies" : "org.apache.falcon.lifecycle.retention.AgeBasedDelete",
            "*.falcon.feed.lifecycle.policy.builders" : "org.apache.falcon.lifecycle.engine.oozie.retention.AgeBasedDeleteBuilder",
            "*.falcon.graph.blueprints.graph" : "com.thinkaurelius.titan.core.TitanFactory",
            "*.falcon.graph.preserve.history" : "false",
            "*.falcon.graph.serialize.path" : "/hadoop/falcon/data/lineage",
            "*.falcon.graph.storage.backend" : "berkeleyje",
            "*.falcon.graph.storage.directory" : "/hadoop/falcon/data/lineage/graphdb",
            "*.falcon.http.authentication.blacklisted.users" : "",
            "*.falcon.http.authentication.cookie.domain" : "EXAMPLE.COM",
            "*.falcon.http.authentication.kerberos.name.rules" : "DEFAULT",
            "*.falcon.http.authentication.signature.secret" : "falcon",
            "*.falcon.http.authentication.simple.anonymous.allowed" : "true",
            "*.falcon.http.authentication.token.validity" : "36000",
            "*.falcon.http.authentication.type" : "simple",
            "*.falcon.security.authorization.admin.groups" : "falcon",
            "*.falcon.security.authorization.admin.users" : "falcon,ambari-qa",
            "*.falcon.security.authorization.enabled" : "false",
            "*.falcon.security.authorization.provider" : "org.apache.falcon.security.DefaultAuthorizationProvider",
            "*.falcon.security.authorization.superusergroup" : "falcon",
            "*.hive.shared.libs" : "hive-exec,hive-metastore,hive-common,hive-service,hive-hcatalog-server-extensions,\\\nhive-hcatalog-core,hive-jdbc,hive-webhcat-java-client",
            "*.internal.queue.size" : "1000",
            "*.journal.impl" : "org.apache.falcon.transaction.SharedFileSystemJournal",
            "*.lifecycle.engine.impl" : "org.apache.falcon.lifecycle.engine.oozie.OoziePolicyBuilderFactory",
            "*.max.retry.failure.count" : "1",
            "*.oozie.feed.workflow.builder" : "org.apache.falcon.workflow.OozieFeedWorkflowBuilder",
            "*.oozie.process.workflow.builder" : "org.apache.falcon.workflow.OozieProcessWorkflowBuilder",
            "*.retry.recorder.path" : "${falcon.log.dir}/retry",
            "*.shared.libs" : "activemq-all,ant,geronimo-j2ee-management,jms,json-simple,oozie-client,spring-jms,commons-lang3,commons-el",
            "*.system.lib.location" : "${falcon.home}/server/webapp/${falcon.app.type}/WEB-INF/lib",
            "*.workflow.engine.impl" : "org.apache.falcon.workflow.engine.OozieWorkflowEngine",
            "prism.application.services" : "org.apache.falcon.entity.store.ConfigurationStore",
            "prism.configstore.listeners" : "org.apache.falcon.entity.v0.EntityGraph,\\\n      org.apache.falcon.entity.ColoClusterRelation,\\\n      org.apache.falcon.group.FeedGroupMap"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380380744,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "FALCON",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=FLUME&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "flume-conf",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Flume agent config"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "flume-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# If this file is placed at FLUME_CONF_DIR/flume-env.sh, it will be sourced\n# during Flume startup.\n\n# Enviroment variables can be set here.\n\nexport JAVA_HOME={{java_home}}\n\n# Give Flume more memory and pre-allocate, enable remote monitoring via JMX\n# export JAVA_OPTS=\"-Xms100m -Xmx2000m -Dcom.sun.management.jmxremote\"\n\n# Note that the Flume conf directory is always included in the classpath.\n# Add flume sink to classpath\nif [ -e \"/usr/lib/flume/lib/ambari-metrics-flume-sink.jar\" ]; then\n  export FLUME_CLASSPATH=$FLUME_CLASSPATH:/usr/lib/flume/lib/ambari-metrics-flume-sink.jar\nfi\n\nexport HIVE_HOME={{flume_hive_home}}\nexport HCAT_HOME={{flume_hcat_home}}",
            "flume_conf_dir" : "/etc/flume/conf",
            "flume_log_dir" : "/var/log/flume",
            "flume_run_dir" : "/var/run/flume",
            "flume_user" : "flume"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380375388,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "FLUME",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=HBASE&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hbase-policy",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "security.admin.protocol.acl" : "*",
            "security.client.protocol.acl" : "*",
            "security.masterregion.protocol.acl" : "*"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hbase-policymgr-ssl",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hbase-client/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-hbase-policymgr-ssl:1:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hbase-client/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-hbase-policymgr-ssl:1:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hbase-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hbase-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\n# export HBASE_HEAPSIZE=1000\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n# If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if java_version < 8 %}\nJDK_DEPENDED_OPTS=\"-XX:PermSize=128m -XX:MaxPermSize=128m\"\n{% endif %}\n      \n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.security.auth.login.config={{client_jaas_config_file}} -Djava.io.tmpdir={{java_io_tmpdir}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} -Djava.security.auth.login.config={{master_jaas_config_file}} $JDK_DEPENDED_OPTS\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} -Djava.security.auth.login.config={{regionserver_jaas_config_file}} $JDK_DEPENDED_OPTS\"\nexport PHOENIX_QUERYSERVER_OPTS=\"$PHOENIX_QUERYSERVER_OPTS -Djava.security.auth.login.config={{queryserver_jaas_config_file}}\"\n{% else %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{java_io_tmpdir}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} $JDK_DEPENDED_OPTS\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} $JDK_DEPENDED_OPTS\"\n{% endif %}\n\n# HBase off-heap MaxDirectMemorySize\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"",
            "hbase_java_io_tmpdir" : "/tmp",
            "hbase_log_dir" : "/var/log/hbase",
            "hbase_master_heapsize" : "1024",
            "hbase_max_direct_memory_size" : "1048",
            "hbase_pid_dir" : "/var/run/hbase",
            "hbase_regionserver_heapsize" : "1024",
            "hbase_regionserver_shutdown_timeout" : "30",
            "hbase_regionserver_xmn_max" : "512",
            "hbase_regionserver_xmn_ratio" : "0.2",
            "hbase_user" : "hbase",
            "hbase_user_nofile_limit" : "32000",
            "hbase_user_nproc_limit" : "16000",
            "phoenix_sql_enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hbase-security",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.plugin.hbase.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.hbase.policy.pollIntervalMs" : "30000",
            "ranger.plugin.hbase.policy.rest.ssl.config.file" : "/etc/hbase/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.hbase.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.hbase.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.hbase.service.name" : "{{repo_name}}",
            "xasecure.hbase.update.xapolicies.on.grant.revoke" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hbase-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "dfs.domain.socket.path" : "/var/lib/hadoop-hdfs/dn_socket",
            "hbase.bucketcache.ioengine" : "offheap",
            "hbase.bucketcache.percentage.in.combinedcache" : "",
            "hbase.bucketcache.size" : "1024",
            "hbase.bulkload.staging.dir" : "/apps/hbase/staging",
            "hbase.client.keyvalue.maxsize" : "1048576",
            "hbase.client.retries.number" : "35",
            "hbase.client.scanner.caching" : "100",
            "hbase.cluster.distributed" : "true",
            "hbase.coprocessor.master.classes" : "org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor",
            "hbase.coprocessor.region.classes" : "org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint,org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor",
            "hbase.coprocessor.regionserver.classes" : "org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor",
            "hbase.defaults.for.version.skip" : "true",
            "hbase.hregion.majorcompaction" : "604800000",
            "hbase.hregion.majorcompaction.jitter" : "0.50",
            "hbase.hregion.max.filesize" : "10737418240",
            "hbase.hregion.memstore.block.multiplier" : "4",
            "hbase.hregion.memstore.flush.size" : "134217728",
            "hbase.hregion.memstore.mslab.enabled" : "true",
            "hbase.hstore.blockingStoreFiles" : "10",
            "hbase.hstore.compaction.max" : "10",
            "hbase.hstore.compactionThreshold" : "3",
            "hbase.local.dir" : "${hbase.tmp.dir}/local",
            "hbase.master.info.bindAddress" : "0.0.0.0",
            "hbase.master.info.port" : "16010",
            "hbase.master.port" : "16000",
            "hbase.master.ui.readonly" : "false",
            "hbase.region.server.rpc.scheduler.factory.class" : "",
            "hbase.regionserver.global.memstore.size" : "0.4",
            "hbase.regionserver.handler.count" : "30",
            "hbase.regionserver.info.port" : "16030",
            "hbase.regionserver.port" : "16020",
            "hbase.regionserver.wal.codec" : "org.apache.hadoop.hbase.regionserver.wal.WALCellCodec",
            "hbase.rootdir" : "hdfs://%HOSTGROUP::host_group_1%:8020/apps/hbase/data",
            "hbase.rpc.controllerfactory.class" : "",
            "hbase.rpc.protection" : "authentication",
            "hbase.rpc.timeout" : "90000",
            "hbase.security.authentication" : "simple",
            "hbase.security.authorization" : "true",
            "hbase.superuser" : "hbase",
            "hbase.tmp.dir" : "/tmp/hbase-${user.name}",
            "hbase.zookeeper.property.clientPort" : "2181",
            "hbase.zookeeper.quorum" : "%HOSTGROUP::host_group_1%",
            "hbase.zookeeper.useMulti" : "true",
            "hfile.block.cache.size" : "0.4",
            "phoenix.functions.allowUserDefinedFunctions" : " ",
            "phoenix.query.timeoutMs" : "60000",
            "zookeeper.recovery.retry" : "6",
            "zookeeper.session.timeout" : "90000",
            "zookeeper.znode.parent" : "/hbase-unsecure"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hbase-audit",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hbase/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_1%:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hbase/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hbase-plugin-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-hbase-plugin-properties:1:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "hbase",
            "common.name.for.certificate" : "",
            "policy_user" : "ambari-qa",
            "ranger-hbase-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380368474,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "HBASE",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=HBASE&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hbase-policy",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "security.admin.protocol.acl" : "*",
            "security.client.protocol.acl" : "*",
            "security.masterregion.protocol.acl" : "*"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hbase-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hbase-client/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-hbase-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hbase-client/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-hbase-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hbase-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hbase-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\n# export HBASE_HEAPSIZE=1000\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n# If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if java_version < 8 %}\nJDK_DEPENDED_OPTS=\"-XX:PermSize=128m -XX:MaxPermSize=128m\"\n{% endif %}\n      \n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.security.auth.login.config={{client_jaas_config_file}} -Djava.io.tmpdir={{java_io_tmpdir}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} -Djava.security.auth.login.config={{master_jaas_config_file}} $JDK_DEPENDED_OPTS\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} -Djava.security.auth.login.config={{regionserver_jaas_config_file}} $JDK_DEPENDED_OPTS\"\nexport PHOENIX_QUERYSERVER_OPTS=\"$PHOENIX_QUERYSERVER_OPTS -Djava.security.auth.login.config={{queryserver_jaas_config_file}}\"\n{% else %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{java_io_tmpdir}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} $JDK_DEPENDED_OPTS\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} $JDK_DEPENDED_OPTS\"\n{% endif %}\n\n# HBase off-heap MaxDirectMemorySize\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS {% if hbase_max_direct_memory_size %} -XX:MaxDirectMemorySize={{hbase_max_direct_memory_size}}m {% endif %}\"",
            "hbase_java_io_tmpdir" : "/tmp",
            "hbase_log_dir" : "/var/log/hbase",
            "hbase_master_heapsize" : "1024m",
            "hbase_max_direct_memory_size" : "1048",
            "hbase_pid_dir" : "/var/run/hbase",
            "hbase_regionserver_heapsize" : "1024m",
            "hbase_regionserver_shutdown_timeout" : "30",
            "hbase_regionserver_xmn_max" : "512",
            "hbase_regionserver_xmn_ratio" : "0.2",
            "hbase_user" : "hbase",
            "hbase_user_nofile_limit" : "32000",
            "hbase_user_nproc_limit" : "16000",
            "phoenix_sql_enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hbase-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.hbase.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.hbase.policy.pollIntervalMs" : "30000",
            "ranger.plugin.hbase.policy.rest.ssl.config.file" : "/etc/hbase/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.hbase.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.hbase.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.hbase.service.name" : "{{repo_name}}",
            "xasecure.hbase.update.xapolicies.on.grant.revoke" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hbase-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "dfs.domain.socket.path" : "/var/lib/hadoop-hdfs/dn_socket",
            "hbase.bucketcache.ioengine" : "offheap",
            "hbase.bucketcache.percentage.in.combinedcache" : "",
            "hbase.bucketcache.size" : "1024",
            "hbase.bulkload.staging.dir" : "/apps/hbase/staging",
            "hbase.client.keyvalue.maxsize" : "1048576",
            "hbase.client.retries.number" : "35",
            "hbase.client.scanner.caching" : "100",
            "hbase.cluster.distributed" : "true",
            "hbase.coprocessor.master.classes" : "org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor",
            "hbase.coprocessor.region.classes" : "org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint,org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor",
            "hbase.coprocessor.regionserver.classes" : "org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor",
            "hbase.defaults.for.version.skip" : "true",
            "hbase.hregion.majorcompaction" : "604800000",
            "hbase.hregion.majorcompaction.jitter" : "0.50",
            "hbase.hregion.max.filesize" : "10737418240",
            "hbase.hregion.memstore.block.multiplier" : "4",
            "hbase.hregion.memstore.flush.size" : "134217728",
            "hbase.hregion.memstore.mslab.enabled" : "true",
            "hbase.hstore.blockingStoreFiles" : "10",
            "hbase.hstore.compaction.max" : "10",
            "hbase.hstore.compactionThreshold" : "3",
            "hbase.local.dir" : "${hbase.tmp.dir}/local",
            "hbase.master.info.bindAddress" : "0.0.0.0",
            "hbase.master.info.port" : "16010",
            "hbase.master.port" : "16000",
            "hbase.master.ui.readonly" : "false",
            "hbase.region.server.rpc.scheduler.factory.class" : "",
            "hbase.regionserver.global.memstore.size" : "0.4",
            "hbase.regionserver.handler.count" : "30",
            "hbase.regionserver.info.port" : "16030",
            "hbase.regionserver.port" : "16020",
            "hbase.regionserver.wal.codec" : "org.apache.hadoop.hbase.regionserver.wal.WALCellCodec",
            "hbase.rootdir" : "hdfs://sandbox.hortonworks.com:8020/apps/hbase/data",
            "hbase.rpc.controllerfactory.class" : "",
            "hbase.rpc.protection" : "authentication",
            "hbase.rpc.timeout" : "90000",
            "hbase.security.authentication" : "simple",
            "hbase.security.authorization" : "true",
            "hbase.superuser" : "hbase",
            "hbase.tmp.dir" : "/tmp/hbase-${user.name}",
            "hbase.zookeeper.property.clientPort" : "2181",
            "hbase.zookeeper.quorum" : "sandbox.hortonworks.com",
            "hbase.zookeeper.useMulti" : "true",
            "hfile.block.cache.size" : "0.4",
            "phoenix.functions.allowUserDefinedFunctions" : " ",
            "phoenix.query.timeoutMs" : "60000",
            "zookeeper.recovery.retry" : "6",
            "zookeeper.session.timeout" : "90000",
            "zookeeper.znode.parent" : "/hbase-unsecure"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hbase-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hbase/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hbase/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hbase-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-hbase-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "hbase",
            "common.name.for.certificate" : "",
            "policy_user" : "ambari-qa",
            "ranger-hbase-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380378704,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "HBASE",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=HDFS&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hdfs-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "dfs.block.access.token.enable" : "true",
            "dfs.blockreport.initialDelay" : "120",
            "dfs.blocksize" : "134217728",
            "dfs.client.read.shortcircuit" : "true",
            "dfs.client.read.shortcircuit.streams.cache.size" : "4096",
            "dfs.client.retry.policy.enabled" : "false",
            "dfs.cluster.administrators" : " hdfs",
            "dfs.content-summary.limit" : "5000",
            "dfs.datanode.address" : "0.0.0.0:50010",
            "dfs.datanode.balance.bandwidthPerSec" : "6250000",
            "dfs.datanode.data.dir" : "/hadoop/hdfs/data",
            "dfs.datanode.data.dir.perm" : "750",
            "dfs.datanode.du.reserved" : "1073741824",
            "dfs.datanode.failed.volumes.tolerated" : "0",
            "dfs.datanode.http.address" : "0.0.0.0:50075",
            "dfs.datanode.https.address" : "0.0.0.0:50475",
            "dfs.datanode.ipc.address" : "0.0.0.0:8010",
            "dfs.datanode.max.transfer.threads" : "16384",
            "dfs.domain.socket.path" : "/var/lib/hadoop-hdfs/dn_socket",
            "dfs.encrypt.data.transfer.cipher.suites" : "AES/CTR/NoPadding",
            "dfs.encryption.key.provider.uri" : "",
            "dfs.heartbeat.interval" : "3",
            "dfs.hosts.exclude" : "/etc/hadoop/conf/dfs.exclude",
            "dfs.http.policy" : "HTTP_ONLY",
            "dfs.https.port" : "50470",
            "dfs.journalnode.edits.dir" : "/hadoop/hdfs/journalnode",
            "dfs.journalnode.http-address" : "0.0.0.0:8480",
            "dfs.journalnode.https-address" : "0.0.0.0:8481",
            "dfs.namenode.accesstime.precision" : "0",
            "dfs.namenode.audit.log.async" : "true",
            "dfs.namenode.avoid.read.stale.datanode" : "true",
            "dfs.namenode.avoid.write.stale.datanode" : "true",
            "dfs.namenode.checkpoint.dir" : "/hadoop/hdfs/namesecondary",
            "dfs.namenode.checkpoint.edits.dir" : "${dfs.namenode.checkpoint.dir}",
            "dfs.namenode.checkpoint.period" : "21600",
            "dfs.namenode.checkpoint.txns" : "1000000",
            "dfs.namenode.fslock.fair" : "false",
            "dfs.namenode.handler.count" : "25",
            "dfs.namenode.http-address" : "%HOSTGROUP::host_group_1%:50070",
            "dfs.namenode.https-address" : "%HOSTGROUP::host_group_1%:50470",
            "dfs.namenode.inode.attributes.provider.class" : "org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer",
            "dfs.namenode.name.dir" : "/hadoop/hdfs/namenode",
            "dfs.namenode.name.dir.restore" : "true",
            "dfs.namenode.rpc-address" : "%HOSTGROUP::host_group_1%:8020",
            "dfs.namenode.safemode.threshold-pct" : "1.000",
            "dfs.namenode.secondary.http-address" : "%HOSTGROUP::host_group_1%:50090",
            "dfs.namenode.stale.datanode.interval" : "30000",
            "dfs.namenode.startup.delay.block.deletion.sec" : "3600",
            "dfs.namenode.write.stale.datanode.ratio" : "1.0f",
            "dfs.permissions.enabled" : "true",
            "dfs.permissions.superusergroup" : "hdfs",
            "dfs.replication" : "1",
            "dfs.replication.max" : "50",
            "dfs.support.append" : "true",
            "dfs.webhdfs.enabled" : "true",
            "fs.permissions.umask-mode" : "022",
            "nfs.exports.allowed.hosts" : "* rw",
            "nfs.file.dump.dir" : "/tmp/.hdfs-nfs"
          },
          "properties_attributes" : {
            "dfs.webhdfs.enabled" : {
              "final" : "true"
            },
            "dfs.namenode.http-address" : {
              "final" : "true"
            },
            "dfs.namenode.name.dir" : {
              "final" : "true"
            },
            "dfs.support.append" : {
              "final" : "true"
            },
            "dfs.datanode.failed.volumes.tolerated" : {
              "final" : "true"
            },
            "final" : {
              "dfs.webhdfs.enabled" : "true",
              "dfs.namenode.http-address" : "true",
              "dfs.support.append" : "true",
              "dfs.namenode.name.dir" : "true",
              "dfs.datanode.failed.volumes.tolerated" : "true",
              "dfs.datanode.data.dir" : "true"
            },
            "dfs.datanode.data.dir" : {
              "final" : "true"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-security",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.plugin.hdfs.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.hdfs.policy.pollIntervalMs" : "30000",
            "ranger.plugin.hdfs.policy.rest.ssl.config.file" : "/etc/hadoop/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.hdfs.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.hdfs.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.hdfs.service.name" : "{{repo_name}}",
            "xasecure.add-hadoop-authorization" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ssl-server",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ssl.server.keystore.keypassword" : "SECRET:ssl-server:1:ssl.server.keystore.keypassword",
            "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
            "ssl.server.keystore.password" : "SECRET:ssl-server:1:ssl.server.keystore.password",
            "ssl.server.keystore.type" : "jks",
            "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
            "ssl.server.truststore.password" : "SECRET:ssl-server:1:ssl.server.truststore.password",
            "ssl.server.truststore.reload.interval" : "10000",
            "ssl.server.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hadoop-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Set Hadoop-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java_home}}\nexport HADOOP_HOME_WARN_SUPPRESS=1\n\n# Hadoop home directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hadoop Configuration Directory\n\n{# this is different for HDP1 #}\n# Path to jsvc required by secure HDP 2.0 datanode\nexport JSVC_HOME={{jsvc_path}}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\nexport HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n# Extra Java runtime options.  Empty by default.\nexport HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n# Command specific options appended to HADOOP_OPTS when specified\nHADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\nHADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\n\n{% if java_version < 8 %}\nSHARED_HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\nexport HADOOP_NAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n{% else %}\nSHARED_HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\nexport HADOOP_NAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n{% endif %}\n\nHADOOP_NFS3_OPTS=\"-Xmx{{nfsgateway_heapsize}}m -Dhadoop.security.logger=ERROR,DRFAS ${HADOOP_NFS3_OPTS}\"\nHADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\n\n# On secure datanodes, user to run the datanode as after dropping privileges\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\n\n# Extra ssh options.  Empty by default.\nexport HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n# Where log files are stored.  $HADOOP_HOME/logs by default.\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n# History server logs\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n# Where log files are stored in the secure data environment.\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\n\n# host:path where hadoop code should be rsync'd from.  Unset by default.\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n# Seconds to sleep between slave commands.  Unset by default.  This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HADOOP_SLAVE_SLEEP=0.1\n\n# The directory where pid files are stored. /tmp by default.\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# History server pid\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\n\nYARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n# A string representing this instance of hadoop. $USER by default.\nexport HADOOP_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes.  See 'man nice'.\n\n# export HADOOP_NICENESS=10\n\n# Add database libraries\nJAVA_JDBC_LIBS=\"\"\nif [ -d \"/usr/share/java\" ]; then\n  for jarFile in `ls /usr/share/java | grep -E \"(mysql|ojdbc|postgresql|sqljdbc)\" 2>/dev/null`\n  do\n    JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\n  done\nfi\n\n# Add libraries to the hadoop classpath - some may not need a colon as they already include it\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}\n\n# Setting path to hdfs command line\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n# Mostly required for hadoop 2.0\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}\n\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n\n{% if is_datanode_max_locked_memory_set %}\n# Fix temporary bug, when ulimit from conf files is not picked up, without full relogin. \n# Makes sense to fix only when runing DN as root \nif [ \"$command\" == \"datanode\" ] && [ \"$EUID\" -eq 0 ] && [ -n \"$HADOOP_SECURE_DN_USER\" ]; then\n  ulimit -l {{datanode_max_locked_memory}}\nfi\n{% endif %}",
            "dtnode_heapsize" : "250m",
            "hadoop_heapsize" : "250",
            "hadoop_pid_dir_prefix" : "/var/run/hadoop",
            "hadoop_root_logger" : "INFO,RFA",
            "hdfs_log_dir_prefix" : "/var/log/hadoop",
            "hdfs_tmp_dir" : "/tmp",
            "hdfs_user" : "hdfs",
            "hdfs_user_nofile_limit" : "128000",
            "hdfs_user_nproc_limit" : "65536",
            "keyserver_host" : " ",
            "keyserver_port" : "",
            "namenode_heapsize" : "250m",
            "namenode_opt_maxnewsize" : "100m",
            "namenode_opt_maxpermsize" : "256m",
            "namenode_opt_newsize" : "50m",
            "namenode_opt_permsize" : "128m",
            "nfsgateway_heapsize" : "1024",
            "proxyuser_group" : "users"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hdfs-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize=256MB\nhadoop.security.log.maxbackupindex=20\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# NameNode metrics logging.\n# The default is to retain two namenode-metrics.log files up to 64MB each.\n#\nnamenode.metrics.logger=INFO,NullAppender\nlog4j.logger.NameNodeMetricsLog=${namenode.metrics.logger}\nlog4j.additivity.NameNodeMetricsLog=false\nlog4j.appender.NNMETRICSRFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.NNMETRICSRFA.File=${hadoop.log.dir}/namenode-metrics.log\nlog4j.appender.NNMETRICSRFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NNMETRICSRFA.layout.ConversionPattern=%d{ISO8601} %m%n\nlog4j.appender.NNMETRICSRFA.MaxBackupIndex=1\nlog4j.appender.NNMETRICSRFA.MaxFileSize=64MB\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize=256MB\nlog4j.appender.RFA.MaxBackupIndex=10\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-audit",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_1%:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-plugin-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-hdfs-plugin-properties:1:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "hadoop",
            "common.name.for.certificate" : "",
            "hadoop.rpc.protection" : "",
            "policy_user" : "ambari-qa",
            "ranger-hdfs-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-policymgr-ssl",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-hdfs-policymgr-ssl:1:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-hdfs-policymgr-ssl:1:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hadoop-policy",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "security.admin.operations.protocol.acl" : "hadoop",
            "security.client.datanode.protocol.acl" : "*",
            "security.client.protocol.acl" : "*",
            "security.datanode.protocol.acl" : "*",
            "security.inter.datanode.protocol.acl" : "*",
            "security.inter.tracker.protocol.acl" : "*",
            "security.job.client.protocol.acl" : "*",
            "security.job.task.protocol.acl" : "*",
            "security.namenode.protocol.acl" : "*",
            "security.refresh.policy.protocol.acl" : "hadoop",
            "security.refresh.usertogroups.mappings.protocol.acl" : "hadoop"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ssl-client",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ssl.client.keystore.location" : "/etc/security/clientKeys/keystore.jks",
            "ssl.client.keystore.password" : "SECRET:ssl-client:1:ssl.client.keystore.password",
            "ssl.client.keystore.type" : "jks",
            "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks",
            "ssl.client.truststore.password" : "SECRET:ssl-client:1:ssl.client.truststore.password",
            "ssl.client.truststore.reload.interval" : "10000",
            "ssl.client.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "core-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "fs.defaultFS" : "hdfs://%HOSTGROUP::host_group_1%:8020",
            "fs.trash.interval" : "360",
            "ha.failover-controller.active-standby-elector.zk.op.retries" : "120",
            "hadoop.http.authentication.simple.anonymous.allowed" : "true",
            "hadoop.proxyuser.falcon.groups" : "*",
            "hadoop.proxyuser.falcon.hosts" : "*",
            "hadoop.proxyuser.hbase.groups" : "*",
            "hadoop.proxyuser.hbase.hosts" : "*",
            "hadoop.proxyuser.hcat.groups" : "*",
            "hadoop.proxyuser.hcat.hosts" : "%HOSTGROUP::host_group_1%",
            "hadoop.proxyuser.hdfs.groups" : "*",
            "hadoop.proxyuser.hdfs.hosts" : "*",
            "hadoop.proxyuser.hive.groups" : "*",
            "hadoop.proxyuser.hive.hosts" : "%HOSTGROUP::host_group_1%",
            "hadoop.proxyuser.hue.groups" : "*",
            "hadoop.proxyuser.hue.hosts" : "*",
            "hadoop.proxyuser.livy.groups" : "*",
            "hadoop.proxyuser.livy.hosts" : "*",
            "hadoop.proxyuser.oozie.groups" : "*",
            "hadoop.proxyuser.oozie.hosts" : "%HOSTGROUP::host_group_1%",
            "hadoop.proxyuser.root.groups" : "*",
            "hadoop.proxyuser.root.hosts" : "sandbox.hortonworks.com",
            "hadoop.security.auth_to_local" : "DEFAULT",
            "hadoop.security.authentication" : "simple",
            "hadoop.security.authorization" : "false",
            "hadoop.security.key.provider.path" : "",
            "io.compression.codec.lzo.class" : "com.hadoop.compression.lzo.LzoCodec",
            "io.compression.codecs" : "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec,com.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec",
            "io.file.buffer.size" : "131072",
            "io.serializations" : "org.apache.hadoop.io.serializer.WritableSerialization",
            "ipc.client.connect.max.retries" : "50",
            "ipc.client.connection.maxidletime" : "30000",
            "ipc.client.idlethreshold" : "8000",
            "ipc.server.tcpnodelay" : "true",
            "mapreduce.jobtracker.webinterface.trusted" : "false",
            "net.topology.script.file.name" : "/etc/hadoop/conf/topology_script.py"
          },
          "properties_attributes" : {
            "fs.defaultFS" : {
              "final" : "true"
            },
            "final" : {
              "fs.defaultFS" : "true"
            }
          }
        }
      ],
      "createtime" : 1477380367727,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "HDFS",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=HDFS&service_config_version=3",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-hdfs-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-hdfs-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-hdfs-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "hadoop",
            "common.name.for.certificate" : "",
            "hadoop.rpc.protection" : "",
            "policy_user" : "ambari-qa",
            "ranger-hdfs-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ssl-server",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ssl.server.keystore.keypassword" : "SECRET:ssl-server:2:ssl.server.keystore.keypassword",
            "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
            "ssl.server.keystore.password" : "SECRET:ssl-server:2:ssl.server.keystore.password",
            "ssl.server.keystore.type" : "jks",
            "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
            "ssl.server.truststore.password" : "SECRET:ssl-server:2:ssl.server.truststore.password",
            "ssl.server.truststore.reload.interval" : "10000",
            "ssl.server.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.hdfs.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.hdfs.policy.pollIntervalMs" : "30000",
            "ranger.plugin.hdfs.policy.rest.ssl.config.file" : "/etc/hadoop/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.hdfs.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.hdfs.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.hdfs.service.name" : "{{repo_name}}",
            "xasecure.add-hadoop-authorization" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hadoop-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Set Hadoop-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java_home}}\nexport HADOOP_HOME_WARN_SUPPRESS=1\n\n# Hadoop home directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hadoop Configuration Directory\n\n{# this is different for HDP1 #}\n# Path to jsvc required by secure HDP 2.0 datanode\nexport JSVC_HOME={{jsvc_path}}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\nexport HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n# Extra Java runtime options.  Empty by default.\nexport HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n# Command specific options appended to HADOOP_OPTS when specified\nHADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\nHADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\n\n{% if java_version < 8 %}\nSHARED_HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\nexport HADOOP_NAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n{% else %}\nSHARED_HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\nexport HADOOP_NAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n{% endif %}\n\nHADOOP_NFS3_OPTS=\"-Xmx{{nfsgateway_heapsize}}m -Dhadoop.security.logger=ERROR,DRFAS ${HADOOP_NFS3_OPTS}\"\nHADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\n\n# On secure datanodes, user to run the datanode as after dropping privileges\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\n\n# Extra ssh options.  Empty by default.\nexport HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n# Where log files are stored.  $HADOOP_HOME/logs by default.\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n# History server logs\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n# Where log files are stored in the secure data environment.\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\n\n# host:path where hadoop code should be rsync'd from.  Unset by default.\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n# Seconds to sleep between slave commands.  Unset by default.  This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HADOOP_SLAVE_SLEEP=0.1\n\n# The directory where pid files are stored. /tmp by default.\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# History server pid\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\n\nYARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n# A string representing this instance of hadoop. $USER by default.\nexport HADOOP_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes.  See 'man nice'.\n\n# export HADOOP_NICENESS=10\n\n# Add database libraries\nJAVA_JDBC_LIBS=\"\"\nif [ -d \"/usr/share/java\" ]; then\n  for jarFile in `ls /usr/share/java | grep -E \"(mysql|ojdbc|postgresql|sqljdbc)\" 2>/dev/null`\n  do\n    JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\n  done\nfi\n\n# Add libraries to the hadoop classpath - some may not need a colon as they already include it\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}\n\n# Setting path to hdfs command line\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n# Mostly required for hadoop 2.0\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}\n\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n\n{% if is_datanode_max_locked_memory_set %}\n# Fix temporary bug, when ulimit from conf files is not picked up, without full relogin. \n# Makes sense to fix only when runing DN as root \nif [ \"$command\" == \"datanode\" ] && [ \"$EUID\" -eq 0 ] && [ -n \"$HADOOP_SECURE_DN_USER\" ]; then\n  ulimit -l {{datanode_max_locked_memory}}\nfi\n{% endif %}",
            "dtnode_heapsize" : "250m",
            "hadoop_heapsize" : "250",
            "hadoop_pid_dir_prefix" : "/var/run/hadoop",
            "hadoop_root_logger" : "INFO,RFA",
            "hdfs_log_dir_prefix" : "/var/log/hadoop",
            "hdfs_tmp_dir" : "/tmp",
            "hdfs_user" : "hdfs",
            "hdfs_user_nofile_limit" : "128000",
            "hdfs_user_nproc_limit" : "65536",
            "keyserver_host" : " ",
            "keyserver_port" : "",
            "namenode_heapsize" : "250m",
            "namenode_opt_maxnewsize" : "100m",
            "namenode_opt_maxpermsize" : "256m",
            "namenode_opt_newsize" : "50m",
            "namenode_opt_permsize" : "128m",
            "nfsgateway_heapsize" : "1024",
            "proxyuser_group" : "users"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hdfs-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize=256MB\nhadoop.security.log.maxbackupindex=20\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# NameNode metrics logging.\n# The default is to retain two namenode-metrics.log files up to 64MB each.\n#\nnamenode.metrics.logger=INFO,NullAppender\nlog4j.logger.NameNodeMetricsLog=${namenode.metrics.logger}\nlog4j.additivity.NameNodeMetricsLog=false\nlog4j.appender.NNMETRICSRFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.NNMETRICSRFA.File=${hadoop.log.dir}/namenode-metrics.log\nlog4j.appender.NNMETRICSRFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NNMETRICSRFA.layout.ConversionPattern=%d{ISO8601} %m%n\nlog4j.appender.NNMETRICSRFA.MaxBackupIndex=1\nlog4j.appender.NNMETRICSRFA.MaxFileSize=64MB\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize=256MB\nlog4j.appender.RFA.MaxBackupIndex=10\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ssl-client",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ssl.client.keystore.location" : "/etc/security/clientKeys/keystore.jks",
            "ssl.client.keystore.password" : "SECRET:ssl-client:2:ssl.client.keystore.password",
            "ssl.client.keystore.type" : "jks",
            "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks",
            "ssl.client.truststore.password" : "SECRET:ssl-client:2:ssl.client.truststore.password",
            "ssl.client.truststore.reload.interval" : "10000",
            "ssl.client.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hadoop-policy",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "security.admin.operations.protocol.acl" : "hadoop",
            "security.client.datanode.protocol.acl" : "*",
            "security.client.protocol.acl" : "*",
            "security.datanode.protocol.acl" : "*",
            "security.inter.datanode.protocol.acl" : "*",
            "security.inter.tracker.protocol.acl" : "*",
            "security.job.client.protocol.acl" : "*",
            "security.job.task.protocol.acl" : "*",
            "security.namenode.protocol.acl" : "*",
            "security.refresh.policy.protocol.acl" : "hadoop",
            "security.refresh.usertogroups.mappings.protocol.acl" : "hadoop"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hdfs-site",
          "tag" : "version1518207504267",
          "version" : 3,
          "properties" : {
            "dfs.block.access.token.enable" : "true",
            "dfs.blockreport.initialDelay" : "120",
            "dfs.blocksize" : "134217728",
            "dfs.client.read.shortcircuit" : "true",
            "dfs.client.read.shortcircuit.streams.cache.size" : "4096",
            "dfs.client.retry.policy.enabled" : "false",
            "dfs.cluster.administrators" : " hdfs",
            "dfs.content-summary.limit" : "5000",
            "dfs.datanode.address" : "0.0.0.0:50010",
            "dfs.datanode.balance.bandwidthPerSec" : "6250000",
            "dfs.datanode.data.dir" : "/hadoop/hdfs/data",
            "dfs.datanode.data.dir.perm" : "750",
            "dfs.datanode.du.reserved" : "1073741824",
            "dfs.datanode.failed.volumes.tolerated" : "0",
            "dfs.datanode.http.address" : "0.0.0.0:50075",
            "dfs.datanode.https.address" : "0.0.0.0:50475",
            "dfs.datanode.ipc.address" : "0.0.0.0:8010",
            "dfs.datanode.max.transfer.threads" : "16384",
            "dfs.domain.socket.path" : "/var/lib/hadoop-hdfs/dn_socket",
            "dfs.encrypt.data.transfer.cipher.suites" : "AES/CTR/NoPadding",
            "dfs.heartbeat.interval" : "3",
            "dfs.hosts.exclude" : "/etc/hadoop/conf/dfs.exclude",
            "dfs.http.policy" : "HTTP_ONLY",
            "dfs.https.port" : "50470",
            "dfs.journalnode.edits.dir" : "/hadoop/hdfs/journalnode",
            "dfs.journalnode.http-address" : "0.0.0.0:8480",
            "dfs.journalnode.https-address" : "0.0.0.0:8481",
            "dfs.namenode.accesstime.precision" : "0",
            "dfs.namenode.audit.log.async" : "true",
            "dfs.namenode.avoid.read.stale.datanode" : "true",
            "dfs.namenode.avoid.write.stale.datanode" : "true",
            "dfs.namenode.checkpoint.dir" : "/hadoop/hdfs/namesecondary",
            "dfs.namenode.checkpoint.edits.dir" : "${dfs.namenode.checkpoint.dir}",
            "dfs.namenode.checkpoint.period" : "21600",
            "dfs.namenode.checkpoint.txns" : "1000000",
            "dfs.namenode.fslock.fair" : "false",
            "dfs.namenode.handler.count" : "25",
            "dfs.namenode.http-address" : "sandbox.hortonworks.com:50070",
            "dfs.namenode.https-address" : "sandbox.hortonworks.com:50470",
            "dfs.namenode.inode.attributes.provider.class" : "org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer",
            "dfs.namenode.name.dir" : "/hadoop/hdfs/namenode",
            "dfs.namenode.name.dir.restore" : "true",
            "dfs.namenode.rpc-address" : "sandbox.hortonworks.com:8020",
            "dfs.namenode.safemode.threshold-pct" : "1",
            "dfs.namenode.secondary.http-address" : "sandbox.hortonworks.com:50090",
            "dfs.namenode.stale.datanode.interval" : "30000",
            "dfs.namenode.startup.delay.block.deletion.sec" : "3600",
            "dfs.namenode.write.stale.datanode.ratio" : "1.0f",
            "dfs.permissions.enabled" : "true",
            "dfs.permissions.superusergroup" : "hdfs",
            "dfs.replication" : "1",
            "dfs.replication.max" : "50",
            "dfs.support.append" : "true",
            "dfs.webhdfs.enabled" : "true",
            "fs.permissions.umask-mode" : "022",
            "nfs.exports.allowed.hosts" : "* rw",
            "nfs.file.dump.dir" : "/tmp/.hdfs-nfs"
          },
          "properties_attributes" : {
            "final" : {
              "dfs.webhdfs.enabled" : "true",
              "dfs.namenode.http-address" : "true",
              "dfs.support.append" : "true",
              "dfs.namenode.name.dir" : "true",
              "dfs.datanode.failed.volumes.tolerated" : "true",
              "dfs.datanode.data.dir" : "true"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "core-site",
          "tag" : "version1518207504267",
          "version" : 3,
          "properties" : {
            "fs.defaultFS" : "hdfs://sandbox.hortonworks.com:8020",
            "fs.trash.interval" : "360",
            "ha.failover-controller.active-standby-elector.zk.op.retries" : "120",
            "hadoop.http.authentication.simple.anonymous.allowed" : "true",
            "hadoop.proxyuser.falcon.groups" : "*",
            "hadoop.proxyuser.falcon.hosts" : "*",
            "hadoop.proxyuser.hbase.groups" : "*",
            "hadoop.proxyuser.hbase.hosts" : "*",
            "hadoop.proxyuser.hcat.groups" : "*",
            "hadoop.proxyuser.hcat.hosts" : "sandbox.hortonworks.com",
            "hadoop.proxyuser.hdfs.groups" : "*",
            "hadoop.proxyuser.hdfs.hosts" : "*",
            "hadoop.proxyuser.hive.groups" : "*",
            "hadoop.proxyuser.hive.hosts" : "sandbox.hortonworks.com",
            "hadoop.proxyuser.hue.groups" : "*",
            "hadoop.proxyuser.hue.hosts" : "*",
            "hadoop.proxyuser.livy.groups" : "*",
            "hadoop.proxyuser.livy.hosts" : "*",
            "hadoop.proxyuser.oozie.groups" : "*",
            "hadoop.proxyuser.oozie.hosts" : "sandbox.hortonworks.com",
            "hadoop.proxyuser.root.groups" : "*",
            "hadoop.proxyuser.root.hosts" : "sandbox.hortonworks.com",
            "hadoop.security.auth_to_local" : "DEFAULT",
            "hadoop.security.authentication" : "simple",
            "hadoop.security.authorization" : "false",
            "io.compression.codec.lzo.class" : "com.hadoop.compression.lzo.LzoCodec",
            "io.compression.codecs" : "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec,com.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec",
            "io.file.buffer.size" : "131072",
            "io.serializations" : "org.apache.hadoop.io.serializer.WritableSerialization",
            "ipc.client.connect.max.retries" : "50",
            "ipc.client.connection.maxidletime" : "30000",
            "ipc.client.idlethreshold" : "8000",
            "ipc.server.tcpnodelay" : "true",
            "mapreduce.jobtracker.webinterface.trusted" : "false",
            "net.topology.script.file.name" : "/etc/hadoop/conf/topology_script.py"
          },
          "properties_attributes" : {
            "final" : {
              "fs.defaultFS" : "true"
            }
          }
        }
      ],
      "createtime" : 1518207504703,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 3,
      "service_config_version_note" : "",
      "service_name" : "HDFS",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=HDFS&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ssl-server",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ssl.server.keystore.keypassword" : "SECRET:ssl-server:2:ssl.server.keystore.keypassword",
            "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
            "ssl.server.keystore.password" : "SECRET:ssl-server:2:ssl.server.keystore.password",
            "ssl.server.keystore.type" : "jks",
            "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
            "ssl.server.truststore.password" : "SECRET:ssl-server:2:ssl.server.truststore.password",
            "ssl.server.truststore.reload.interval" : "10000",
            "ssl.server.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hadoop-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Set Hadoop-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java_home}}\nexport HADOOP_HOME_WARN_SUPPRESS=1\n\n# Hadoop home directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hadoop Configuration Directory\n\n{# this is different for HDP1 #}\n# Path to jsvc required by secure HDP 2.0 datanode\nexport JSVC_HOME={{jsvc_path}}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\nexport HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n# Extra Java runtime options.  Empty by default.\nexport HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n# Command specific options appended to HADOOP_OPTS when specified\nHADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\nHADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\n\n{% if java_version < 8 %}\nSHARED_HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\nexport HADOOP_NAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n{% else %}\nSHARED_HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\nexport HADOOP_NAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n{% endif %}\n\nHADOOP_NFS3_OPTS=\"-Xmx{{nfsgateway_heapsize}}m -Dhadoop.security.logger=ERROR,DRFAS ${HADOOP_NFS3_OPTS}\"\nHADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\n\n# On secure datanodes, user to run the datanode as after dropping privileges\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\n\n# Extra ssh options.  Empty by default.\nexport HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n# Where log files are stored.  $HADOOP_HOME/logs by default.\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n# History server logs\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n# Where log files are stored in the secure data environment.\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\n\n# host:path where hadoop code should be rsync'd from.  Unset by default.\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n# Seconds to sleep between slave commands.  Unset by default.  This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HADOOP_SLAVE_SLEEP=0.1\n\n# The directory where pid files are stored. /tmp by default.\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# History server pid\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\n\nYARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n# A string representing this instance of hadoop. $USER by default.\nexport HADOOP_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes.  See 'man nice'.\n\n# export HADOOP_NICENESS=10\n\n# Add database libraries\nJAVA_JDBC_LIBS=\"\"\nif [ -d \"/usr/share/java\" ]; then\n  for jarFile in `ls /usr/share/java | grep -E \"(mysql|ojdbc|postgresql|sqljdbc)\" 2>/dev/null`\n  do\n    JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\n  done\nfi\n\n# Add libraries to the hadoop classpath - some may not need a colon as they already include it\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}\n\n# Setting path to hdfs command line\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n# Mostly required for hadoop 2.0\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}\n\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n\n{% if is_datanode_max_locked_memory_set %}\n# Fix temporary bug, when ulimit from conf files is not picked up, without full relogin. \n# Makes sense to fix only when runing DN as root \nif [ \"$command\" == \"datanode\" ] && [ \"$EUID\" -eq 0 ] && [ -n \"$HADOOP_SECURE_DN_USER\" ]; then\n  ulimit -l {{datanode_max_locked_memory}}\nfi\n{% endif %}",
            "dtnode_heapsize" : "250m",
            "hadoop_heapsize" : "250",
            "hadoop_pid_dir_prefix" : "/var/run/hadoop",
            "hadoop_root_logger" : "INFO,RFA",
            "hdfs_log_dir_prefix" : "/var/log/hadoop",
            "hdfs_tmp_dir" : "/tmp",
            "hdfs_user" : "hdfs",
            "hdfs_user_nofile_limit" : "128000",
            "hdfs_user_nproc_limit" : "65536",
            "keyserver_host" : " ",
            "keyserver_port" : "",
            "namenode_heapsize" : "250m",
            "namenode_opt_maxnewsize" : "100m",
            "namenode_opt_maxpermsize" : "256m",
            "namenode_opt_newsize" : "50m",
            "namenode_opt_permsize" : "128m",
            "nfsgateway_heapsize" : "1024",
            "proxyuser_group" : "users"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hdfs-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize=256MB\nhadoop.security.log.maxbackupindex=20\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# NameNode metrics logging.\n# The default is to retain two namenode-metrics.log files up to 64MB each.\n#\nnamenode.metrics.logger=INFO,NullAppender\nlog4j.logger.NameNodeMetricsLog=${namenode.metrics.logger}\nlog4j.additivity.NameNodeMetricsLog=false\nlog4j.appender.NNMETRICSRFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.NNMETRICSRFA.File=${hadoop.log.dir}/namenode-metrics.log\nlog4j.appender.NNMETRICSRFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NNMETRICSRFA.layout.ConversionPattern=%d{ISO8601} %m%n\nlog4j.appender.NNMETRICSRFA.MaxBackupIndex=1\nlog4j.appender.NNMETRICSRFA.MaxFileSize=64MB\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize=256MB\nlog4j.appender.RFA.MaxBackupIndex=10\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hdfs-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "dfs.block.access.token.enable" : "true",
            "dfs.blockreport.initialDelay" : "120",
            "dfs.blocksize" : "134217728",
            "dfs.client.read.shortcircuit" : "true",
            "dfs.client.read.shortcircuit.streams.cache.size" : "4096",
            "dfs.client.retry.policy.enabled" : "false",
            "dfs.cluster.administrators" : " hdfs",
            "dfs.content-summary.limit" : "5000",
            "dfs.datanode.address" : "0.0.0.0:50010",
            "dfs.datanode.balance.bandwidthPerSec" : "6250000",
            "dfs.datanode.data.dir" : "/hadoop/hdfs/data",
            "dfs.datanode.data.dir.perm" : "750",
            "dfs.datanode.du.reserved" : "1073741824",
            "dfs.datanode.failed.volumes.tolerated" : "0",
            "dfs.datanode.http.address" : "0.0.0.0:50075",
            "dfs.datanode.https.address" : "0.0.0.0:50475",
            "dfs.datanode.ipc.address" : "0.0.0.0:8010",
            "dfs.datanode.max.transfer.threads" : "16384",
            "dfs.domain.socket.path" : "/var/lib/hadoop-hdfs/dn_socket",
            "dfs.encrypt.data.transfer.cipher.suites" : "AES/CTR/NoPadding",
            "dfs.encryption.key.provider.uri" : "",
            "dfs.heartbeat.interval" : "3",
            "dfs.hosts.exclude" : "/etc/hadoop/conf/dfs.exclude",
            "dfs.http.policy" : "HTTP_ONLY",
            "dfs.https.port" : "50470",
            "dfs.journalnode.edits.dir" : "/hadoop/hdfs/journalnode",
            "dfs.journalnode.http-address" : "0.0.0.0:8480",
            "dfs.journalnode.https-address" : "0.0.0.0:8481",
            "dfs.namenode.accesstime.precision" : "0",
            "dfs.namenode.audit.log.async" : "true",
            "dfs.namenode.avoid.read.stale.datanode" : "true",
            "dfs.namenode.avoid.write.stale.datanode" : "true",
            "dfs.namenode.checkpoint.dir" : "/hadoop/hdfs/namesecondary",
            "dfs.namenode.checkpoint.edits.dir" : "${dfs.namenode.checkpoint.dir}",
            "dfs.namenode.checkpoint.period" : "21600",
            "dfs.namenode.checkpoint.txns" : "1000000",
            "dfs.namenode.fslock.fair" : "false",
            "dfs.namenode.handler.count" : "25",
            "dfs.namenode.http-address" : "sandbox.hortonworks.com:50070",
            "dfs.namenode.https-address" : "sandbox.hortonworks.com:50470",
            "dfs.namenode.inode.attributes.provider.class" : "org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer",
            "dfs.namenode.name.dir" : "/hadoop/hdfs/namenode",
            "dfs.namenode.name.dir.restore" : "true",
            "dfs.namenode.rpc-address" : "sandbox.hortonworks.com:8020",
            "dfs.namenode.safemode.threshold-pct" : "1.000",
            "dfs.namenode.secondary.http-address" : "sandbox.hortonworks.com:50090",
            "dfs.namenode.stale.datanode.interval" : "30000",
            "dfs.namenode.startup.delay.block.deletion.sec" : "3600",
            "dfs.namenode.write.stale.datanode.ratio" : "1.0f",
            "dfs.permissions.enabled" : "true",
            "dfs.permissions.superusergroup" : "hdfs",
            "dfs.replication" : "1",
            "dfs.replication.max" : "50",
            "dfs.support.append" : "true",
            "dfs.webhdfs.enabled" : "true",
            "fs.permissions.umask-mode" : "022",
            "nfs.exports.allowed.hosts" : "* rw",
            "nfs.file.dump.dir" : "/tmp/.hdfs-nfs"
          },
          "properties_attributes" : {
            "dfs.webhdfs.enabled" : {
              "final" : "true"
            },
            "dfs.namenode.http-address" : {
              "final" : "true"
            },
            "dfs.namenode.name.dir" : {
              "final" : "true"
            },
            "dfs.support.append" : {
              "final" : "true"
            },
            "dfs.datanode.failed.volumes.tolerated" : {
              "final" : "true"
            },
            "final" : {
              "dfs.webhdfs.enabled" : "true",
              "dfs.namenode.http-address" : "true",
              "dfs.support.append" : "true",
              "dfs.namenode.name.dir" : "true",
              "dfs.datanode.failed.volumes.tolerated" : "true",
              "dfs.datanode.data.dir" : "true"
            },
            "dfs.datanode.data.dir" : {
              "final" : "true"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.hdfs.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.hdfs.policy.pollIntervalMs" : "30000",
            "ranger.plugin.hdfs.policy.rest.ssl.config.file" : "/etc/hadoop/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.hdfs.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.hdfs.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.hdfs.service.name" : "{{repo_name}}",
            "xasecure.add-hadoop-authorization" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-hdfs-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "hadoop",
            "common.name.for.certificate" : "",
            "hadoop.rpc.protection" : "",
            "policy_user" : "ambari-qa",
            "ranger-hdfs-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hdfs-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-hdfs-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-hdfs-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hadoop-policy",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "security.admin.operations.protocol.acl" : "hadoop",
            "security.client.datanode.protocol.acl" : "*",
            "security.client.protocol.acl" : "*",
            "security.datanode.protocol.acl" : "*",
            "security.inter.datanode.protocol.acl" : "*",
            "security.inter.tracker.protocol.acl" : "*",
            "security.job.client.protocol.acl" : "*",
            "security.job.task.protocol.acl" : "*",
            "security.namenode.protocol.acl" : "*",
            "security.refresh.policy.protocol.acl" : "hadoop",
            "security.refresh.usertogroups.mappings.protocol.acl" : "hadoop"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ssl-client",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ssl.client.keystore.location" : "/etc/security/clientKeys/keystore.jks",
            "ssl.client.keystore.password" : "SECRET:ssl-client:2:ssl.client.keystore.password",
            "ssl.client.keystore.type" : "jks",
            "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks",
            "ssl.client.truststore.password" : "SECRET:ssl-client:2:ssl.client.truststore.password",
            "ssl.client.truststore.reload.interval" : "10000",
            "ssl.client.truststore.type" : "jks"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "core-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "fs.defaultFS" : "hdfs://sandbox.hortonworks.com:8020",
            "fs.trash.interval" : "360",
            "ha.failover-controller.active-standby-elector.zk.op.retries" : "120",
            "hadoop.http.authentication.simple.anonymous.allowed" : "true",
            "hadoop.proxyuser.falcon.groups" : "*",
            "hadoop.proxyuser.falcon.hosts" : "*",
            "hadoop.proxyuser.hbase.groups" : "*",
            "hadoop.proxyuser.hbase.hosts" : "*",
            "hadoop.proxyuser.hcat.groups" : "*",
            "hadoop.proxyuser.hcat.hosts" : "sandbox.hortonworks.com",
            "hadoop.proxyuser.hdfs.groups" : "*",
            "hadoop.proxyuser.hdfs.hosts" : "*",
            "hadoop.proxyuser.hive.groups" : "*",
            "hadoop.proxyuser.hive.hosts" : "sandbox.hortonworks.com",
            "hadoop.proxyuser.hue.groups" : "*",
            "hadoop.proxyuser.hue.hosts" : "*",
            "hadoop.proxyuser.livy.groups" : "*",
            "hadoop.proxyuser.livy.hosts" : "*",
            "hadoop.proxyuser.oozie.groups" : "*",
            "hadoop.proxyuser.oozie.hosts" : "sandbox.hortonworks.com",
            "hadoop.proxyuser.root.groups" : "*",
            "hadoop.proxyuser.root.hosts" : "sandbox.hortonworks.com",
            "hadoop.security.auth_to_local" : "DEFAULT",
            "hadoop.security.authentication" : "simple",
            "hadoop.security.authorization" : "false",
            "hadoop.security.key.provider.path" : "",
            "io.compression.codec.lzo.class" : "com.hadoop.compression.lzo.LzoCodec",
            "io.compression.codecs" : "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec,com.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec",
            "io.file.buffer.size" : "131072",
            "io.serializations" : "org.apache.hadoop.io.serializer.WritableSerialization",
            "ipc.client.connect.max.retries" : "50",
            "ipc.client.connection.maxidletime" : "30000",
            "ipc.client.idlethreshold" : "8000",
            "ipc.server.tcpnodelay" : "true",
            "mapreduce.jobtracker.webinterface.trusted" : "false",
            "net.topology.script.file.name" : "/etc/hadoop/conf/topology_script.py"
          },
          "properties_attributes" : {
            "fs.defaultFS" : {
              "final" : "true"
            },
            "final" : {
              "fs.defaultFS" : "true"
            }
          }
        }
      ],
      "createtime" : 1477380378420,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "HDFS",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=HIVE&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "llap-daemon-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = LlapDaemonLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.llap.daemon.log.level = INFO\nproperty.llap.daemon.root.logger = console\nproperty.llap.daemon.log.dir = .\nproperty.llap.daemon.log.file = llapdaemon.log\nproperty.llap.daemon.historylog.file = llapdaemon_history.log\nproperty.llap.daemon.log.maxfilesize = 256MB\nproperty.llap.daemon.log.maxbackupindex = 20\n\n# list of all appenders\nappenders = console, RFA, HISTORYAPPENDER\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t%x] %p %c{2} : %m%n\n\n# rolling file appender\nappender.RFA.type = RollingFile\nappender.RFA.name = RFA\nappender.RFA.fileName = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.log.file}\nappender.RFA.filePattern = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.log.file}_%i\nappender.RFA.layout.type = PatternLayout\nappender.RFA.layout.pattern = %d{ISO8601} %-5p [%t%x]: %c{2} (%F:%M(%L)) - %m%n\nappender.RFA.policies.type = Policies\nappender.RFA.policies.size.type = SizeBasedTriggeringPolicy\nappender.RFA.policies.size.size = ${sys:llap.daemon.log.maxfilesize}\nappender.RFA.strategy.type = DefaultRolloverStrategy\nappender.RFA.strategy.max = ${sys:llap.daemon.log.maxbackupindex}\n\n# history file appender\nappender.HISTORYAPPENDER.type = RollingFile\nappender.HISTORYAPPENDER.name = HISTORYAPPENDER\nappender.HISTORYAPPENDER.fileName = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.historylog.file}\nappender.HISTORYAPPENDER.filePattern = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.historylog.file}_%i\nappender.HISTORYAPPENDER.layout.type = PatternLayout\nappender.HISTORYAPPENDER.layout.pattern = %m%n\nappender.HISTORYAPPENDER.policies.type = Policies\nappender.HISTORYAPPENDER.policies.size.type = SizeBasedTriggeringPolicy\nappender.HISTORYAPPENDER.policies.size.size = ${sys:llap.daemon.log.maxfilesize}\nappender.HISTORYAPPENDER.strategy.type = DefaultRolloverStrategy\nappender.HISTORYAPPENDER.strategy.max = ${sys:llap.daemon.log.maxbackupindex}\n\n# list of all loggers\nloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX, HistoryLogger, LlapIoImpl, LlapIoOrc, LlapIoCache, LlapIoLocking\n\nlogger.LlapIoImpl.name = LlapIoImpl\nlogger.LlapIoImpl.level = INFO\n\nlogger.LlapIoOrc.name = LlapIoOrc\nlogger.LlapIoOrc.level = WARN\n\nlogger.LlapIoCache.name = LlapIoCache\nlogger.LlapIOCache.level = WARN\n\nlogger.LlapIoLocking.name = LlapIoLocking\nlogger.LlapIoLocking.level = WARN\n\nlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxn\nlogger.NIOServerCnxn.level = WARN\n\nlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIO\nlogger.ClientCnxnSocketNIO.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\nlogger.HistoryLogger.name = org.apache.hadoop.hive.llap.daemon.HistoryLogger\nlogger.HistoryLogger.level = INFO\nlogger.HistoryLogger.additivity = false\nlogger.HistoryLogger.appenderRefs = HistoryAppender\nlogger.HistoryLogger.appenderRef.HistoryAppender.ref = HISTORYAPPENDER\n\n# root logger\nrootLogger.level = ${sys:llap.daemon.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:llap.daemon.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "llap-cli-log4j2",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = WARN\nname = LlapCliLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = INFO\nproperty.hive.root.logger = console\nproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\nproperty.hive.log.file = llap-cli.log\n\n# list of all appenders\nappenders = console, DRFA\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\n# appender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\nappender.console.layout.pattern = %p %c{2}: %m%n\n\n# daily rolling file appender\nappender.DRFA.type = RollingFile\nappender.DRFA.name = DRFA\nappender.DRFA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}\n# Use %pid in the filePattern to append process-id@host-name to the filename if you want separate log files for different CLI session\nappender.DRFA.filePattern = ${sys:hive.log.dir}/${sys:hive.log.file}.%d{yyyy-MM-dd}\nappender.DRFA.layout.type = PatternLayout\nappender.DRFA.layout.pattern = %d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\nappender.DRFA.policies.type = Policies\nappender.DRFA.policies.time.type = TimeBasedTriggeringPolicy\nappender.DRFA.policies.time.interval = 1\nappender.DRFA.policies.time.modulate = true\nappender.DRFA.strategy.type = DefaultRolloverStrategy\nappender.DRFA.strategy.max = 30\n\n# list of all loggers\nloggers = ZooKeeper, DataNucleus, Datastore, JPOX, HadoopConf\n\nlogger.ZooKeeper.name = org.apache.zookeeper\nlogger.ZooKeeper.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\nlogger.HadoopConf.name = org.apache.hadoop.conf.Configuration\nlogger.HadoopConf.level = ERROR\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "webhcat-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Define some default values that can be overridden by system properties\nwebhcat.root.logger = INFO, standard\nwebhcat.log.dir = .\nwebhcat.log.file = webhcat.log\n\nlog4j.rootLogger = ${webhcat.root.logger}\n\n# Logging Threshold\nlog4j.threshhold = DEBUG\n\nlog4j.appender.standard  =  org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.standard.File = ${webhcat.log.dir}/${webhcat.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern = .yyyy-MM-dd\n\nlog4j.appender.DRFA.layout = org.apache.log4j.PatternLayout\n\nlog4j.appender.standard.layout = org.apache.log4j.PatternLayout\nlog4j.appender.standard.layout.conversionPattern = %-5p | %d{DATE} | %c | %m%n\n\n# Class logging settings\nlog4j.logger.com.sun.jersey = DEBUG\nlog4j.logger.com.sun.jersey.spi.container.servlet.WebComponent = ERROR\nlog4j.logger.org.apache.hadoop = INFO\nlog4j.logger.org.apache.hadoop.conf = WARN\nlog4j.logger.org.apache.zookeeper = WARN\nlog4j.logger.org.eclipse.jetty = INFO"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-interactive-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n      if [ \"$SERVICE\" = \"cli\" ]; then\n      if [ -z \"$DEBUG\" ]; then\n      export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit\"\n      else\n      export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n      fi\n      fi\n\n      # The heap size of the jvm stared by hive shell script can be controlled via:\n\n      if [ \"$SERVICE\" = \"metastore\" ]; then\n      export HADOOP_HEAPSIZE={{hive_metastore_heapsize}} # Setting for HiveMetastore\n      else\n      export HADOOP_HEAPSIZE={{hive_heapsize}} # Setting for HiveServer2 and Client\n      fi\n\n      export HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m\"\n\n      # Larger heap size may be required when running queries over large number of files or partitions.\n      # By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n      # appropriate for hive server (hwi etc).\n\n\n      # Set HADOOP_HOME to point to a specific hadoop install directory\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n      # Hive Configuration Directory can be controlled by:\n      export HIVE_CONF_DIR={{hive_server_interactive_conf_dir}}\n\n      # Folder containing extra ibraries required for hive compilation/execution can be controlled by:\n      # if [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n      # export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\n      # elif [ -d \"/usr/lib/hive-hcatalog/\" ]; then\n      # export HIVE_AUX_JARS_PATH=/usr/lib/hive-hcatalog/share/hcatalog/hive-hcatalog-core-*.jar\n      # else\n      # export HIVE_AUX_JARS_PATH=/usr/lib/hcatalog/share/hcatalog/hcatalog-core.jar\n      # fi\n      export METASTORE_PORT={{hive_metastore_port}}\n\n      export HADOOP_CLASSPATH={{atlas_conf_dir}}:{{atlas_home_dir}}/hook/hive:${HADOOP_CLASSPATH}\n\n      # Spark assembly contains a conflicting copy of HiveConf from hive-1.2\n      export HIVE_SKIP_SPARK_ASSEMBLY=true",
            "enable_hive_interactive" : "false",
            "hive_server_interactive_host" : "localhost",
            "llap_app_name" : "llap0",
            "llap_heap_size" : "0",
            "llap_java_opts" : "-XX:+UseG1GC -XX:TLABSize=8m -XX:+ResizeTLAB -XX:+UseNUMA -XX:+AggressiveOpts -XX:+AlwaysPreTouch -XX:InitiatingHeapOccupancyPercent=80 -XX:MaxGCPauseMillis=200",
            "llap_log_level" : "INFO",
            "llap_queue_capacity" : "0",
            "num_llap_nodes" : "1",
            "num_retries_for_checking_llap_status" : "10",
            "slider_am_container_mb" : "341"
          },
          "properties_attributes" : {
            "minimum" : {
              "num_llap_nodes" : "1"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hiveserver2-interactive-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "hive.async.log.enabled" : "false",
            "hive.metastore.metrics.enabled" : "true",
            "hive.service.metrics.file.location" : "/var/log/hive/hiveserver2Interactive-report.json",
            "hive.service.metrics.hadoop2.component" : "hiveserver2",
            "hive.service.metrics.reporter" : "JSON_FILE, JMX, HADOOP2"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-log4j2",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = HiveLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = INFO\nproperty.hive.root.logger = DRFA\nproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\nproperty.hive.log.file = hive.log\n\n# list of all appenders\nappenders = console, DRFA\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\n\n# daily rolling file appender\nappender.DRFA.type = RollingFile\nappender.DRFA.name = DRFA\nappender.DRFA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}\n# Use %pid in the filePattern to append process-id@host-name to the filename if you want separate log files for different CLI session\nappender.DRFA.filePattern = ${sys:hive.log.dir}/${sys:hive.log.file}.%d{yyyy-MM-dd}\nappender.DRFA.layout.type = PatternLayout\nappender.DRFA.layout.pattern = %d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\nappender.DRFA.policies.type = Policies\nappender.DRFA.policies.time.type = TimeBasedTriggeringPolicy\nappender.DRFA.policies.time.interval = 1\nappender.DRFA.policies.time.modulate = true\nappender.DRFA.strategy.type = DefaultRolloverStrategy\nappender.DRFA.strategy.max = 30\n\n# list of all loggers\nloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX\n\nlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxn\nlogger.NIOServerCnxn.level = WARN\n\nlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIO\nlogger.ClientCnxnSocketNIO.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hive-policymgr-ssl",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hive-server2/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-hive-policymgr-ssl:1:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hive-server2/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-hive-policymgr-ssl:1:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hcat-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n      # Licensed to the Apache Software Foundation (ASF) under one\n      # or more contributor license agreements. See the NOTICE file\n      # distributed with this work for additional information\n      # regarding copyright ownership. The ASF licenses this file\n      # to you under the Apache License, Version 2.0 (the\n      # \"License\"); you may not use this file except in compliance\n      # with the License. You may obtain a copy of the License at\n      #\n      # http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      JAVA_HOME={{java64_home}}\n      HCAT_PID_DIR={{hcat_pid_dir}}/\n      HCAT_LOG_DIR={{hcat_log_dir}}/\n      HCAT_CONF_DIR={{hcat_conf_dir}}\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n      #DBROOT is the path where the connector jars are downloaded\n      DBROOT={{hcat_dbroot}}\n      USER={{hcat_user}}\n      METASTORE_PORT={{hive_metastore_port}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ambari.hive.db.schema.name" : "hive",
            "atlas.cluster.name" : "Sandbox",
            "atlas.hook.hive.maxThreads" : "1",
            "atlas.hook.hive.minThreads" : "1",
            "atlas.rest.address" : "http://%HOSTGROUP::host_group_1%:21000",
            "datanucleus.autoCreateSchema" : "false",
            "datanucleus.cache.level2.type" : "none",
            "datanucleus.fixedDatastore" : "true",
            "hive.auto.convert.join" : "true",
            "hive.auto.convert.join.noconditionaltask" : "true",
            "hive.auto.convert.join.noconditionaltask.size" : "3149642683",
            "hive.auto.convert.sortmerge.join" : "true",
            "hive.auto.convert.sortmerge.join.to.mapjoin" : "false",
            "hive.cbo.enable" : "true",
            "hive.cli.print.header" : "false",
            "hive.cluster.delegation.token.store.class" : "org.apache.hadoop.hive.thrift.ZooKeeperTokenStore",
            "hive.cluster.delegation.token.store.zookeeper.connectString" : "%HOSTGROUP::host_group_1%:2181",
            "hive.cluster.delegation.token.store.zookeeper.znode" : "/hive/cluster/delegation",
            "hive.compactor.abortedtxn.threshold" : "1000",
            "hive.compactor.check.interval" : "300s",
            "hive.compactor.delta.num.threshold" : "10",
            "hive.compactor.delta.pct.threshold" : "0.1f",
            "hive.compactor.initiator.on" : "true",
            "hive.compactor.worker.threads" : "0",
            "hive.compactor.worker.timeout" : "86400s",
            "hive.compute.query.using.stats" : "true",
            "hive.conf.restricted.list" : "hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role",
            "hive.convert.join.bucket.mapjoin.tez" : "false",
            "hive.default.fileformat" : "TextFile",
            "hive.default.fileformat.managed" : "TextFile",
            "hive.enforce.bucketing" : "false",
            "hive.enforce.sorting" : "true",
            "hive.enforce.sortmergebucketmapjoin" : "true",
            "hive.exec.compress.intermediate" : "false",
            "hive.exec.compress.output" : "false",
            "hive.exec.dynamic.partition" : "true",
            "hive.exec.dynamic.partition.mode" : "strict",
            "hive.exec.failure.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
            "hive.exec.max.created.files" : "100000",
            "hive.exec.max.dynamic.partitions" : "5000",
            "hive.exec.max.dynamic.partitions.pernode" : "2000",
            "hive.exec.orc.compression.strategy" : "SPEED",
            "hive.exec.orc.default.compress" : "ZLIB",
            "hive.exec.orc.default.stripe.size" : "67108864",
            "hive.exec.orc.encoding.strategy" : "SPEED",
            "hive.exec.parallel" : "false",
            "hive.exec.parallel.thread.number" : "8",
            "hive.exec.post.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook,org.apache.atlas.hive.hook.HiveHook,org.apache.atlas.hive.hook.HiveHook",
            "hive.exec.pre.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
            "hive.exec.reducers.bytes.per.reducer" : "67108864",
            "hive.exec.reducers.max" : "1009",
            "hive.exec.scratchdir" : "/tmp/hive",
            "hive.exec.submit.local.task.via.child" : "true",
            "hive.exec.submitviachild" : "false",
            "hive.execution.engine" : "tez",
            "hive.fetch.task.aggr" : "false",
            "hive.fetch.task.conversion" : "more",
            "hive.fetch.task.conversion.threshold" : "1073741824",
            "hive.limit.optimize.enable" : "true",
            "hive.limit.pushdown.memory.usage" : "0.04",
            "hive.map.aggr" : "true",
            "hive.map.aggr.hash.force.flush.memory.threshold" : "0.9",
            "hive.map.aggr.hash.min.reduction" : "0.5",
            "hive.map.aggr.hash.percentmemory" : "0.5",
            "hive.mapjoin.bucket.cache.size" : "10000",
            "hive.mapjoin.optimized.hashtable" : "true",
            "hive.mapred.reduce.tasks.speculative.execution" : "false",
            "hive.merge.mapfiles" : "true",
            "hive.merge.mapredfiles" : "false",
            "hive.merge.orcfile.stripe.level" : "true",
            "hive.merge.rcfile.block.level" : "true",
            "hive.merge.size.per.task" : "256000000",
            "hive.merge.smallfiles.avgsize" : "16000000",
            "hive.merge.tezfiles" : "false",
            "hive.metastore.authorization.storage.checks" : "false",
            "hive.metastore.cache.pinobjtypes" : "Table,Database,Type,FieldSchema,Order",
            "hive.metastore.client.connect.retry.delay" : "5s",
            "hive.metastore.client.socket.timeout" : "1800s",
            "hive.metastore.connect.retries" : "24",
            "hive.metastore.execute.setugi" : "true",
            "hive.metastore.failure.retries" : "24",
            "hive.metastore.kerberos.keytab.file" : "/etc/security/keytabs/hive.service.keytab",
            "hive.metastore.kerberos.principal" : "hive/_HOST@EXAMPLE.COM",
            "hive.metastore.pre.event.listeners" : "org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener",
            "hive.metastore.sasl.enabled" : "false",
            "hive.metastore.schema.verification" : "false",
            "hive.metastore.schema.verification.record.version" : "false",
            "hive.metastore.server.max.threads" : "100000",
            "hive.metastore.uris" : "thrift://%HOSTGROUP::host_group_1%:9083",
            "hive.metastore.warehouse.dir" : "/apps/hive/warehouse",
            "hive.optimize.bucketmapjoin" : "true",
            "hive.optimize.bucketmapjoin.sortedmerge" : "false",
            "hive.optimize.constant.propagation" : "true",
            "hive.optimize.index.filter" : "true",
            "hive.optimize.metadataonly" : "true",
            "hive.optimize.null.scan" : "true",
            "hive.optimize.reducededuplication" : "true",
            "hive.optimize.reducededuplication.min.reducer" : "4",
            "hive.optimize.sort.dynamic.partition" : "false",
            "hive.orc.compute.splits.num.threads" : "10",
            "hive.orc.splits.include.file.footer" : "false",
            "hive.prewarm.enabled" : "false",
            "hive.prewarm.numcontainers" : "3",
            "hive.security.authenticator.manager" : "org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator",
            "hive.security.authorization.enabled" : "true",
            "hive.security.authorization.manager" : "org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory",
            "hive.security.metastore.authenticator.manager" : "org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator",
            "hive.security.metastore.authorization.auth.reads" : "true",
            "hive.security.metastore.authorization.manager" : "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider",
            "hive.server2.allow.user.substitution" : "true",
            "hive.server2.authentication" : "NONE",
            "hive.server2.authentication.kerberos.keytab" : "/etc/security/keytabs/hive.service.keytab",
            "hive.server2.authentication.kerberos.principal" : "hive/_HOST@EXAMPLE.COM",
            "hive.server2.authentication.ldap.url" : " ",
            "hive.server2.authentication.spnego.keytab" : "HTTP/_HOST@EXAMPLE.COM",
            "hive.server2.authentication.spnego.principal" : "/etc/security/keytabs/spnego.service.keytab",
            "hive.server2.enable.doAs" : "false",
            "hive.server2.logging.operation.enabled" : "true",
            "hive.server2.logging.operation.log.location" : "/tmp/hive/operation_logs",
            "hive.server2.max.start.attempts" : "5",
            "hive.server2.support.dynamic.service.discovery" : "true",
            "hive.server2.table.type.mapping" : "CLASSIC",
            "hive.server2.tez.default.queues" : "default",
            "hive.server2.tez.initialize.default.sessions" : "false",
            "hive.server2.tez.sessions.per.default.queue" : "1",
            "hive.server2.thrift.http.path" : "cliservice",
            "hive.server2.thrift.http.port" : "10001",
            "hive.server2.thrift.max.worker.threads" : "500",
            "hive.server2.thrift.port" : "10000",
            "hive.server2.thrift.sasl.qop" : "auth",
            "hive.server2.transport.mode" : "binary",
            "hive.server2.use.SSL" : "false",
            "hive.server2.zookeeper.namespace" : "hiveserver2",
            "hive.smbjoin.cache.rows" : "10000",
            "hive.stats.autogather" : "true",
            "hive.stats.dbclass" : "fs",
            "hive.stats.fetch.column.stats" : "true",
            "hive.stats.fetch.partition.stats" : "true",
            "hive.support.concurrency" : "true",
            "hive.tez.auto.reducer.parallelism" : "true",
            "hive.tez.container.size" : "250",
            "hive.tez.cpu.vcores" : "-1",
            "hive.tez.dynamic.partition.pruning" : "true",
            "hive.tez.dynamic.partition.pruning.max.data.size" : "104857600",
            "hive.tez.dynamic.partition.pruning.max.event.size" : "1048576",
            "hive.tez.input.format" : "org.apache.hadoop.hive.ql.io.HiveInputFormat",
            "hive.tez.java.opts" : "-server -Xmx200m -Djava.net.preferIPv4Stack=true",
            "hive.tez.log.level" : "INFO",
            "hive.tez.max.partition.factor" : "2.0",
            "hive.tez.min.partition.factor" : "0.25",
            "hive.tez.smb.number.waves" : "0.5",
            "hive.txn.manager" : "org.apache.hadoop.hive.ql.lockmgr.DbTxnManager",
            "hive.txn.max.open.batch" : "1000",
            "hive.txn.timeout" : "300",
            "hive.user.install.directory" : "/user/",
            "hive.users.in.admin.role" : "hue,hive",
            "hive.vectorized.execution.enabled" : "true",
            "hive.vectorized.execution.reduce.enabled" : "false",
            "hive.vectorized.groupby.checkinterval" : "4096",
            "hive.vectorized.groupby.flush.percent" : "0.1",
            "hive.vectorized.groupby.maxentries" : "100000",
            "hive.zookeeper.client.port" : "2181",
            "hive.zookeeper.namespace" : "hive_zookeeper_namespace",
            "hive.zookeeper.quorum" : "%HOSTGROUP::host_group_1%:2181",
            "hive_metastore_user_passwd" : "hive",
            "javax.jdo.option.ConnectionDriverName" : "com.mysql.jdbc.Driver",
            "javax.jdo.option.ConnectionPassword" : "SECRET:hive-site:1:javax.jdo.option.ConnectionPassword",
            "javax.jdo.option.ConnectionURL" : "jdbc:mysql://%HOSTGROUP::host_group_1%/hive?createDatabaseIfNotExist=true",
            "javax.jdo.option.ConnectionUserName" : "root"
          },
          "properties_attributes" : {
            "hidden" : {
              "javax.jdo.option.ConnectionPassword" : "HIVE_CLIENT,WEBHCAT_SERVER,HCAT,CONFIG_DOWNLOAD"
            },
            "javax.jdo.option.ConnectionPassword" : {
              "hidden" : "HIVE_CLIENT,WEBHCAT_SERVER,HCAT,CONFIG_DOWNLOAD"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hive-plugin-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-hive-plugin-properties:1:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "hive",
            "common.name.for.certificate" : "",
            "jdbc.driverClassName" : "org.apache.hive.jdbc.HiveDriver",
            "policy_user" : "ambari-qa"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "webhcat-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "templeton.exec.timeout" : "60000",
            "templeton.hadoop" : "/usr/hdp/${hdp.version}/hadoop/bin/hadoop",
            "templeton.hadoop.conf.dir" : "/etc/hadoop/conf",
            "templeton.hadoop.queue.name" : "default",
            "templeton.hcat" : "/usr/hdp/${hdp.version}/hive/bin/hcat",
            "templeton.hcat.home" : "hive.tar.gz/hive/hcatalog",
            "templeton.hive.archive" : "hdfs:///hdp/apps/${hdp.version}/hive/hive.tar.gz",
            "templeton.hive.extra.files" : "/usr/hdp/${hdp.version}/tez/conf/tez-site.xml,/usr/hdp/${hdp.version}/tez,/usr/hdp/${hdp.version}/tez/lib",
            "templeton.hive.home" : "hive.tar.gz/hive",
            "templeton.hive.path" : "hive.tar.gz/hive/bin/hive",
            "templeton.hive.properties" : "hive.metastore.local=false,hive.metastore.uris=thrift://%HOSTGROUP::host_group_1%:9083,hive.metastore.sasl.enabled=false,hive.metastore.execute.setugi=true,hive.metastore.warehouse.dir=/apps/hive/warehouse",
            "templeton.jar" : "/usr/hdp/${hdp.version}/hive/share/webhcat/svr/lib/hive-webhcat-*.jar",
            "templeton.libjars" : "/usr/hdp/${hdp.version}/zookeeper/zookeeper.jar,/usr/hdp/${hdp.version}/hive/lib/hive-common.jar",
            "templeton.override.enabled" : "false",
            "templeton.pig.archive" : "hdfs:///hdp/apps/${hdp.version}/pig/pig.tar.gz",
            "templeton.pig.path" : "pig.tar.gz/pig/bin/pig",
            "templeton.port" : "50111",
            "templeton.python" : "${env.PYTHON_CMD}",
            "templeton.sqoop.archive" : "hdfs:///hdp/apps/${hdp.version}/sqoop/sqoop.tar.gz",
            "templeton.sqoop.home" : "sqoop.tar.gz/sqoop",
            "templeton.sqoop.path" : "sqoop.tar.gz/sqoop/bin/sqoop",
            "templeton.storage.class" : "org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage",
            "templeton.streaming.jar" : "hdfs:///hdp/apps/${hdp.version}/mapreduce/hadoop-streaming.jar",
            "templeton.zookeeper.hosts" : "%HOSTGROUP::host_group_1%:2181",
            "webhcat.proxyuser.hcat.groups" : "*",
            "webhcat.proxyuser.hcat.hosts" : "*",
            "webhcat.proxyuser.hue.groups" : "*",
            "webhcat.proxyuser.hue.hosts" : "*",
            "webhcat.proxyuser.root.groups" : "*",
            "webhcat.proxyuser.root.hosts" : "sandbox.hortonworks.com"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "tez-interactive-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "tez.am.resource.memory.mb" : "1536",
            "tez.dag.recovery.enabled" : "false",
            "tez.grouping.node.local.only" : "true",
            "tez.lib.uris" : "/hdp/apps/${hdp.version}/tez_hive2/tez.tar.gz",
            "tez.runtime.pipelined-shuffle.enabled" : "false",
            "tez.runtime.pipelined.sorter.lazy-allocate.memory" : "true",
            "tez.runtime.report.partition.stats" : "true",
            "tez.runtime.shuffle.fetch.buffer.percent" : "0.6",
            "tez.runtime.shuffle.fetch.verify-disk-checksum" : "false",
            "tez.runtime.shuffle.memory.limit.percent" : "0.25",
            "tez.session.am.dag.submit.timeout.secs" : "3600"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-exec-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\n\nhive.log.threshold=ALL\nhive.root.logger=INFO,FA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.query.id=hadoop\nhive.log.file=${hive.query.id}.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=${hive.log.threshold}\n\n#\n# File Appender\n#\n\nlog4j.appender.FA=org.apache.log4j.FileAppender\nlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}\nlog4j.appender.FA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,FA\nlog4j.category.Datastore=ERROR,FA\nlog4j.category.Datastore.Schema=ERROR,FA\nlog4j.category.JPOX.Datastore=ERROR,FA\nlog4j.category.JPOX.Plugin=ERROR,FA\nlog4j.category.JPOX.MetaData=ERROR,FA\nlog4j.category.JPOX.Query=ERROR,FA\nlog4j.category.JPOX.General=ERROR,FA\nlog4j.category.JPOX.Enhancer=ERROR,FA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hivemetastore-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "hive.metastore.metrics.enabled" : "true",
            "hive.service.metrics.file.location" : "/var/log/hive/hivemetastore-report.json",
            "hive.service.metrics.hadoop2.component" : "hivemetastore",
            "hive.service.metrics.reporter" : "JSON_FILE, JMX, HADOOP2"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "webhcat-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# The file containing the running pid\nPID_FILE={{webhcat_pid_file}}\n\nTEMPLETON_LOG_DIR={{templeton_log_dir}}/\n\n\nWEBHCAT_LOG_DIR={{templeton_log_dir}}/\n\n# The console error log\nERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log\n\n# The console log\nCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log\n\n#TEMPLETON_JAR=templeton_jar_name\n\n#HADOOP_PREFIX=hadoop_prefix\n\n#HCAT_PREFIX=hive_prefix\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-exec-log4j2",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = HiveExecLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = INFO\nproperty.hive.root.logger = FA\nproperty.hive.query.id = hadoop\nproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\nproperty.hive.log.file = ${sys:hive.query.id}.log\n\n# list of all appenders\nappenders = console, FA\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\n\n# simple file appender\nappender.FA.type = File\nappender.FA.name = FA\nappender.FA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}\nappender.FA.layout.type = PatternLayout\nappender.FA.layout.pattern = %d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\n\n# list of all loggers\nloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX\n\nlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxn\nlogger.NIOServerCnxn.level = WARN\n\nlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIO\nlogger.ClientCnxnSocketNIO.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hiveserver2-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "hive.conf.restricted.list" : "hive.security.authorization.enabled,hive.security.authorization.manager,hive.security.authenticator.manager",
            "hive.metastore.metrics.enabled" : "true",
            "hive.security.authenticator.manager" : "org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator",
            "hive.security.authorization.enabled" : "true",
            "hive.security.authorization.manager" : "org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory",
            "hive.service.metrics.file.location" : "/var/log/hive/hiveserver2-report.json",
            "hive.service.metrics.hadoop2.component" : "hiveserver2",
            "hive.service.metrics.reporter" : "JSON_FILE, JMX, HADOOP2"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\nhive.log.threshold=ALL\nhive.root.logger=INFO,DRFA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.log.file=hive.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshold=${hive.log.threshold}\n\n#\n# Daily Rolling File Appender\n#\n# Use the PidDailyerRollingFileAppend class instead if you want to use separate log files\n# for different CLI session.\n#\n# log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppender\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\n\nlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\nlog4j.appender.console.encoding=UTF-8\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,DRFA\nlog4j.category.Datastore=ERROR,DRFA\nlog4j.category.Datastore.Schema=ERROR,DRFA\nlog4j.category.JPOX.Datastore=ERROR,DRFA\nlog4j.category.JPOX.Plugin=ERROR,DRFA\nlog4j.category.JPOX.MetaData=ERROR,DRFA\nlog4j.category.JPOX.Query=ERROR,DRFA\nlog4j.category.JPOX.General=ERROR,DRFA\nlog4j.category.JPOX.Enhancer=ERROR,DRFA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-atlas-application.properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "atlas.hook.hive.keepAliveTime" : "10",
            "atlas.hook.hive.maxThreads" : "5",
            "atlas.hook.hive.minThreads" : "5",
            "atlas.hook.hive.numRetries" : "3",
            "atlas.hook.hive.queueSize" : "1000",
            "atlas.hook.hive.synchronous" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "beeline-log4j2",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = BeelineLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = WARN\nproperty.hive.root.logger = console\n\n# list of all appenders\nappenders = console\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\n\n# list of all loggers\nloggers = HiveConnection\n\n# HiveConnection logs useful info for dynamic service discovery\nlogger.HiveConnection.name = org.apache.hive.jdbc.HiveConnection\nlogger.HiveConnection.level = INFO\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n      export HADOOP_USER_CLASSPATH_FIRST=true  #this prevents old metrics libs from mapreduce lib from bringing in old jar deps overriding HIVE_LIB\n      if [ \"$SERVICE\" = \"cli\" ]; then\n      if [ -z \"$DEBUG\" ]; then\n      export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseNUMA -XX:+UseParallelGC -XX:-UseGCOverheadLimit\"\n      else\n      export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n      fi\n      fi\n\n      # The heap size of the jvm stared by hive shell script can be controlled via:\n\n      if [ \"$SERVICE\" = \"metastore\" ]; then\n      export HADOOP_HEAPSIZE={{hive_metastore_heapsize}} # Setting for HiveMetastore\n      else\n      export HADOOP_HEAPSIZE={{hive_heapsize}} # Setting for HiveServer2 and Client\n      fi\n\n      export HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m\"\n\n      # Larger heap size may be required when running queries over large number of files or partitions.\n      # By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n      # appropriate for hive server (hwi etc).\n\n\n      # Set HADOOP_HOME to point to a specific hadoop install directory\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n      # Hive Configuration Directory can be controlled by:\n      export HIVE_CONF_DIR={{hive_config_dir}}\n\n      # Folder containing extra libraries required for hive compilation/execution can be controlled by:\n      if [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n      if [ -f \"${HIVE_AUX_JARS_PATH}\" ]; then\n      export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\n      elif [ -d \"/usr/hdp/current/hive-webhcat/share/hcatalog\" ]; then\n      export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar\n      fi\n      elif [ -d \"/usr/hdp/current/hive-webhcat/share/hcatalog\" ]; then\n      export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar\n      fi\n\n      export METASTORE_PORT={{hive_metastore_port}}\n\n      export HADOOP_CLASSPATH={{atlas_conf_dir}}:{{atlas_home_dir}}/hook/hive:${HADOOP_CLASSPATH}\n\n      {% if sqla_db_used or lib_dir_available %}\n      export LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:{{jdbc_libs_dir}}\"\n      export JAVA_LIBRARY_PATH=\"$JAVA_LIBRARY_PATH:{{jdbc_libs_dir}}\"\n      {% endif %}",
            "hcat_log_dir" : "/var/log/webhcat",
            "hcat_pid_dir" : "/var/run/webhcat",
            "hcat_user" : "hcat",
            "hive.client.heapsize" : "1024",
            "hive.heapsize" : "96628",
            "hive.metastore.heapsize" : "32209",
            "hive_ambari_database" : "MySQL",
            "hive_database" : "New MySQL Database",
            "hive_database_name" : "hive",
            "hive_database_type" : "mysql",
            "hive_exec_orc_storage_strategy" : "SPEED",
            "hive_log_dir" : "/var/log/hive",
            "hive_pid_dir" : "/var/run/hive",
            "hive_security_authorization" : "Ranger",
            "hive_timeline_logging_enabled" : "true",
            "hive_txn_acid" : "off",
            "hive_user" : "hive",
            "hive_user_nofile_limit" : "32000",
            "hive_user_nproc_limit" : "16000",
            "webhcat_user" : "hcat"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-interactive-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "hive.driver.parallel.compilation" : "true",
            "hive.exec.orc.split.strategy" : "HYBRID",
            "hive.execution.engine" : "tez",
            "hive.execution.mode" : "llap",
            "hive.llap.auto.allow.uber" : "false",
            "hive.llap.client.consistent.splits" : "true",
            "hive.llap.daemon.allow.permanent.fns" : "false",
            "hive.llap.daemon.memory.per.instance.mb" : "250",
            "hive.llap.daemon.num.executors" : "1",
            "hive.llap.daemon.queue.name" : "default",
            "hive.llap.daemon.rpc.port" : "15001",
            "hive.llap.daemon.service.hosts" : "@llap0",
            "hive.llap.daemon.task.scheduler.enable.preemption" : "true",
            "hive.llap.daemon.vcpus.per.instance" : "${hive.llap.daemon.num.executors}",
            "hive.llap.daemon.work.dirs" : "${yarn.nodemanager.local-dirs}",
            "hive.llap.daemon.yarn.container.mb" : "341",
            "hive.llap.daemon.yarn.shuffle.port" : "15551",
            "hive.llap.execution.mode" : "all",
            "hive.llap.io.enabled" : "true",
            "hive.llap.io.memory.mode" : "cache",
            "hive.llap.io.memory.size" : "0",
            "hive.llap.io.threadpool.size" : "2",
            "hive.llap.io.use.lrfu" : "true",
            "hive.llap.management.rpc.port" : "15004",
            "hive.llap.object.cache.enabled" : "true",
            "hive.llap.task.scheduler.locality.delay" : "-1",
            "hive.llap.zk.sm.connectionString" : "%HOSTGROUP::host_group_1%:2181",
            "hive.mapjoin.hybridgrace.hashtable" : "false",
            "hive.metastore.event.listeners" : "",
            "hive.metastore.uris" : "",
            "hive.optimize.dynamic.partition.hashjoin" : "true",
            "hive.prewarm.enabled" : "false",
            "hive.server2.enable.doAs" : "false",
            "hive.server2.tez.default.queues" : "default",
            "hive.server2.tez.initialize.default.sessions" : "true",
            "hive.server2.tez.sessions.per.default.queue" : "1",
            "hive.server2.thrift.http.port" : "10501",
            "hive.server2.thrift.port" : "10500",
            "hive.server2.webui.port" : "10502",
            "hive.server2.webui.use.ssl" : "false",
            "hive.server2.zookeeper.namespace" : "hiveserver2-hive2",
            "hive.tez.bucket.pruning" : "true",
            "hive.tez.exec.print.summary" : "true",
            "hive.tez.input.generate.consistent.splits" : "true",
            "hive.vectorized.execution.mapjoin.minmax.enabled" : "true",
            "hive.vectorized.execution.mapjoin.native.enabled" : "true",
            "hive.vectorized.execution.mapjoin.native.fast.hashtable.enabled" : "true",
            "hive.vectorized.execution.reduce.enabled" : "true",
            "llap.shuffle.connection-keep-alive.enable" : "true",
            "llap.shuffle.connection-keep-alive.timeout" : "60"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hive-audit",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hive/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_1%:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hive/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hive-security",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.plugin.hive.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.hive.policy.pollIntervalMs" : "30000",
            "ranger.plugin.hive.policy.rest.ssl.config.file" : "/usr/hdp/current/hive-server2/conf/conf.server/ranger-policymgr-ssl.xml",
            "ranger.plugin.hive.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.hive.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.hive.service.name" : "{{repo_name}}",
            "xasecure.hive.update.xapolicies.on.grant.revoke" : "true"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380372821,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "HIVE",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=HIVE&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "llap-daemon-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = LlapDaemonLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.llap.daemon.log.level = INFO\nproperty.llap.daemon.root.logger = console\nproperty.llap.daemon.log.dir = .\nproperty.llap.daemon.log.file = llapdaemon.log\nproperty.llap.daemon.historylog.file = llapdaemon_history.log\nproperty.llap.daemon.log.maxfilesize = 256MB\nproperty.llap.daemon.log.maxbackupindex = 20\n\n# list of all appenders\nappenders = console, RFA, HISTORYAPPENDER\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t%x] %p %c{2} : %m%n\n\n# rolling file appender\nappender.RFA.type = RollingFile\nappender.RFA.name = RFA\nappender.RFA.fileName = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.log.file}\nappender.RFA.filePattern = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.log.file}_%i\nappender.RFA.layout.type = PatternLayout\nappender.RFA.layout.pattern = %d{ISO8601} %-5p [%t%x]: %c{2} (%F:%M(%L)) - %m%n\nappender.RFA.policies.type = Policies\nappender.RFA.policies.size.type = SizeBasedTriggeringPolicy\nappender.RFA.policies.size.size = ${sys:llap.daemon.log.maxfilesize}\nappender.RFA.strategy.type = DefaultRolloverStrategy\nappender.RFA.strategy.max = ${sys:llap.daemon.log.maxbackupindex}\n\n# history file appender\nappender.HISTORYAPPENDER.type = RollingFile\nappender.HISTORYAPPENDER.name = HISTORYAPPENDER\nappender.HISTORYAPPENDER.fileName = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.historylog.file}\nappender.HISTORYAPPENDER.filePattern = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.historylog.file}_%i\nappender.HISTORYAPPENDER.layout.type = PatternLayout\nappender.HISTORYAPPENDER.layout.pattern = %m%n\nappender.HISTORYAPPENDER.policies.type = Policies\nappender.HISTORYAPPENDER.policies.size.type = SizeBasedTriggeringPolicy\nappender.HISTORYAPPENDER.policies.size.size = ${sys:llap.daemon.log.maxfilesize}\nappender.HISTORYAPPENDER.strategy.type = DefaultRolloverStrategy\nappender.HISTORYAPPENDER.strategy.max = ${sys:llap.daemon.log.maxbackupindex}\n\n# list of all loggers\nloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX, HistoryLogger, LlapIoImpl, LlapIoOrc, LlapIoCache, LlapIoLocking\n\nlogger.LlapIoImpl.name = LlapIoImpl\nlogger.LlapIoImpl.level = INFO\n\nlogger.LlapIoOrc.name = LlapIoOrc\nlogger.LlapIoOrc.level = WARN\n\nlogger.LlapIoCache.name = LlapIoCache\nlogger.LlapIOCache.level = WARN\n\nlogger.LlapIoLocking.name = LlapIoLocking\nlogger.LlapIoLocking.level = WARN\n\nlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxn\nlogger.NIOServerCnxn.level = WARN\n\nlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIO\nlogger.ClientCnxnSocketNIO.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\nlogger.HistoryLogger.name = org.apache.hadoop.hive.llap.daemon.HistoryLogger\nlogger.HistoryLogger.level = INFO\nlogger.HistoryLogger.additivity = false\nlogger.HistoryLogger.appenderRefs = HistoryAppender\nlogger.HistoryLogger.appenderRef.HistoryAppender.ref = HISTORYAPPENDER\n\n# root logger\nrootLogger.level = ${sys:llap.daemon.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:llap.daemon.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "llap-cli-log4j2",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = WARN\nname = LlapCliLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = INFO\nproperty.hive.root.logger = console\nproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\nproperty.hive.log.file = llap-cli.log\n\n# list of all appenders\nappenders = console, DRFA\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\n# appender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\nappender.console.layout.pattern = %p %c{2}: %m%n\n\n# daily rolling file appender\nappender.DRFA.type = RollingFile\nappender.DRFA.name = DRFA\nappender.DRFA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}\n# Use %pid in the filePattern to append process-id@host-name to the filename if you want separate log files for different CLI session\nappender.DRFA.filePattern = ${sys:hive.log.dir}/${sys:hive.log.file}.%d{yyyy-MM-dd}\nappender.DRFA.layout.type = PatternLayout\nappender.DRFA.layout.pattern = %d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\nappender.DRFA.policies.type = Policies\nappender.DRFA.policies.time.type = TimeBasedTriggeringPolicy\nappender.DRFA.policies.time.interval = 1\nappender.DRFA.policies.time.modulate = true\nappender.DRFA.strategy.type = DefaultRolloverStrategy\nappender.DRFA.strategy.max = 30\n\n# list of all loggers\nloggers = ZooKeeper, DataNucleus, Datastore, JPOX, HadoopConf\n\nlogger.ZooKeeper.name = org.apache.zookeeper\nlogger.ZooKeeper.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\nlogger.HadoopConf.name = org.apache.hadoop.conf.Configuration\nlogger.HadoopConf.level = ERROR\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "webhcat-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Define some default values that can be overridden by system properties\nwebhcat.root.logger = INFO, standard\nwebhcat.log.dir = .\nwebhcat.log.file = webhcat.log\n\nlog4j.rootLogger = ${webhcat.root.logger}\n\n# Logging Threshold\nlog4j.threshhold = DEBUG\n\nlog4j.appender.standard  =  org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.standard.File = ${webhcat.log.dir}/${webhcat.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern = .yyyy-MM-dd\n\nlog4j.appender.DRFA.layout = org.apache.log4j.PatternLayout\n\nlog4j.appender.standard.layout = org.apache.log4j.PatternLayout\nlog4j.appender.standard.layout.conversionPattern = %-5p | %d{DATE} | %c | %m%n\n\n# Class logging settings\nlog4j.logger.com.sun.jersey = DEBUG\nlog4j.logger.com.sun.jersey.spi.container.servlet.WebComponent = ERROR\nlog4j.logger.org.apache.hadoop = INFO\nlog4j.logger.org.apache.hadoop.conf = WARN\nlog4j.logger.org.apache.zookeeper = WARN\nlog4j.logger.org.eclipse.jetty = INFO"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-interactive-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n      if [ \"$SERVICE\" = \"cli\" ]; then\n      if [ -z \"$DEBUG\" ]; then\n      export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit\"\n      else\n      export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n      fi\n      fi\n\n      # The heap size of the jvm stared by hive shell script can be controlled via:\n\n      if [ \"$SERVICE\" = \"metastore\" ]; then\n      export HADOOP_HEAPSIZE={{hive_metastore_heapsize}} # Setting for HiveMetastore\n      else\n      export HADOOP_HEAPSIZE={{hive_heapsize}} # Setting for HiveServer2 and Client\n      fi\n\n      export HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m\"\n\n      # Larger heap size may be required when running queries over large number of files or partitions.\n      # By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n      # appropriate for hive server (hwi etc).\n\n\n      # Set HADOOP_HOME to point to a specific hadoop install directory\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n      # Hive Configuration Directory can be controlled by:\n      export HIVE_CONF_DIR={{hive_server_interactive_conf_dir}}\n\n      # Folder containing extra ibraries required for hive compilation/execution can be controlled by:\n      # if [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n      # export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\n      # elif [ -d \"/usr/lib/hive-hcatalog/\" ]; then\n      # export HIVE_AUX_JARS_PATH=/usr/lib/hive-hcatalog/share/hcatalog/hive-hcatalog-core-*.jar\n      # else\n      # export HIVE_AUX_JARS_PATH=/usr/lib/hcatalog/share/hcatalog/hcatalog-core.jar\n      # fi\n      export METASTORE_PORT={{hive_metastore_port}}\n\n      export HADOOP_CLASSPATH={{atlas_conf_dir}}:{{atlas_home_dir}}/hook/hive:${HADOOP_CLASSPATH}\n\n      # Spark assembly contains a conflicting copy of HiveConf from hive-1.2\n      export HIVE_SKIP_SPARK_ASSEMBLY=true",
            "enable_hive_interactive" : "false",
            "hive_server_interactive_host" : "localhost",
            "llap_app_name" : "llap0",
            "llap_heap_size" : "0",
            "llap_java_opts" : "-XX:+UseG1GC -XX:TLABSize=8m -XX:+ResizeTLAB -XX:+UseNUMA -XX:+AggressiveOpts -XX:+AlwaysPreTouch -XX:InitiatingHeapOccupancyPercent=80 -XX:MaxGCPauseMillis=200",
            "llap_log_level" : "INFO",
            "llap_queue_capacity" : "0",
            "num_llap_nodes" : "1",
            "num_retries_for_checking_llap_status" : "10",
            "slider_am_container_mb" : "341"
          },
          "properties_attributes" : {
            "minimum" : {
              "num_llap_nodes" : "1"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hiveserver2-interactive-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "hive.async.log.enabled" : "false",
            "hive.metastore.metrics.enabled" : "true",
            "hive.service.metrics.file.location" : "/var/log/hive/hiveserver2Interactive-report.json",
            "hive.service.metrics.hadoop2.component" : "hiveserver2",
            "hive.service.metrics.reporter" : "JSON_FILE, JMX, HADOOP2"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-log4j2",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = HiveLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = INFO\nproperty.hive.root.logger = DRFA\nproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\nproperty.hive.log.file = hive.log\n\n# list of all appenders\nappenders = console, DRFA\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\n\n# daily rolling file appender\nappender.DRFA.type = RollingFile\nappender.DRFA.name = DRFA\nappender.DRFA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}\n# Use %pid in the filePattern to append process-id@host-name to the filename if you want separate log files for different CLI session\nappender.DRFA.filePattern = ${sys:hive.log.dir}/${sys:hive.log.file}.%d{yyyy-MM-dd}\nappender.DRFA.layout.type = PatternLayout\nappender.DRFA.layout.pattern = %d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\nappender.DRFA.policies.type = Policies\nappender.DRFA.policies.time.type = TimeBasedTriggeringPolicy\nappender.DRFA.policies.time.interval = 1\nappender.DRFA.policies.time.modulate = true\nappender.DRFA.strategy.type = DefaultRolloverStrategy\nappender.DRFA.strategy.max = 30\n\n# list of all loggers\nloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX\n\nlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxn\nlogger.NIOServerCnxn.level = WARN\n\nlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIO\nlogger.ClientCnxnSocketNIO.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hive-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hive-server2/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-hive-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hive-server2/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-hive-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hcat-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n      # Licensed to the Apache Software Foundation (ASF) under one\n      # or more contributor license agreements. See the NOTICE file\n      # distributed with this work for additional information\n      # regarding copyright ownership. The ASF licenses this file\n      # to you under the Apache License, Version 2.0 (the\n      # \"License\"); you may not use this file except in compliance\n      # with the License. You may obtain a copy of the License at\n      #\n      # http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      JAVA_HOME={{java64_home}}\n      HCAT_PID_DIR={{hcat_pid_dir}}/\n      HCAT_LOG_DIR={{hcat_log_dir}}/\n      HCAT_CONF_DIR={{hcat_conf_dir}}\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n      #DBROOT is the path where the connector jars are downloaded\n      DBROOT={{hcat_dbroot}}\n      USER={{hcat_user}}\n      METASTORE_PORT={{hive_metastore_port}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ambari.hive.db.schema.name" : "hive",
            "atlas.cluster.name" : "Sandbox",
            "atlas.hook.hive.maxThreads" : "1",
            "atlas.hook.hive.minThreads" : "1",
            "atlas.rest.address" : "http://sandbox.hortonworks.com:21000",
            "datanucleus.autoCreateSchema" : "false",
            "datanucleus.cache.level2.type" : "none",
            "datanucleus.fixedDatastore" : "true",
            "hive.auto.convert.join" : "true",
            "hive.auto.convert.join.noconditionaltask" : "true",
            "hive.auto.convert.join.noconditionaltask.size" : "3149642683",
            "hive.auto.convert.sortmerge.join" : "true",
            "hive.auto.convert.sortmerge.join.to.mapjoin" : "false",
            "hive.cbo.enable" : "true",
            "hive.cli.print.header" : "false",
            "hive.cluster.delegation.token.store.class" : "org.apache.hadoop.hive.thrift.ZooKeeperTokenStore",
            "hive.cluster.delegation.token.store.zookeeper.connectString" : "sandbox.hortonworks.com:2181",
            "hive.cluster.delegation.token.store.zookeeper.znode" : "/hive/cluster/delegation",
            "hive.compactor.abortedtxn.threshold" : "1000",
            "hive.compactor.check.interval" : "300s",
            "hive.compactor.delta.num.threshold" : "10",
            "hive.compactor.delta.pct.threshold" : "0.1f",
            "hive.compactor.initiator.on" : "true",
            "hive.compactor.worker.threads" : "0",
            "hive.compactor.worker.timeout" : "86400s",
            "hive.compute.query.using.stats" : "true",
            "hive.conf.restricted.list" : "hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role",
            "hive.convert.join.bucket.mapjoin.tez" : "false",
            "hive.default.fileformat" : "TextFile",
            "hive.default.fileformat.managed" : "TextFile",
            "hive.enforce.bucketing" : "false",
            "hive.enforce.sorting" : "true",
            "hive.enforce.sortmergebucketmapjoin" : "true",
            "hive.exec.compress.intermediate" : "false",
            "hive.exec.compress.output" : "false",
            "hive.exec.dynamic.partition" : "true",
            "hive.exec.dynamic.partition.mode" : "strict",
            "hive.exec.failure.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
            "hive.exec.max.created.files" : "100000",
            "hive.exec.max.dynamic.partitions" : "5000",
            "hive.exec.max.dynamic.partitions.pernode" : "2000",
            "hive.exec.orc.compression.strategy" : "SPEED",
            "hive.exec.orc.default.compress" : "ZLIB",
            "hive.exec.orc.default.stripe.size" : "67108864",
            "hive.exec.orc.encoding.strategy" : "SPEED",
            "hive.exec.parallel" : "false",
            "hive.exec.parallel.thread.number" : "8",
            "hive.exec.post.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook,org.apache.atlas.hive.hook.HiveHook,org.apache.atlas.hive.hook.HiveHook",
            "hive.exec.pre.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
            "hive.exec.reducers.bytes.per.reducer" : "67108864",
            "hive.exec.reducers.max" : "1009",
            "hive.exec.scratchdir" : "/tmp/hive",
            "hive.exec.submit.local.task.via.child" : "true",
            "hive.exec.submitviachild" : "false",
            "hive.execution.engine" : "tez",
            "hive.fetch.task.aggr" : "false",
            "hive.fetch.task.conversion" : "more",
            "hive.fetch.task.conversion.threshold" : "1073741824",
            "hive.limit.optimize.enable" : "true",
            "hive.limit.pushdown.memory.usage" : "0.04",
            "hive.map.aggr" : "true",
            "hive.map.aggr.hash.force.flush.memory.threshold" : "0.9",
            "hive.map.aggr.hash.min.reduction" : "0.5",
            "hive.map.aggr.hash.percentmemory" : "0.5",
            "hive.mapjoin.bucket.cache.size" : "10000",
            "hive.mapjoin.optimized.hashtable" : "true",
            "hive.mapred.reduce.tasks.speculative.execution" : "false",
            "hive.merge.mapfiles" : "true",
            "hive.merge.mapredfiles" : "false",
            "hive.merge.orcfile.stripe.level" : "true",
            "hive.merge.rcfile.block.level" : "true",
            "hive.merge.size.per.task" : "256000000",
            "hive.merge.smallfiles.avgsize" : "16000000",
            "hive.merge.tezfiles" : "false",
            "hive.metastore.authorization.storage.checks" : "false",
            "hive.metastore.cache.pinobjtypes" : "Table,Database,Type,FieldSchema,Order",
            "hive.metastore.client.connect.retry.delay" : "5s",
            "hive.metastore.client.socket.timeout" : "1800s",
            "hive.metastore.connect.retries" : "24",
            "hive.metastore.execute.setugi" : "true",
            "hive.metastore.failure.retries" : "24",
            "hive.metastore.kerberos.keytab.file" : "/etc/security/keytabs/hive.service.keytab",
            "hive.metastore.kerberos.principal" : "hive/_HOST@EXAMPLE.COM",
            "hive.metastore.pre.event.listeners" : "org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener",
            "hive.metastore.sasl.enabled" : "false",
            "hive.metastore.schema.verification" : "false",
            "hive.metastore.schema.verification.record.version" : "false",
            "hive.metastore.server.max.threads" : "100000",
            "hive.metastore.uris" : "thrift://sandbox.hortonworks.com:9083",
            "hive.metastore.warehouse.dir" : "/apps/hive/warehouse",
            "hive.optimize.bucketmapjoin" : "true",
            "hive.optimize.bucketmapjoin.sortedmerge" : "false",
            "hive.optimize.constant.propagation" : "true",
            "hive.optimize.index.filter" : "true",
            "hive.optimize.metadataonly" : "true",
            "hive.optimize.null.scan" : "true",
            "hive.optimize.reducededuplication" : "true",
            "hive.optimize.reducededuplication.min.reducer" : "4",
            "hive.optimize.sort.dynamic.partition" : "false",
            "hive.orc.compute.splits.num.threads" : "10",
            "hive.orc.splits.include.file.footer" : "false",
            "hive.prewarm.enabled" : "false",
            "hive.prewarm.numcontainers" : "3",
            "hive.security.authenticator.manager" : "org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator",
            "hive.security.authorization.enabled" : "true",
            "hive.security.authorization.manager" : "org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory",
            "hive.security.metastore.authenticator.manager" : "org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator",
            "hive.security.metastore.authorization.auth.reads" : "true",
            "hive.security.metastore.authorization.manager" : "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider",
            "hive.server2.allow.user.substitution" : "true",
            "hive.server2.authentication" : "NONE",
            "hive.server2.authentication.spnego.keytab" : "HTTP/_HOST@EXAMPLE.COM",
            "hive.server2.authentication.spnego.principal" : "/etc/security/keytabs/spnego.service.keytab",
            "hive.server2.enable.doAs" : "false",
            "hive.server2.logging.operation.enabled" : "true",
            "hive.server2.logging.operation.log.location" : "/tmp/hive/operation_logs",
            "hive.server2.max.start.attempts" : "5",
            "hive.server2.support.dynamic.service.discovery" : "true",
            "hive.server2.table.type.mapping" : "CLASSIC",
            "hive.server2.tez.default.queues" : "default",
            "hive.server2.tez.initialize.default.sessions" : "false",
            "hive.server2.tez.sessions.per.default.queue" : "1",
            "hive.server2.thrift.http.path" : "cliservice",
            "hive.server2.thrift.http.port" : "10001",
            "hive.server2.thrift.max.worker.threads" : "500",
            "hive.server2.thrift.port" : "10000",
            "hive.server2.thrift.sasl.qop" : "auth",
            "hive.server2.transport.mode" : "binary",
            "hive.server2.use.SSL" : "false",
            "hive.server2.zookeeper.namespace" : "hiveserver2",
            "hive.smbjoin.cache.rows" : "10000",
            "hive.stats.autogather" : "true",
            "hive.stats.dbclass" : "fs",
            "hive.stats.fetch.column.stats" : "true",
            "hive.stats.fetch.partition.stats" : "true",
            "hive.support.concurrency" : "true",
            "hive.tez.auto.reducer.parallelism" : "true",
            "hive.tez.container.size" : "250",
            "hive.tez.cpu.vcores" : "-1",
            "hive.tez.dynamic.partition.pruning" : "true",
            "hive.tez.dynamic.partition.pruning.max.data.size" : "104857600",
            "hive.tez.dynamic.partition.pruning.max.event.size" : "1048576",
            "hive.tez.input.format" : "org.apache.hadoop.hive.ql.io.HiveInputFormat",
            "hive.tez.java.opts" : "-server -Xmx200m -Djava.net.preferIPv4Stack=true",
            "hive.tez.log.level" : "INFO",
            "hive.tez.max.partition.factor" : "2.0",
            "hive.tez.min.partition.factor" : "0.25",
            "hive.tez.smb.number.waves" : "0.5",
            "hive.txn.manager" : "org.apache.hadoop.hive.ql.lockmgr.DbTxnManager",
            "hive.txn.max.open.batch" : "1000",
            "hive.txn.timeout" : "300",
            "hive.user.install.directory" : "/user/",
            "hive.users.in.admin.role" : "hue,hive",
            "hive.vectorized.execution.enabled" : "true",
            "hive.vectorized.execution.reduce.enabled" : "false",
            "hive.vectorized.groupby.checkinterval" : "4096",
            "hive.vectorized.groupby.flush.percent" : "0.1",
            "hive.vectorized.groupby.maxentries" : "100000",
            "hive.zookeeper.client.port" : "2181",
            "hive.zookeeper.namespace" : "hive_zookeeper_namespace",
            "hive.zookeeper.quorum" : "sandbox.hortonworks.com:2181",
            "hive_metastore_user_passwd" : "hive",
            "javax.jdo.option.ConnectionDriverName" : "com.mysql.jdbc.Driver",
            "javax.jdo.option.ConnectionPassword" : "SECRET:hive-site:2:javax.jdo.option.ConnectionPassword",
            "javax.jdo.option.ConnectionURL" : "jdbc:mysql://sandbox.hortonworks.com/hive?createDatabaseIfNotExist=true",
            "javax.jdo.option.ConnectionUserName" : "root"
          },
          "properties_attributes" : {
            "hidden" : {
              "javax.jdo.option.ConnectionPassword" : "HIVE_CLIENT,WEBHCAT_SERVER,HCAT,CONFIG_DOWNLOAD"
            },
            "javax.jdo.option.ConnectionPassword" : {
              "hidden" : "HIVE_CLIENT,WEBHCAT_SERVER,HCAT,CONFIG_DOWNLOAD"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hive-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-hive-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "hive",
            "common.name.for.certificate" : "",
            "jdbc.driverClassName" : "org.apache.hive.jdbc.HiveDriver",
            "policy_user" : "ambari-qa"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "webhcat-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "templeton.exec.timeout" : "60000",
            "templeton.hadoop" : "/usr/hdp/${hdp.version}/hadoop/bin/hadoop",
            "templeton.hadoop.conf.dir" : "/etc/hadoop/conf",
            "templeton.hadoop.queue.name" : "default",
            "templeton.hcat" : "/usr/hdp/${hdp.version}/hive/bin/hcat",
            "templeton.hcat.home" : "hive.tar.gz/hive/hcatalog",
            "templeton.hive.archive" : "hdfs:///hdp/apps/${hdp.version}/hive/hive.tar.gz",
            "templeton.hive.extra.files" : "/usr/hdp/${hdp.version}/tez/conf/tez-site.xml,/usr/hdp/${hdp.version}/tez,/usr/hdp/${hdp.version}/tez/lib",
            "templeton.hive.home" : "hive.tar.gz/hive",
            "templeton.hive.path" : "hive.tar.gz/hive/bin/hive",
            "templeton.hive.properties" : "hive.metastore.local=false,hive.metastore.uris=thrift://sandbox.hortonworks.com:9083,hive.metastore.sasl.enabled=false,hive.metastore.execute.setugi=true,hive.metastore.warehouse.dir=/apps/hive/warehouse",
            "templeton.jar" : "/usr/hdp/${hdp.version}/hive/share/webhcat/svr/lib/hive-webhcat-*.jar",
            "templeton.libjars" : "/usr/hdp/${hdp.version}/zookeeper/zookeeper.jar,/usr/hdp/${hdp.version}/hive/lib/hive-common.jar",
            "templeton.override.enabled" : "false",
            "templeton.pig.archive" : "hdfs:///hdp/apps/${hdp.version}/pig/pig.tar.gz",
            "templeton.pig.path" : "pig.tar.gz/pig/bin/pig",
            "templeton.port" : "50111",
            "templeton.python" : "${env.PYTHON_CMD}",
            "templeton.sqoop.archive" : "hdfs:///hdp/apps/${hdp.version}/sqoop/sqoop.tar.gz",
            "templeton.sqoop.home" : "sqoop.tar.gz/sqoop",
            "templeton.sqoop.path" : "sqoop.tar.gz/sqoop/bin/sqoop",
            "templeton.storage.class" : "org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage",
            "templeton.streaming.jar" : "hdfs:///hdp/apps/${hdp.version}/mapreduce/hadoop-streaming.jar",
            "templeton.zookeeper.hosts" : "sandbox.hortonworks.com:2181",
            "webhcat.proxyuser.hcat.groups" : "*",
            "webhcat.proxyuser.hcat.hosts" : "*",
            "webhcat.proxyuser.hue.groups" : "*",
            "webhcat.proxyuser.hue.hosts" : "*",
            "webhcat.proxyuser.root.groups" : "*",
            "webhcat.proxyuser.root.hosts" : "sandbox.hortonworks.com"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "tez-interactive-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "tez.am.resource.memory.mb" : "1536",
            "tez.dag.recovery.enabled" : "false",
            "tez.grouping.node.local.only" : "true",
            "tez.lib.uris" : "/hdp/apps/${hdp.version}/tez_hive2/tez.tar.gz",
            "tez.runtime.pipelined-shuffle.enabled" : "false",
            "tez.runtime.pipelined.sorter.lazy-allocate.memory" : "true",
            "tez.runtime.report.partition.stats" : "true",
            "tez.runtime.shuffle.fetch.buffer.percent" : "0.6",
            "tez.runtime.shuffle.fetch.verify-disk-checksum" : "false",
            "tez.runtime.shuffle.memory.limit.percent" : "0.25",
            "tez.session.am.dag.submit.timeout.secs" : "3600"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-exec-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\n\nhive.log.threshold=ALL\nhive.root.logger=INFO,FA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.query.id=hadoop\nhive.log.file=${hive.query.id}.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=${hive.log.threshold}\n\n#\n# File Appender\n#\n\nlog4j.appender.FA=org.apache.log4j.FileAppender\nlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}\nlog4j.appender.FA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,FA\nlog4j.category.Datastore=ERROR,FA\nlog4j.category.Datastore.Schema=ERROR,FA\nlog4j.category.JPOX.Datastore=ERROR,FA\nlog4j.category.JPOX.Plugin=ERROR,FA\nlog4j.category.JPOX.MetaData=ERROR,FA\nlog4j.category.JPOX.Query=ERROR,FA\nlog4j.category.JPOX.General=ERROR,FA\nlog4j.category.JPOX.Enhancer=ERROR,FA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hivemetastore-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "hive.metastore.metrics.enabled" : "true",
            "hive.service.metrics.file.location" : "/var/log/hive/hivemetastore-report.json",
            "hive.service.metrics.hadoop2.component" : "hivemetastore",
            "hive.service.metrics.reporter" : "JSON_FILE, JMX, HADOOP2"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "webhcat-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# The file containing the running pid\nPID_FILE={{webhcat_pid_file}}\n\nTEMPLETON_LOG_DIR={{templeton_log_dir}}/\n\n\nWEBHCAT_LOG_DIR={{templeton_log_dir}}/\n\n# The console error log\nERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log\n\n# The console log\nCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log\n\n#TEMPLETON_JAR=templeton_jar_name\n\n#HADOOP_PREFIX=hadoop_prefix\n\n#HCAT_PREFIX=hive_prefix\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-exec-log4j2",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = HiveExecLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = INFO\nproperty.hive.root.logger = FA\nproperty.hive.query.id = hadoop\nproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\nproperty.hive.log.file = ${sys:hive.query.id}.log\n\n# list of all appenders\nappenders = console, FA\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\n\n# simple file appender\nappender.FA.type = File\nappender.FA.name = FA\nappender.FA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}\nappender.FA.layout.type = PatternLayout\nappender.FA.layout.pattern = %d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\n\n# list of all loggers\nloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX\n\nlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxn\nlogger.NIOServerCnxn.level = WARN\n\nlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIO\nlogger.ClientCnxnSocketNIO.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hiveserver2-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "hive.conf.restricted.list" : "hive.security.authorization.enabled,hive.security.authorization.manager,hive.security.authenticator.manager",
            "hive.metastore.metrics.enabled" : "true",
            "hive.security.authenticator.manager" : "org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator",
            "hive.security.authorization.enabled" : "true",
            "hive.security.authorization.manager" : "org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory",
            "hive.service.metrics.file.location" : "/var/log/hive/hiveserver2-report.json",
            "hive.service.metrics.hadoop2.component" : "hiveserver2",
            "hive.service.metrics.reporter" : "JSON_FILE, JMX, HADOOP2"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\nhive.log.threshold=ALL\nhive.root.logger=INFO,DRFA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.log.file=hive.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshold=${hive.log.threshold}\n\n#\n# Daily Rolling File Appender\n#\n# Use the PidDailyerRollingFileAppend class instead if you want to use separate log files\n# for different CLI session.\n#\n# log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppender\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\n\nlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\nlog4j.appender.console.encoding=UTF-8\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,DRFA\nlog4j.category.Datastore=ERROR,DRFA\nlog4j.category.Datastore.Schema=ERROR,DRFA\nlog4j.category.JPOX.Datastore=ERROR,DRFA\nlog4j.category.JPOX.Plugin=ERROR,DRFA\nlog4j.category.JPOX.MetaData=ERROR,DRFA\nlog4j.category.JPOX.Query=ERROR,DRFA\nlog4j.category.JPOX.General=ERROR,DRFA\nlog4j.category.JPOX.Enhancer=ERROR,DRFA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-atlas-application.properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "atlas.hook.hive.keepAliveTime" : "10",
            "atlas.hook.hive.maxThreads" : "5",
            "atlas.hook.hive.minThreads" : "5",
            "atlas.hook.hive.numRetries" : "3",
            "atlas.hook.hive.queueSize" : "1000",
            "atlas.hook.hive.synchronous" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "beeline-log4j2",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = BeelineLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = WARN\nproperty.hive.root.logger = console\n\n# list of all appenders\nappenders = console\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\n\n# list of all loggers\nloggers = HiveConnection\n\n# HiveConnection logs useful info for dynamic service discovery\nlogger.HiveConnection.name = org.apache.hive.jdbc.HiveConnection\nlogger.HiveConnection.level = INFO\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n      export HADOOP_USER_CLASSPATH_FIRST=true  #this prevents old metrics libs from mapreduce lib from bringing in old jar deps overriding HIVE_LIB\n      if [ \"$SERVICE\" = \"cli\" ]; then\n      if [ -z \"$DEBUG\" ]; then\n      export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseNUMA -XX:+UseParallelGC -XX:-UseGCOverheadLimit\"\n      else\n      export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n      fi\n      fi\n\n      # The heap size of the jvm stared by hive shell script can be controlled via:\n\n      if [ \"$SERVICE\" = \"metastore\" ]; then\n      export HADOOP_HEAPSIZE={{hive_metastore_heapsize}} # Setting for HiveMetastore\n      else\n      export HADOOP_HEAPSIZE={{hive_heapsize}} # Setting for HiveServer2 and Client\n      fi\n\n      export HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m\"\n\n      # Larger heap size may be required when running queries over large number of files or partitions.\n      # By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n      # appropriate for hive server (hwi etc).\n\n\n      # Set HADOOP_HOME to point to a specific hadoop install directory\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n      # Hive Configuration Directory can be controlled by:\n      export HIVE_CONF_DIR={{hive_config_dir}}\n\n      # Folder containing extra libraries required for hive compilation/execution can be controlled by:\n      if [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n      if [ -f \"${HIVE_AUX_JARS_PATH}\" ]; then\n      export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\n      elif [ -d \"/usr/hdp/current/hive-webhcat/share/hcatalog\" ]; then\n      export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar\n      fi\n      elif [ -d \"/usr/hdp/current/hive-webhcat/share/hcatalog\" ]; then\n      export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar\n      fi\n\n      export METASTORE_PORT={{hive_metastore_port}}\n\n      export HADOOP_CLASSPATH={{atlas_conf_dir}}:{{atlas_home_dir}}/hook/hive:${HADOOP_CLASSPATH}\n\n      {% if sqla_db_used or lib_dir_available %}\n      export LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:{{jdbc_libs_dir}}\"\n      export JAVA_LIBRARY_PATH=\"$JAVA_LIBRARY_PATH:{{jdbc_libs_dir}}\"\n      {% endif %}",
            "hcat_log_dir" : "/var/log/webhcat",
            "hcat_pid_dir" : "/var/run/webhcat",
            "hcat_user" : "hcat",
            "hive.client.heapsize" : "1024",
            "hive.heapsize" : "96628",
            "hive.metastore.heapsize" : "32209",
            "hive_ambari_database" : "MySQL",
            "hive_database" : "New MySQL Database",
            "hive_database_name" : "hive",
            "hive_database_type" : "mysql",
            "hive_exec_orc_storage_strategy" : "SPEED",
            "hive_log_dir" : "/var/log/hive",
            "hive_pid_dir" : "/var/run/hive",
            "hive_security_authorization" : "Ranger",
            "hive_timeline_logging_enabled" : "true",
            "hive_txn_acid" : "off",
            "hive_user" : "hive",
            "hive_user_nofile_limit" : "32000",
            "hive_user_nproc_limit" : "16000",
            "webhcat_user" : "hcat"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "hive-interactive-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "hive.driver.parallel.compilation" : "true",
            "hive.exec.orc.split.strategy" : "HYBRID",
            "hive.execution.engine" : "tez",
            "hive.execution.mode" : "llap",
            "hive.llap.auto.allow.uber" : "false",
            "hive.llap.client.consistent.splits" : "true",
            "hive.llap.daemon.allow.permanent.fns" : "false",
            "hive.llap.daemon.memory.per.instance.mb" : "250",
            "hive.llap.daemon.num.executors" : "1",
            "hive.llap.daemon.queue.name" : "default",
            "hive.llap.daemon.rpc.port" : "15001",
            "hive.llap.daemon.service.hosts" : "@llap0",
            "hive.llap.daemon.task.scheduler.enable.preemption" : "true",
            "hive.llap.daemon.vcpus.per.instance" : "${hive.llap.daemon.num.executors}",
            "hive.llap.daemon.work.dirs" : "${yarn.nodemanager.local-dirs}",
            "hive.llap.daemon.yarn.container.mb" : "341",
            "hive.llap.daemon.yarn.shuffle.port" : "15551",
            "hive.llap.execution.mode" : "all",
            "hive.llap.io.enabled" : "true",
            "hive.llap.io.memory.mode" : "cache",
            "hive.llap.io.memory.size" : "0",
            "hive.llap.io.threadpool.size" : "2",
            "hive.llap.io.use.lrfu" : "true",
            "hive.llap.management.rpc.port" : "15004",
            "hive.llap.object.cache.enabled" : "true",
            "hive.llap.task.scheduler.locality.delay" : "-1",
            "hive.llap.zk.sm.connectionString" : "sandbox.hortonworks.com:2181",
            "hive.mapjoin.hybridgrace.hashtable" : "false",
            "hive.metastore.event.listeners" : "",
            "hive.metastore.uris" : "",
            "hive.optimize.dynamic.partition.hashjoin" : "true",
            "hive.prewarm.enabled" : "false",
            "hive.server2.enable.doAs" : "false",
            "hive.server2.tez.default.queues" : "default",
            "hive.server2.tez.initialize.default.sessions" : "true",
            "hive.server2.tez.sessions.per.default.queue" : "1",
            "hive.server2.thrift.http.port" : "10501",
            "hive.server2.thrift.port" : "10500",
            "hive.server2.webui.port" : "10502",
            "hive.server2.webui.use.ssl" : "false",
            "hive.server2.zookeeper.namespace" : "hiveserver2-hive2",
            "hive.tez.bucket.pruning" : "true",
            "hive.tez.exec.print.summary" : "true",
            "hive.tez.input.generate.consistent.splits" : "true",
            "hive.vectorized.execution.mapjoin.minmax.enabled" : "true",
            "hive.vectorized.execution.mapjoin.native.enabled" : "true",
            "hive.vectorized.execution.mapjoin.native.fast.hashtable.enabled" : "true",
            "hive.vectorized.execution.reduce.enabled" : "true",
            "llap.shuffle.connection-keep-alive.enable" : "true",
            "llap.shuffle.connection-keep-alive.timeout" : "60"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hive-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hive/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hive/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-hive-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.hive.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.hive.policy.pollIntervalMs" : "30000",
            "ranger.plugin.hive.policy.rest.ssl.config.file" : "/usr/hdp/current/hive-server2/conf/conf.server/ranger-policymgr-ssl.xml",
            "ranger.plugin.hive.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.hive.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.hive.service.name" : "{{repo_name}}",
            "xasecure.hive.update.xapolicies.on.grant.revoke" : "true"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380380158,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "HIVE",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=KAFKA&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-kafka-audit",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/kafka/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_1%:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/kafka/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/ambari-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "kafka-broker",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "auto.create.topics.enable" : "true",
            "auto.leader.rebalance.enable" : "true",
            "compression.type" : "producer",
            "controlled.shutdown.enable" : "true",
            "controlled.shutdown.max.retries" : "3",
            "controlled.shutdown.retry.backoff.ms" : "5000",
            "controller.message.queue.size" : "10",
            "controller.socket.timeout.ms" : "30000",
            "default.replication.factor" : "1",
            "delete.topic.enable" : "false",
            "external.kafka.metrics.exclude.prefix" : "kafka.network.RequestMetrics,kafka.server.DelayedOperationPurgatory,kafka.server.BrokerTopicMetrics.BytesRejectedPerSec",
            "external.kafka.metrics.include.prefix" : "kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetCommit.98percentile,kafka.network.RequestMetrics.ResponseQueueTimeMs.request.Offsets.95percentile,kafka.network.RequestMetrics.ResponseSendTimeMs.request.Fetch.95percentile,kafka.network.RequestMetrics.RequestsPerSec.request",
            "fetch.purgatory.purge.interval.requests" : "10000",
            "kafka.ganglia.metrics.group" : "kafka",
            "kafka.ganglia.metrics.host" : "localhost",
            "kafka.ganglia.metrics.port" : "8671",
            "kafka.ganglia.metrics.reporter.enabled" : "true",
            "kafka.metrics.reporters" : "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter",
            "kafka.timeline.metrics.host" : "{{metric_collector_host}}",
            "kafka.timeline.metrics.maxRowCacheSize" : "10000",
            "kafka.timeline.metrics.port" : "{{metric_collector_port}}",
            "kafka.timeline.metrics.protocol" : "{{metric_collector_protocol}}",
            "kafka.timeline.metrics.reporter.enabled" : "true",
            "kafka.timeline.metrics.reporter.sendInterval" : "5900",
            "kafka.timeline.metrics.truststore.password" : "{{metric_truststore_password}}",
            "kafka.timeline.metrics.truststore.path" : "{{metric_truststore_path}}",
            "kafka.timeline.metrics.truststore.type" : "{{metric_truststore_type}}",
            "leader.imbalance.check.interval.seconds" : "300",
            "leader.imbalance.per.broker.percentage" : "10",
            "listeners" : "PLAINTEXT://localhost:6667",
            "log.cleanup.interval.mins" : "10",
            "log.dirs" : "/kafka-logs",
            "log.index.interval.bytes" : "4096",
            "log.index.size.max.bytes" : "10485760",
            "log.retention.bytes" : "-1",
            "log.retention.hours" : "168",
            "log.roll.hours" : "168",
            "log.segment.bytes" : "1073741824",
            "message.max.bytes" : "1000000",
            "min.insync.replicas" : "1",
            "num.io.threads" : "8",
            "num.network.threads" : "3",
            "num.partitions" : "1",
            "num.recovery.threads.per.data.dir" : "1",
            "num.replica.fetchers" : "1",
            "offset.metadata.max.bytes" : "4096",
            "offsets.commit.required.acks" : "-1",
            "offsets.commit.timeout.ms" : "5000",
            "offsets.load.buffer.size" : "5242880",
            "offsets.retention.check.interval.ms" : "600000",
            "offsets.retention.minutes" : "86400000",
            "offsets.topic.compression.codec" : "0",
            "offsets.topic.num.partitions" : "50",
            "offsets.topic.replication.factor" : "3",
            "offsets.topic.segment.bytes" : "104857600",
            "port" : "6667",
            "producer.purgatory.purge.interval.requests" : "10000",
            "queued.max.requests" : "500",
            "replica.fetch.max.bytes" : "1048576",
            "replica.fetch.min.bytes" : "1",
            "replica.fetch.wait.max.ms" : "500",
            "replica.high.watermark.checkpoint.interval.ms" : "5000",
            "replica.lag.max.messages" : "4000",
            "replica.lag.time.max.ms" : "10000",
            "replica.socket.receive.buffer.bytes" : "65536",
            "replica.socket.timeout.ms" : "30000",
            "socket.receive.buffer.bytes" : "102400",
            "socket.request.max.bytes" : "104857600",
            "socket.send.buffer.bytes" : "102400",
            "zookeeper.connect" : "%HOSTGROUP::host_group_1%:2181",
            "zookeeper.connection.timeout.ms" : "25000",
            "zookeeper.session.timeout.ms" : "30000",
            "zookeeper.sync.time.ms" : "2000"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-kafka-security",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.plugin.kafka.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.kafka.policy.pollIntervalMs" : "30000",
            "ranger.plugin.kafka.policy.rest.ssl.config.file" : "/etc/kafka/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.kafka.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.kafka.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.kafka.service.name" : "{{repo_name}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "kafka-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\nkafka.logs.dir=logs\n\nlog4j.rootLogger=INFO, stdout\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log\nlog4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.stateChangeAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.stateChangeAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log\nlog4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.requestAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.requestAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log\nlog4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.cleanerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.cleanerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log\nlog4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.controllerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.controllerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log\nlog4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\n# Turn on all our debugging info\n#log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG, kafkaAppender\n#log4j.logger.kafka.client.ClientUtils=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf.ProducerPerformance$ProducerThread=DEBUG, kafkaAppender\n#log4j.logger.org.I0Itec.zkclient.ZkClient=DEBUG\nlog4j.logger.kafka=INFO, kafkaAppender\nlog4j.logger.kafka.network.RequestChannel$=WARN, requestAppender\nlog4j.additivity.kafka.network.RequestChannel$=false\n\n#log4j.logger.kafka.network.Processor=TRACE, requestAppender\n#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender\n#log4j.additivity.kafka.server.KafkaApis=false\nlog4j.logger.kafka.request.logger=WARN, requestAppender\nlog4j.additivity.kafka.request.logger=false\n\nlog4j.logger.kafka.controller=TRACE, controllerAppender\nlog4j.additivity.kafka.controller=false\n\nlog4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender\nlog4j.additivity.kafka.log.LogCleaner=false\n\nlog4j.logger.state.change.logger=TRACE, stateChangeAppender\nlog4j.additivity.state.change.logger=false\n\n   \nlog4j.appender.rangerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.rangerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.rangerAppender.File=${kafka.logs.dir}/ranger_kafka.log\nlog4j.appender.rangerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.rangerAppender.layout.ConversionPattern=%d{ISO8601} %p [%t] %C{6} (%F:%L) - %m%n\nlog4j.logger.org.apache.ranger=INFO, rangerAppender"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-kafka-policymgr-ssl",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/kafka-broker/config/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file/{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-kafka-policymgr-ssl:1:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/kafka-broker/config/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file/{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-kafka-policymgr-ssl:1:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-kafka-plugin-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-kafka-plugin-properties:1:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "kafka",
            "common.name.for.certificate" : "",
            "hadoop.rpc.protection" : "",
            "policy_user" : "ambari-qa",
            "ranger-kafka-plugin-enabled" : "No",
            "zookeeper.connect" : "localhost:2181"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "kafka-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#!/bin/bash\n\n# Set KAFKA specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\nexport PATH=$PATH:$JAVA_HOME/bin\nexport PID_DIR={{kafka_pid_dir}}\nexport LOG_DIR={{kafka_log_dir}}\nexport KAFKA_KERBEROS_PARAMS={{kafka_kerberos_params}}\n# Add kafka sink to classpath and related depenencies\nif [ -e \"/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\" ]; then\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/lib/*\nfi\nif [ -f /etc/kafka/conf/kafka-ranger-env.sh ]; then\n. /etc/kafka/conf/kafka-ranger-env.sh\nfi",
            "is_supported_kafka_ranger" : "true",
            "kafka_log_dir" : "/var/log/kafka",
            "kafka_pid_dir" : "/var/run/kafka",
            "kafka_user" : "kafka",
            "kafka_user_nofile_limit" : "128000",
            "kafka_user_nproc_limit" : "65536"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380375245,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "KAFKA",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=KAFKA&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-kafka-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/kafka/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/kafka/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/ambari-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "kafka-broker",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "auto.create.topics.enable" : "true",
            "auto.leader.rebalance.enable" : "true",
            "compression.type" : "producer",
            "controlled.shutdown.enable" : "true",
            "controlled.shutdown.max.retries" : "3",
            "controlled.shutdown.retry.backoff.ms" : "5000",
            "controller.message.queue.size" : "10",
            "controller.socket.timeout.ms" : "30000",
            "default.replication.factor" : "1",
            "delete.topic.enable" : "false",
            "external.kafka.metrics.exclude.prefix" : "kafka.network.RequestMetrics,kafka.server.DelayedOperationPurgatory,kafka.server.BrokerTopicMetrics.BytesRejectedPerSec",
            "external.kafka.metrics.include.prefix" : "kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetCommit.98percentile,kafka.network.RequestMetrics.ResponseQueueTimeMs.request.Offsets.95percentile,kafka.network.RequestMetrics.ResponseSendTimeMs.request.Fetch.95percentile,kafka.network.RequestMetrics.RequestsPerSec.request",
            "fetch.purgatory.purge.interval.requests" : "10000",
            "kafka.ganglia.metrics.group" : "kafka",
            "kafka.ganglia.metrics.host" : "localhost",
            "kafka.ganglia.metrics.port" : "8671",
            "kafka.ganglia.metrics.reporter.enabled" : "true",
            "kafka.metrics.reporters" : "org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter",
            "kafka.timeline.metrics.host" : "{{metric_collector_host}}",
            "kafka.timeline.metrics.maxRowCacheSize" : "10000",
            "kafka.timeline.metrics.port" : "{{metric_collector_port}}",
            "kafka.timeline.metrics.protocol" : "{{metric_collector_protocol}}",
            "kafka.timeline.metrics.reporter.enabled" : "true",
            "kafka.timeline.metrics.reporter.sendInterval" : "5900",
            "kafka.timeline.metrics.truststore.password" : "{{metric_truststore_password}}",
            "kafka.timeline.metrics.truststore.path" : "{{metric_truststore_path}}",
            "kafka.timeline.metrics.truststore.type" : "{{metric_truststore_type}}",
            "leader.imbalance.check.interval.seconds" : "300",
            "leader.imbalance.per.broker.percentage" : "10",
            "listeners" : "PLAINTEXT://localhost:6667",
            "log.cleanup.interval.mins" : "10",
            "log.dirs" : "/kafka-logs",
            "log.index.interval.bytes" : "4096",
            "log.index.size.max.bytes" : "10485760",
            "log.retention.bytes" : "-1",
            "log.retention.hours" : "168",
            "log.roll.hours" : "168",
            "log.segment.bytes" : "1073741824",
            "message.max.bytes" : "1000000",
            "min.insync.replicas" : "1",
            "num.io.threads" : "8",
            "num.network.threads" : "3",
            "num.partitions" : "1",
            "num.recovery.threads.per.data.dir" : "1",
            "num.replica.fetchers" : "1",
            "offset.metadata.max.bytes" : "4096",
            "offsets.commit.required.acks" : "-1",
            "offsets.commit.timeout.ms" : "5000",
            "offsets.load.buffer.size" : "5242880",
            "offsets.retention.check.interval.ms" : "600000",
            "offsets.retention.minutes" : "86400000",
            "offsets.topic.compression.codec" : "0",
            "offsets.topic.num.partitions" : "50",
            "offsets.topic.replication.factor" : "3",
            "offsets.topic.segment.bytes" : "104857600",
            "port" : "6667",
            "producer.purgatory.purge.interval.requests" : "10000",
            "queued.max.requests" : "500",
            "replica.fetch.max.bytes" : "1048576",
            "replica.fetch.min.bytes" : "1",
            "replica.fetch.wait.max.ms" : "500",
            "replica.high.watermark.checkpoint.interval.ms" : "5000",
            "replica.lag.max.messages" : "4000",
            "replica.lag.time.max.ms" : "10000",
            "replica.socket.receive.buffer.bytes" : "65536",
            "replica.socket.timeout.ms" : "30000",
            "socket.receive.buffer.bytes" : "102400",
            "socket.request.max.bytes" : "104857600",
            "socket.send.buffer.bytes" : "102400",
            "zookeeper.connect" : "sandbox.hortonworks.com:2181",
            "zookeeper.connection.timeout.ms" : "25000",
            "zookeeper.session.timeout.ms" : "30000",
            "zookeeper.sync.time.ms" : "2000"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-kafka-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.kafka.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.kafka.policy.pollIntervalMs" : "30000",
            "ranger.plugin.kafka.policy.rest.ssl.config.file" : "/etc/kafka/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.kafka.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.kafka.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.kafka.service.name" : "{{repo_name}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "kafka-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\nkafka.logs.dir=logs\n\nlog4j.rootLogger=INFO, stdout\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log\nlog4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.stateChangeAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.stateChangeAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log\nlog4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.requestAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.requestAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log\nlog4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.cleanerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.cleanerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log\nlog4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.controllerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.controllerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log\nlog4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\n# Turn on all our debugging info\n#log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG, kafkaAppender\n#log4j.logger.kafka.client.ClientUtils=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf.ProducerPerformance$ProducerThread=DEBUG, kafkaAppender\n#log4j.logger.org.I0Itec.zkclient.ZkClient=DEBUG\nlog4j.logger.kafka=INFO, kafkaAppender\nlog4j.logger.kafka.network.RequestChannel$=WARN, requestAppender\nlog4j.additivity.kafka.network.RequestChannel$=false\n\n#log4j.logger.kafka.network.Processor=TRACE, requestAppender\n#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender\n#log4j.additivity.kafka.server.KafkaApis=false\nlog4j.logger.kafka.request.logger=WARN, requestAppender\nlog4j.additivity.kafka.request.logger=false\n\nlog4j.logger.kafka.controller=TRACE, controllerAppender\nlog4j.additivity.kafka.controller=false\n\nlog4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender\nlog4j.additivity.kafka.log.LogCleaner=false\n\nlog4j.logger.state.change.logger=TRACE, stateChangeAppender\nlog4j.additivity.state.change.logger=false\n\n   \nlog4j.appender.rangerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.rangerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.rangerAppender.File=${kafka.logs.dir}/ranger_kafka.log\nlog4j.appender.rangerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.rangerAppender.layout.ConversionPattern=%d{ISO8601} %p [%t] %C{6} (%F:%L) - %m%n\nlog4j.logger.org.apache.ranger=INFO, rangerAppender"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-kafka-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/kafka-broker/config/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file/{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-kafka-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/kafka-broker/config/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file/{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-kafka-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-kafka-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-kafka-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "kafka",
            "common.name.for.certificate" : "",
            "hadoop.rpc.protection" : "",
            "policy_user" : "ambari-qa",
            "ranger-kafka-plugin-enabled" : "No",
            "zookeeper.connect" : "localhost:2181"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "kafka-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#!/bin/bash\n\n# Set KAFKA specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\nexport PATH=$PATH:$JAVA_HOME/bin\nexport PID_DIR={{kafka_pid_dir}}\nexport LOG_DIR={{kafka_log_dir}}\nexport KAFKA_KERBEROS_PARAMS={{kafka_kerberos_params}}\n# Add kafka sink to classpath and related depenencies\nif [ -e \"/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\" ]; then\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/lib/*\nfi\nif [ -f /etc/kafka/conf/kafka-ranger-env.sh ]; then\n. /etc/kafka/conf/kafka-ranger-env.sh\nfi",
            "is_supported_kafka_ranger" : "true",
            "kafka_log_dir" : "/var/log/kafka",
            "kafka_pid_dir" : "/var/run/kafka",
            "kafka_user" : "kafka",
            "kafka_user_nofile_limit" : "128000",
            "kafka_user_nproc_limit" : "65536"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380380593,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "KAFKA",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=KNOX&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "knoxsso-topology",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n      <topology>\n          <gateway>\n              <provider>\n                  <role>webappsec</role>\n                  <name>WebAppSec</name>\n                  <enabled>true</enabled>\n                  <param><name>xframe.options.enabled</name><value>true</value></param>\n              </provider>\n\n              <provider>\n                  <role>authentication</role>\n                  <name>ShiroProvider</name>\n                  <enabled>true</enabled>\n                  <param>\n                      <name>sessionTimeout</name>\n                      <value>30</value>\n                  </param>\n                  <param>\n                      <name>redirectToUrl</name>\n                      <value>/gateway/knoxsso/knoxauth/login.html</value>\n                  </param>\n                  <param>\n                      <name>restrictedCookies</name>\n                      <value>rememberme,WWW-Authenticate</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm</name>\n                      <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\n                  </param>\n                  <param>\n                      <name>main.ldapContextFactory</name>\n                      <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapContextFactory</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm.contextFactory</name>\n                      <value>$ldapContextFactory</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm.userDnTemplate</name>\n                      <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm.contextFactory.url</name>\n                      <value>ldap://localhost:33389</value>\n                  </param>    \n                  <param>\n                      <name>main.ldapRealm.authenticationCachingEnabled</name>\n                      <value>false</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\n                      <value>simple</value>\n                  </param>\n                  <param>\n                      <name>urls./**</name>\n                      <value>authcBasic</value>\n                  </param>\n              </provider>\n\n              <provider>\n                  <role>identity-assertion</role>\n                  <name>Default</name>\n                  <enabled>true</enabled>\n              </provider>\n          </gateway>\n\n          <application>\n            <name>knoxauth</name>\n          </application>\n\n          <service>\n              <role>KNOXSSO</role>\n              <param>\n                  <name>knoxsso.cookie.secure.only</name>\n                  <value>false</value>\n              </param>\n              <param>\n                  <name>knoxsso.token.ttl</name>\n                  <value>30000</value>\n              </param>\n              <param>\n                 <name>knoxsso.redirect.whitelist.regex</name>\n                 <value>^https?:\\/\\/(localhost|127\\.0\\.0\\.1|0:0:0:0:0:0:0:1|::1):[0-9].*$</value>\n              </param>\n          </service>\n\n      </topology>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-knox-plugin-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "KNOX_HOME" : "/usr/hdp/current/knox-server",
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-knox-plugin-properties:1:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "admin",
            "common.name.for.certificate" : "",
            "policy_user" : "ambari-qa",
            "ranger-knox-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "admin-topology",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n    <topology>\n\n        <gateway>\n\n             <provider>\n                <role>authentication</role>\n                <name>ShiroProvider</name>\n                <enabled>true</enabled>\n                <param>\n                    <name>sessionTimeout</name>\n                    <value>30</value>\n                </param>\n                <param>\n                    <name>main.ldapRealm</name>\n                    <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\n                </param>\n                <param>\n                    <name>main.ldapRealm.userDnTemplate</name>\n                    <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\n                </param>\n                <param>\n                    <name>main.ldapRealm.contextFactory.url</name>\n                    <value>ldap://{{knox_host_name}}:33389</value>\n                </param>\n                <param>\n                    <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\n                    <value>simple</value>\n                </param>\n                <param>\n                    <name>urls./**</name>\n                    <value>authcBasic</value>\n                </param>\n            </provider>\n\n            <provider>\n                <role>authorization</role>\n                <name>AclsAuthz</name>\n                <enabled>true</enabled>\n                <param>\n                    <name>knox.acl</name>\n                    <value>admin;*;*</value>\n                </param>\n            </provider>\n\n            <provider>\n                <role>identity-assertion</role>\n                <name>Default</name>\n                <enabled>true</enabled>\n            </provider>\n\n        </gateway>\n\n        <service>\n            <role>KNOX</role>\n        </service>\n\n    </topology>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-knox-security",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.plugin.knox.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.knox.policy.pollIntervalMs" : "30000",
            "ranger.plugin.knox.policy.rest.ssl.config.file" : "/usr/hdp/current/knox-server/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.knox.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.knox.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminJersey2RESTClient",
            "ranger.plugin.knox.service.name" : "{{repo_name}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ldap-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n        # Licensed to the Apache Software Foundation (ASF) under one\n        # or more contributor license agreements.  See the NOTICE file\n        # distributed with this work for additional information\n        # regarding copyright ownership.  The ASF licenses this file\n        # to you under the Apache License, Version 2.0 (the\n        # \"License\"); you may not use this file except in compliance\n        # with the License.  You may obtain a copy of the License at\n        #\n        #     http://www.apache.org/licenses/LICENSE-2.0\n        #\n        # Unless required by applicable law or agreed to in writing, software\n        # distributed under the License is distributed on an \"AS IS\" BASIS,\n        # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        # See the License for the specific language governing permissions and\n        # limitations under the License.\n\n        app.log.dir=${launcher.dir}/../logs\n        app.log.file=${launcher.name}.log\n\n        log4j.rootLogger=ERROR, drfa\n        log4j.logger.org.apache.directory.server.ldap.LdapServer=INFO\n        log4j.logger.org.apache.directory=WARN\n\n        log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n        log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n        log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n        log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\n        log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\n        log4j.appender.drfa.DatePattern=.yyyy-MM-dd\n        log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\n        log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "topology",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "<topology>\n\n            <gateway>\n\n                <provider>\n                    <role>authentication</role>\n                    <name>ShiroProvider</name>\n                    <enabled>true</enabled>\n                    <param>\n                        <name>sessionTimeout</name>\n                        <value>30</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm</name>\n                        <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.userDnTemplate</name>\n                        <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.contextFactory.url</name>\n                        <value>ldap://{{knox_host_name}}:33389</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\n                        <value>simple</value>\n                    </param>\n                    <param>\n                        <name>urls./**</name>\n                        <value>authcBasic</value>\n                    </param>\n                </provider>\n\n                <provider>\n                    <role>identity-assertion</role>\n                    <name>Default</name>\n                    <enabled>true</enabled>\n                </provider>\n\n                <provider>\n                    <role>authorization</role>\n                    <name>XASecurePDPKnox</name>\n                    <enabled>true</enabled>\n                </provider>\n\n            </gateway>\n\n            <service>\n                <role>NAMENODE</role>\n                <url>hdfs://{{namenode_host}}:{{namenode_rpc_port}}</url>\n            </service>\n\n            <service>\n                <role>JOBTRACKER</role>\n                <url>rpc://{{rm_host}}:{{jt_rpc_port}}</url>\n            </service>\n\n            <service>\n                <role>WEBHDFS</role>\n                {{webhdfs_service_urls}}\n            </service>\n\n            <service>\n                <role>WEBHCAT</role>\n                <url>http://{{webhcat_server_host}}:{{templeton_port}}/templeton</url>\n            </service>\n\n            <service>\n                <role>OOZIE</role>\n                <url>http://{{oozie_server_host}}:{{oozie_server_port}}/oozie</url>\n            </service>\n\n            <service>\n                <role>WEBHBASE</role>\n                <url>http://{{hbase_master_host}}:{{hbase_master_port}}</url>\n            </service>\n\n            <service>\n                <role>HIVE</role>\n                <url>http://{{hive_server_host}}:{{hive_http_port}}/{{hive_http_path}}</url>\n            </service>\n\n            <service>\n                <role>RESOURCEMANAGER</role>\n                <url>http://{{rm_host}}:{{rm_port}}/ws</url>\n            </service>\n        </topology>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "knox-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "knox_group" : "knox",
            "knox_master_secret" : "SECRET:knox-env:1:knox_master_secret",
            "knox_pid_dir" : "/var/run/knox",
            "knox_user" : "knox"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "gateway-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "gateway.gateway.conf.dir" : "deployments",
            "gateway.hadoop.kerberos.secured" : "false",
            "gateway.path" : "gateway",
            "gateway.port" : "8443",
            "java.security.auth.login.config" : "/etc/knox/conf/krb5JAASLogin.conf",
            "java.security.krb5.conf" : "/etc/knox/conf/krb5.conf",
            "sun.security.krb5.debug" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "users-ldif",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nversion: 1\n\n# Please replace with site specific values\ndn: dc=hadoop,dc=apache,dc=org\nobjectclass: organization\nobjectclass: dcObject\no: Hadoop\ndc: hadoop\n\n# Entry for a sample people container\n# Please replace with site specific values\ndn: ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:organizationalUnit\nou: people\n\n# Entry for a sample end user\n# Please replace with site specific values\ndn: uid=guest,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: Guest\nsn: User\nuid: guest\nuserPassword:guest-password\n\n# entry for sample user admin\ndn: uid=admin,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: Admin\nsn: Admin\nuid: admin\nuserPassword:admin-password\n\n# entry for sample user sam\ndn: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: sam\nsn: sam\nuid: sam\nuserPassword:sam-password\n\n# entry for sample user tom\ndn: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: tom\nsn: tom\nuid: tom\nuserPassword:tom-password\n\n# create FIRST Level groups branch\ndn: ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:organizationalUnit\nou: groups\ndescription: generic groups branch\n\n# create the analyst group under groups\ndn: cn=analyst,ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass: groupofnames\ncn: analyst\ndescription:analyst  group\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\nmember: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\n\n\n# create the scientist group under groups\ndn: cn=scientist,ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass: groupofnames\ncn: scientist\ndescription: scientist group\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "gateway-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n\n      # Licensed to the Apache Software Foundation (ASF) under one\n      # or more contributor license agreements. See the NOTICE file\n      # distributed with this work for additional information\n      # regarding copyright ownership. The ASF licenses this file\n      # to you under the Apache License, Version 2.0 (the\n      # \"License\"); you may not use this file except in compliance\n      # with the License. You may obtain a copy of the License at\n      #\n      # http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      app.log.dir=${launcher.dir}/../logs\n      app.log.file=${launcher.name}.log\n      app.audit.file=${launcher.name}-audit.log\n\n      log4j.rootLogger=ERROR, drfa\n\n      log4j.logger.org.apache.hadoop.gateway=INFO\n      #log4j.logger.org.apache.hadoop.gateway=DEBUG\n\n      #log4j.logger.org.eclipse.jetty=DEBUG\n      #log4j.logger.org.apache.shiro=DEBUG\n      #log4j.logger.org.apache.http=DEBUG\n      #log4j.logger.org.apache.http.client=DEBUG\n      #log4j.logger.org.apache.http.headers=DEBUG\n      #log4j.logger.org.apache.http.wire=DEBUG\n\n      log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n      log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n      log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n      log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\n      log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\n      log4j.appender.drfa.DatePattern=.yyyy-MM-dd\n      log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\n      log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n      log4j.logger.audit=INFO, auditfile\n      log4j.appender.auditfile=org.apache.log4j.DailyRollingFileAppender\n      log4j.appender.auditfile.File=${app.log.dir}/${app.audit.file}\n      log4j.appender.auditfile.Append = true\n      log4j.appender.auditfile.DatePattern = '.'yyyy-MM-dd\n      log4j.appender.auditfile.layout = org.apache.hadoop.gateway.audit.log4j.layout.AuditLayout"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-knox-audit",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/knox/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_1%:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/knox/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-knox-policymgr-ssl",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/knox-server/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-knox-policymgr-ssl:1:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/knox-server/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-knox-policymgr-ssl:1:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380369293,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "KNOX",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=KNOX&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-knox-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "KNOX_HOME" : "/usr/hdp/current/knox-server",
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-knox-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "admin",
            "common.name.for.certificate" : "",
            "policy_user" : "ambari-qa",
            "ranger-knox-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "admin-topology",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n    <topology>\n\n        <gateway>\n\n             <provider>\n                <role>authentication</role>\n                <name>ShiroProvider</name>\n                <enabled>true</enabled>\n                <param>\n                    <name>sessionTimeout</name>\n                    <value>30</value>\n                </param>\n                <param>\n                    <name>main.ldapRealm</name>\n                    <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\n                </param>\n                <param>\n                    <name>main.ldapRealm.userDnTemplate</name>\n                    <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\n                </param>\n                <param>\n                    <name>main.ldapRealm.contextFactory.url</name>\n                    <value>ldap://{{knox_host_name}}:33389</value>\n                </param>\n                <param>\n                    <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\n                    <value>simple</value>\n                </param>\n                <param>\n                    <name>urls./**</name>\n                    <value>authcBasic</value>\n                </param>\n            </provider>\n\n            <provider>\n                <role>authorization</role>\n                <name>AclsAuthz</name>\n                <enabled>true</enabled>\n                <param>\n                    <name>knox.acl</name>\n                    <value>admin;*;*</value>\n                </param>\n            </provider>\n\n            <provider>\n                <role>identity-assertion</role>\n                <name>Default</name>\n                <enabled>true</enabled>\n            </provider>\n\n        </gateway>\n\n        <service>\n            <role>KNOX</role>\n        </service>\n\n    </topology>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-knox-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.knox.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.knox.policy.pollIntervalMs" : "30000",
            "ranger.plugin.knox.policy.rest.ssl.config.file" : "/usr/hdp/current/knox-server/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.knox.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.knox.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminJersey2RESTClient",
            "ranger.plugin.knox.service.name" : "{{repo_name}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ldap-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n        # Licensed to the Apache Software Foundation (ASF) under one\n        # or more contributor license agreements.  See the NOTICE file\n        # distributed with this work for additional information\n        # regarding copyright ownership.  The ASF licenses this file\n        # to you under the Apache License, Version 2.0 (the\n        # \"License\"); you may not use this file except in compliance\n        # with the License.  You may obtain a copy of the License at\n        #\n        #     http://www.apache.org/licenses/LICENSE-2.0\n        #\n        # Unless required by applicable law or agreed to in writing, software\n        # distributed under the License is distributed on an \"AS IS\" BASIS,\n        # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        # See the License for the specific language governing permissions and\n        # limitations under the License.\n\n        app.log.dir=${launcher.dir}/../logs\n        app.log.file=${launcher.name}.log\n\n        log4j.rootLogger=ERROR, drfa\n        log4j.logger.org.apache.directory.server.ldap.LdapServer=INFO\n        log4j.logger.org.apache.directory=WARN\n\n        log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n        log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n        log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n        log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\n        log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\n        log4j.appender.drfa.DatePattern=.yyyy-MM-dd\n        log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\n        log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "topology",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "<topology>\n\n            <gateway>\n\n                <provider>\n                    <role>authentication</role>\n                    <name>ShiroProvider</name>\n                    <enabled>true</enabled>\n                    <param>\n                        <name>sessionTimeout</name>\n                        <value>30</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm</name>\n                        <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.userDnTemplate</name>\n                        <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.contextFactory.url</name>\n                        <value>ldap://{{knox_host_name}}:33389</value>\n                    </param>\n                    <param>\n                        <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\n                        <value>simple</value>\n                    </param>\n                    <param>\n                        <name>urls./**</name>\n                        <value>authcBasic</value>\n                    </param>\n                </provider>\n\n                <provider>\n                    <role>identity-assertion</role>\n                    <name>Default</name>\n                    <enabled>true</enabled>\n                </provider>\n\n                <provider>\n                    <role>authorization</role>\n                    <name>XASecurePDPKnox</name>\n                    <enabled>true</enabled>\n                </provider>\n\n            </gateway>\n\n            <service>\n                <role>NAMENODE</role>\n                <url>hdfs://{{namenode_host}}:{{namenode_rpc_port}}</url>\n            </service>\n\n            <service>\n                <role>JOBTRACKER</role>\n                <url>rpc://{{rm_host}}:{{jt_rpc_port}}</url>\n            </service>\n\n            <service>\n                <role>WEBHDFS</role>\n                {{webhdfs_service_urls}}\n            </service>\n\n            <service>\n                <role>WEBHCAT</role>\n                <url>http://{{webhcat_server_host}}:{{templeton_port}}/templeton</url>\n            </service>\n\n            <service>\n                <role>OOZIE</role>\n                <url>http://{{oozie_server_host}}:{{oozie_server_port}}/oozie</url>\n            </service>\n\n            <service>\n                <role>WEBHBASE</role>\n                <url>http://{{hbase_master_host}}:{{hbase_master_port}}</url>\n            </service>\n\n            <service>\n                <role>HIVE</role>\n                <url>http://{{hive_server_host}}:{{hive_http_port}}/{{hive_http_path}}</url>\n            </service>\n\n            <service>\n                <role>RESOURCEMANAGER</role>\n                <url>http://{{rm_host}}:{{rm_port}}/ws</url>\n            </service>\n        </topology>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "knox-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "knox_group" : "knox",
            "knox_master_secret" : "SECRET:knox-env:2:knox_master_secret",
            "knox_pid_dir" : "/var/run/knox",
            "knox_user" : "knox"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "gateway-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "gateway.gateway.conf.dir" : "deployments",
            "gateway.hadoop.kerberos.secured" : "false",
            "gateway.path" : "gateway",
            "gateway.port" : "8443",
            "java.security.auth.login.config" : "/etc/knox/conf/krb5JAASLogin.conf",
            "java.security.krb5.conf" : "/etc/knox/conf/krb5.conf",
            "sun.security.krb5.debug" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "users-ldif",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nversion: 1\n\n# Please replace with site specific values\ndn: dc=hadoop,dc=apache,dc=org\nobjectclass: organization\nobjectclass: dcObject\no: Hadoop\ndc: hadoop\n\n# Entry for a sample people container\n# Please replace with site specific values\ndn: ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:organizationalUnit\nou: people\n\n# Entry for a sample end user\n# Please replace with site specific values\ndn: uid=guest,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: Guest\nsn: User\nuid: guest\nuserPassword:guest-password\n\n# entry for sample user admin\ndn: uid=admin,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: Admin\nsn: Admin\nuid: admin\nuserPassword:admin-password\n\n# entry for sample user sam\ndn: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: sam\nsn: sam\nuid: sam\nuserPassword:sam-password\n\n# entry for sample user tom\ndn: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:person\nobjectclass:organizationalPerson\nobjectclass:inetOrgPerson\ncn: tom\nsn: tom\nuid: tom\nuserPassword:tom-password\n\n# create FIRST Level groups branch\ndn: ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass:organizationalUnit\nou: groups\ndescription: generic groups branch\n\n# create the analyst group under groups\ndn: cn=analyst,ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass: groupofnames\ncn: analyst\ndescription:analyst  group\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org\nmember: uid=tom,ou=people,dc=hadoop,dc=apache,dc=org\n\n\n# create the scientist group under groups\ndn: cn=scientist,ou=groups,dc=hadoop,dc=apache,dc=org\nobjectclass:top\nobjectclass: groupofnames\ncn: scientist\ndescription: scientist group\nmember: uid=sam,ou=people,dc=hadoop,dc=apache,dc=org"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "gateway-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n\n      # Licensed to the Apache Software Foundation (ASF) under one\n      # or more contributor license agreements. See the NOTICE file\n      # distributed with this work for additional information\n      # regarding copyright ownership. The ASF licenses this file\n      # to you under the Apache License, Version 2.0 (the\n      # \"License\"); you may not use this file except in compliance\n      # with the License. You may obtain a copy of the License at\n      #\n      # http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      app.log.dir=${launcher.dir}/../logs\n      app.log.file=${launcher.name}.log\n      app.audit.file=${launcher.name}-audit.log\n\n      log4j.rootLogger=ERROR, drfa\n\n      log4j.logger.org.apache.hadoop.gateway=INFO\n      #log4j.logger.org.apache.hadoop.gateway=DEBUG\n\n      #log4j.logger.org.eclipse.jetty=DEBUG\n      #log4j.logger.org.apache.shiro=DEBUG\n      #log4j.logger.org.apache.http=DEBUG\n      #log4j.logger.org.apache.http.client=DEBUG\n      #log4j.logger.org.apache.http.headers=DEBUG\n      #log4j.logger.org.apache.http.wire=DEBUG\n\n      log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n      log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n      log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n      log4j.appender.drfa=org.apache.log4j.DailyRollingFileAppender\n      log4j.appender.drfa.File=${app.log.dir}/${app.log.file}\n      log4j.appender.drfa.DatePattern=.yyyy-MM-dd\n      log4j.appender.drfa.layout=org.apache.log4j.PatternLayout\n      log4j.appender.drfa.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n      log4j.logger.audit=INFO, auditfile\n      log4j.appender.auditfile=org.apache.log4j.DailyRollingFileAppender\n      log4j.appender.auditfile.File=${app.log.dir}/${app.audit.file}\n      log4j.appender.auditfile.Append = true\n      log4j.appender.auditfile.DatePattern = '.'yyyy-MM-dd\n      log4j.appender.auditfile.layout = org.apache.hadoop.gateway.audit.log4j.layout.AuditLayout"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-knox-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/knox/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/knox/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-knox-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/knox-server/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-knox-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/knox-server/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-knox-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "knoxsso-topology",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n      <topology>\n          <gateway>\n              <provider>\n                  <role>webappsec</role>\n                  <name>WebAppSec</name>\n                  <enabled>true</enabled>\n                  <param><name>xframe.options.enabled</name><value>true</value></param>\n              </provider>\n\n              <provider>\n                  <role>authentication</role>\n                  <name>ShiroProvider</name>\n                  <enabled>true</enabled>\n                  <param>\n                      <name>sessionTimeout</name>\n                      <value>30</value>\n                  </param>\n                  <param>\n                      <name>redirectToUrl</name>\n                      <value>/gateway/knoxsso/knoxauth/login.html</value>\n                  </param>\n                  <param>\n                      <name>restrictedCookies</name>\n                      <value>rememberme,WWW-Authenticate</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm</name>\n                      <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapRealm</value>\n                  </param>\n                  <param>\n                      <name>main.ldapContextFactory</name>\n                      <value>org.apache.hadoop.gateway.shirorealm.KnoxLdapContextFactory</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm.contextFactory</name>\n                      <value>$ldapContextFactory</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm.userDnTemplate</name>\n                      <value>uid={0},ou=people,dc=hadoop,dc=apache,dc=org</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm.contextFactory.url</name>\n                      <value>ldap://localhost:33389</value>\n                  </param>    \n                  <param>\n                      <name>main.ldapRealm.authenticationCachingEnabled</name>\n                      <value>false</value>\n                  </param>\n                  <param>\n                      <name>main.ldapRealm.contextFactory.authenticationMechanism</name>\n                      <value>simple</value>\n                  </param>\n                  <param>\n                      <name>urls./**</name>\n                      <value>authcBasic</value>\n                  </param>\n              </provider>\n\n              <provider>\n                  <role>identity-assertion</role>\n                  <name>Default</name>\n                  <enabled>true</enabled>\n              </provider>\n          </gateway>\n\n          <application>\n            <name>knoxauth</name>\n          </application>\n\n          <service>\n              <role>KNOXSSO</role>\n              <param>\n                  <name>knoxsso.cookie.secure.only</name>\n                  <value>false</value>\n              </param>\n              <param>\n                  <name>knoxsso.token.ttl</name>\n                  <value>30000</value>\n              </param>\n              <param>\n                 <name>knoxsso.redirect.whitelist.regex</name>\n                 <value>^https?:\\/\\/(localhost|127\\.0\\.0\\.1|0:0:0:0:0:0:0:1|::1):[0-9].*$</value>\n              </param>\n          </service>\n\n      </topology>"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380379161,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "KNOX",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=MAPREDUCE2&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "mapred-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\n\n#export HADOOP_JOB_HISTORYSERVER_OPTS=\n#export HADOOP_MAPRED_LOG_DIR=\"\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\nexport HADOOP_OPTS=\"-Djava.io.tmpdir={{hadoop_java_io_tmpdir}} $HADOOP_OPTS\"\nexport JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"",
            "jobhistory_heapsize" : "250",
            "mapred_log_dir_prefix" : "/var/log/hadoop-mapreduce",
            "mapred_pid_dir_prefix" : "/var/run/hadoop-mapreduce",
            "mapred_user" : "mapred",
            "mapred_user_nofile_limit" : "32768",
            "mapred_user_nproc_limit" : "65536"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "mapred-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "io.sort.mb" : "64",
            "mapred.child.java.opts" : "-Xmx200m",
            "mapred.job.map.memory.mb" : "250",
            "mapred.job.reduce.memory.mb" : "250",
            "mapreduce.admin.map.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "mapreduce.admin.reduce.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "mapreduce.admin.user.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
            "mapreduce.am.max-attempts" : "2",
            "mapreduce.application.classpath" : "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
            "mapreduce.application.framework.path" : "/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework",
            "mapreduce.cluster.administrators" : " hadoop",
            "mapreduce.framework.name" : "yarn",
            "mapreduce.job.counters.max" : "130",
            "mapreduce.job.emit-timeline-data" : "false",
            "mapreduce.job.queuename" : "default",
            "mapreduce.job.reduce.slowstart.completedmaps" : "0.05",
            "mapreduce.jobhistory.address" : "%HOSTGROUP::host_group_1%:10020",
            "mapreduce.jobhistory.bind-host" : "0.0.0.0",
            "mapreduce.jobhistory.done-dir" : "/mr-history/done",
            "mapreduce.jobhistory.http.policy" : "HTTP_ONLY",
            "mapreduce.jobhistory.intermediate-done-dir" : "/mr-history/tmp",
            "mapreduce.jobhistory.recovery.enable" : "true",
            "mapreduce.jobhistory.recovery.store.class" : "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
            "mapreduce.jobhistory.recovery.store.leveldb.path" : "/hadoop/mapreduce/jhs",
            "mapreduce.jobhistory.webapp.address" : "%HOSTGROUP::host_group_1%:19888",
            "mapreduce.map.java.opts" : "-Xmx200m",
            "mapreduce.map.log.level" : "INFO",
            "mapreduce.map.memory.mb" : "250",
            "mapreduce.map.output.compress" : "false",
            "mapreduce.map.sort.spill.percent" : "0.7",
            "mapreduce.map.speculative" : "false",
            "mapreduce.output.fileoutputformat.compress" : "false",
            "mapreduce.output.fileoutputformat.compress.type" : "BLOCK",
            "mapreduce.reduce.input.buffer.percent" : "0.0",
            "mapreduce.reduce.java.opts" : "-Xmx200m",
            "mapreduce.reduce.log.level" : "INFO",
            "mapreduce.reduce.memory.mb" : "250",
            "mapreduce.reduce.shuffle.fetch.retry.enabled" : "1",
            "mapreduce.reduce.shuffle.fetch.retry.interval-ms" : "1000",
            "mapreduce.reduce.shuffle.fetch.retry.timeout-ms" : "30000",
            "mapreduce.reduce.shuffle.input.buffer.percent" : "0.7",
            "mapreduce.reduce.shuffle.merge.percent" : "0.66",
            "mapreduce.reduce.shuffle.parallelcopies" : "30",
            "mapreduce.reduce.speculative" : "false",
            "mapreduce.shuffle.port" : "13562",
            "mapreduce.task.io.sort.factor" : "100",
            "mapreduce.task.io.sort.mb" : "64",
            "mapreduce.task.timeout" : "300000",
            "yarn.app.mapreduce.am.admin-command-opts" : "-Dhdp.version=${hdp.version}",
            "yarn.app.mapreduce.am.command-opts" : "-Xmx200m",
            "yarn.app.mapreduce.am.log.level" : "INFO",
            "yarn.app.mapreduce.am.resource.mb" : "250",
            "yarn.app.mapreduce.am.staging-dir" : "/user"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380367913,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "MAPREDUCE2",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=MAPREDUCE2&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "mapred-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\n\n#export HADOOP_JOB_HISTORYSERVER_OPTS=\n#export HADOOP_MAPRED_LOG_DIR=\"\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\nexport HADOOP_OPTS=\"-Djava.io.tmpdir={{hadoop_java_io_tmpdir}} $HADOOP_OPTS\"\nexport JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"",
            "jobhistory_heapsize" : "250",
            "mapred_log_dir_prefix" : "/var/log/hadoop-mapreduce",
            "mapred_pid_dir_prefix" : "/var/run/hadoop-mapreduce",
            "mapred_user" : "mapred",
            "mapred_user_nofile_limit" : "32768",
            "mapred_user_nproc_limit" : "65536"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "mapred-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "io.sort.mb" : "64",
            "mapred.child.java.opts" : "-Xmx200m",
            "mapred.job.map.memory.mb" : "250",
            "mapred.job.reduce.memory.mb" : "250",
            "mapreduce.admin.map.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "mapreduce.admin.reduce.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "mapreduce.admin.user.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
            "mapreduce.am.max-attempts" : "2",
            "mapreduce.application.classpath" : "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
            "mapreduce.application.framework.path" : "/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework",
            "mapreduce.cluster.administrators" : " hadoop",
            "mapreduce.framework.name" : "yarn",
            "mapreduce.job.counters.max" : "130",
            "mapreduce.job.emit-timeline-data" : "false",
            "mapreduce.job.queuename" : "default",
            "mapreduce.job.reduce.slowstart.completedmaps" : "0.05",
            "mapreduce.jobhistory.address" : "sandbox.hortonworks.com:10020",
            "mapreduce.jobhistory.bind-host" : "0.0.0.0",
            "mapreduce.jobhistory.done-dir" : "/mr-history/done",
            "mapreduce.jobhistory.http.policy" : "HTTP_ONLY",
            "mapreduce.jobhistory.intermediate-done-dir" : "/mr-history/tmp",
            "mapreduce.jobhistory.recovery.enable" : "true",
            "mapreduce.jobhistory.recovery.store.class" : "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
            "mapreduce.jobhistory.recovery.store.leveldb.path" : "/hadoop/mapreduce/jhs",
            "mapreduce.jobhistory.webapp.address" : "sandbox.hortonworks.com:19888",
            "mapreduce.map.java.opts" : "-Xmx200m",
            "mapreduce.map.log.level" : "INFO",
            "mapreduce.map.memory.mb" : "250",
            "mapreduce.map.output.compress" : "false",
            "mapreduce.map.sort.spill.percent" : "0.7",
            "mapreduce.map.speculative" : "false",
            "mapreduce.output.fileoutputformat.compress" : "false",
            "mapreduce.output.fileoutputformat.compress.type" : "BLOCK",
            "mapreduce.reduce.input.buffer.percent" : "0.0",
            "mapreduce.reduce.java.opts" : "-Xmx200m",
            "mapreduce.reduce.log.level" : "INFO",
            "mapreduce.reduce.memory.mb" : "250",
            "mapreduce.reduce.shuffle.fetch.retry.enabled" : "1",
            "mapreduce.reduce.shuffle.fetch.retry.interval-ms" : "1000",
            "mapreduce.reduce.shuffle.fetch.retry.timeout-ms" : "30000",
            "mapreduce.reduce.shuffle.input.buffer.percent" : "0.7",
            "mapreduce.reduce.shuffle.merge.percent" : "0.66",
            "mapreduce.reduce.shuffle.parallelcopies" : "30",
            "mapreduce.reduce.speculative" : "false",
            "mapreduce.shuffle.port" : "13562",
            "mapreduce.task.io.sort.factor" : "100",
            "mapreduce.task.io.sort.mb" : "64",
            "mapreduce.task.timeout" : "300000",
            "yarn.app.mapreduce.am.admin-command-opts" : "-Dhdp.version=${hdp.version}",
            "yarn.app.mapreduce.am.command-opts" : "-Xmx200m",
            "yarn.app.mapreduce.am.log.level" : "INFO",
            "yarn.app.mapreduce.am.resource.mb" : "250",
            "yarn.app.mapreduce.am.staging-dir" : "/user"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380378535,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "MAPREDUCE2",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=OOZIE&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "oozie-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#!/bin/bash\n\nif [ -d \"/usr/lib/bigtop-tomcat\" ]; then\n  export OOZIE_CONFIG=${OOZIE_CONFIG:-{{conf_dir}}}\n  export CATALINA_BASE=${CATALINA_BASE:-{{oozie_server_dir}}}\n  export CATALINA_TMPDIR=${CATALINA_TMPDIR:-/var/tmp/oozie}\n  export OOZIE_CATALINA_HOME=/usr/lib/bigtop-tomcat\nfi\n\n#Set JAVA HOME\nexport JAVA_HOME={{java_home}}\n\nexport JRE_HOME=${JAVA_HOME}\n\n# Set Oozie specific environment variables here.\n\n# Settings for the Embedded Tomcat that runs Oozie\n# Java System properties for Oozie should be specified in this variable\n#\n{% if java_version < 8 %}\nexport CATALINA_OPTS=\"$CATALINA_OPTS -Xmx{{oozie_heapsize}} -XX:MaxPermSize={{oozie_permsize}}\"\n{% else %}\nexport CATALINA_OPTS=\"$CATALINA_OPTS -Xmx{{oozie_heapsize}}\"\n{% endif %}\n# Oozie configuration file to load from Oozie configuration directory\n#\n# export OOZIE_CONFIG_FILE=oozie-site.xml\n\n# Oozie logs directory\n#\nexport OOZIE_LOG={{oozie_log_dir}}\n\n# Oozie pid directory\n#\nexport CATALINA_PID={{pid_file}}\n\n#Location of the data for oozie\nexport OOZIE_DATA={{oozie_data_dir}}\n\n# Oozie Log4J configuration file to load from Oozie configuration directory\n#\n# export OOZIE_LOG4J_FILE=oozie-log4j.properties\n\n# Reload interval of the Log4J configuration file, in seconds\n#\n# export OOZIE_LOG4J_RELOAD=10\n\n# The port Oozie server runs\n#\nexport OOZIE_HTTP_PORT={{oozie_server_port}}\n\n# The admin port Oozie server runs\n#\nexport OOZIE_ADMIN_PORT={{oozie_server_admin_port}}\n\n# The host name Oozie server runs on\n#\n# export OOZIE_HTTP_HOSTNAME=`hostname -f`\n\n# The base URL for callback URLs to Oozie\n#\n# export OOZIE_BASE_URL=\"http://${OOZIE_HTTP_HOSTNAME}:${OOZIE_HTTP_PORT}/oozie\"\nexport JAVA_LIBRARY_PATH={{hadoop_lib_home}}/native/Linux-amd64-64\n\n# At least 1 minute of retry time to account for server downtime during\n# upgrade/downgrade\nexport OOZIE_CLIENT_OPTS=\"${OOZIE_CLIENT_OPTS} -Doozie.connection.retry.count=5 \"\n\n{% if sqla_db_used or lib_dir_available %}\nexport LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:{{jdbc_libs_dir}}\"\nexport JAVA_LIBRARY_PATH=\"$JAVA_LIBRARY_PATH:{{jdbc_libs_dir}}\"\n{% endif %}\n\n# Set Hadoop-related properties\nexport HADOOP_OPTS=\"-Dhdp.version=${HDP_VERSION} ${HADOOP_OPTS}\"",
            "oozie_admin_port" : "11001",
            "oozie_admin_users" : "{oozie_user}, oozie-admin,falcon",
            "oozie_data_dir" : "/hadoop/oozie/data",
            "oozie_database" : "New Derby Database",
            "oozie_heapsize" : "1024m",
            "oozie_log_dir" : "/var/log/oozie",
            "oozie_permsize" : "512m",
            "oozie_pid_dir" : "/var/run/oozie",
            "oozie_tmp_dir" : "/var/tmp/oozie",
            "oozie_user" : "oozie",
            "oozie_user_nofile_limit" : "32000",
            "oozie_user_nproc_limit" : "16000"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "oozie-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. See accompanying LICENSE file.\n#\n\n# If the Java System property 'oozie.log.dir' is not defined at Oozie start up time\n# XLogService sets its value to '${oozie.home}/logs'\n\n# The appender that Oozie uses must be named 'oozie' (i.e. log4j.appender.oozie)\n\n# Using the RollingFileAppender with the OozieRollingPolicy will roll the log file every hour and retain up to MaxHistory number of\n# log files. If FileNamePattern ends with \".gz\" it will create gzip files.\nlog4j.appender.oozie=org.apache.log4j.rolling.RollingFileAppender\nlog4j.appender.oozie.RollingPolicy=org.apache.oozie.util.OozieRollingPolicy\nlog4j.appender.oozie.File=${oozie.log.dir}/oozie.log\nlog4j.appender.oozie.Append=true\nlog4j.appender.oozie.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozie.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n\n# The FileNamePattern must end with \"-%d{yyyy-MM-dd-HH}.gz\" or \"-%d{yyyy-MM-dd-HH}\" and also start with the\n# value of log4j.appender.oozie.File\nlog4j.appender.oozie.RollingPolicy.FileNamePattern=${log4j.appender.oozie.File}-%d{yyyy-MM-dd-HH}\n# The MaxHistory controls how many log files will be retained (720 hours / 24 hours per day = 30 days); -1 to disable\nlog4j.appender.oozie.RollingPolicy.MaxHistory=720\n\n\n\nlog4j.appender.oozieError=org.apache.log4j.rolling.RollingFileAppender\nlog4j.appender.oozieError.RollingPolicy=org.apache.oozie.util.OozieRollingPolicy\nlog4j.appender.oozieError.File=${oozie.log.dir}/oozie-error.log\nlog4j.appender.oozieError.Append=true\nlog4j.appender.oozieError.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieError.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n\n# The FileNamePattern must end with \"-%d{yyyy-MM-dd-HH}.gz\" or \"-%d{yyyy-MM-dd-HH}\" and also start with the\n# value of log4j.appender.oozieError.File\nlog4j.appender.oozieError.RollingPolicy.FileNamePattern=${log4j.appender.oozieError.File}-%d{yyyy-MM-dd-HH}\n# The MaxHistory controls how many log files will be retained (720 hours / 24 hours per day = 30 days); -1 to disable\nlog4j.appender.oozieError.RollingPolicy.MaxHistory=720\nlog4j.appender.oozieError.filter.1 = org.apache.log4j.varia.LevelMatchFilter\nlog4j.appender.oozieError.filter.1.levelToMatch = WARN\nlog4j.appender.oozieError.filter.2 = org.apache.log4j.varia.LevelMatchFilter\nlog4j.appender.oozieError.filter.2.levelToMatch = ERROR\nlog4j.appender.oozieError.filter.3 = org.apache.log4j.varia.LevelMatchFilter\nlog4j.appender.oozieError.filter.3.levelToMatch = FATAL\nlog4j.appender.oozieError.filter.4 = org.apache.log4j.varia.DenyAllFilter\n\n\n\n# Uncomment the below two lines to use the DailyRollingFileAppender instead\n# The DatePattern must end with either \"dd\" or \"HH\"\n#log4j.appender.oozie=org.apache.log4j.DailyRollingFileAppender\n#log4j.appender.oozie.DatePattern='.'yyyy-MM-dd-HH\n\nlog4j.appender.oozieops=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieops.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieops.File=${oozie.log.dir}/oozie-ops.log\nlog4j.appender.oozieops.Append=true\nlog4j.appender.oozieops.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieops.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieinstrumentation=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieinstrumentation.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieinstrumentation.File=${oozie.log.dir}/oozie-instrumentation.log\nlog4j.appender.oozieinstrumentation.Append=true\nlog4j.appender.oozieinstrumentation.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieinstrumentation.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieaudit=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieaudit.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieaudit.File=${oozie.log.dir}/oozie-audit.log\nlog4j.appender.oozieaudit.Append=true\nlog4j.appender.oozieaudit.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieaudit.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.openjpa=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.openjpa.DatePattern='.'yyyy-MM-dd\nlog4j.appender.openjpa.File=${oozie.log.dir}/oozie-jpa.log\nlog4j.appender.openjpa.Append=true\nlog4j.appender.openjpa.layout=org.apache.log4j.PatternLayout\nlog4j.appender.openjpa.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.logger.openjpa=INFO, openjpa\nlog4j.logger.oozieops=INFO, oozieops\nlog4j.logger.oozieinstrumentation=ALL, oozieinstrumentation\nlog4j.logger.oozieaudit=ALL, oozieaudit\nlog4j.logger.org.apache.oozie=INFO, oozie, oozieError\nlog4j.logger.org.apache.hadoop=WARN, oozie\nlog4j.logger.org.mortbay=WARN, oozie\nlog4j.logger.org.hsqldb=WARN, oozie\nlog4j.logger.org.apache.hadoop.security.authentication.server=WARN, oozie"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "oozie-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "oozie.action.retry.interval" : "30",
            "oozie.authentication.kerberos.name.rules" : " ",
            "oozie.authentication.simple.anonymous.allowed" : "true",
            "oozie.authentication.type" : "simple",
            "oozie.base.url" : "http://%HOSTGROUP::host_group_1%:11000/oozie",
            "oozie.credentials.credentialclasses" : "hcat=org.apache.oozie.action.hadoop.HCatCredentials,hive2=org.apache.oozie.action.hadoop.Hive2Credentials",
            "oozie.db.schema.name" : "oozie",
            "oozie.service.AuthorizationService.authorization.enabled" : "true",
            "oozie.service.AuthorizationService.security.enabled" : "true",
            "oozie.service.ELService.ext.functions.coord-action-create" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_currentWeek,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_lastWeek,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-action-create-inst" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now_inst,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today_inst,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday_inst,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_currentWeek_inst,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_lastWeek_inst,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth_inst,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth_inst,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear_inst,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear_inst,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-action-start" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_currentWeek,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_lastWeek,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph3_coord_latest,\n      future=org.apache.oozie.coord.CoordELFunctions#ph3_coord_future,\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph3_dataIn,\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_nominalTime,\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph3_coord_dateOffset,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_formatTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-job-submit-data" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_currentWeek_echo,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_lastWeek_echo,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph1_dataIn_echo,\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_wrap,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph1_coord_dateOffset_echo,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-job-submit-instances" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_currentWeek_echo,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_lastWeek_echo,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo",
            "oozie.service.ELService.ext.functions.coord-sla-create" : "\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_nominalTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-sla-submit" : "\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_fixed,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.workflow" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo",
            "oozie.service.HadoopAccessorService.hadoop.configurations" : "*=/etc/hadoop/conf",
            "oozie.service.HadoopAccessorService.kerberos.enabled" : "false",
            "oozie.service.HadoopAccessorService.supported.filesystems" : "*",
            "oozie.service.JPAService.jdbc.driver" : "org.apache.derby.jdbc.EmbeddedDriver",
            "oozie.service.JPAService.jdbc.password" : "SECRET:oozie-site:1:oozie.service.JPAService.jdbc.password",
            "oozie.service.JPAService.jdbc.url" : "jdbc:derby:${oozie.data.dir}/${oozie.db.schema.name}-db;create=true",
            "oozie.service.JPAService.jdbc.username" : "oozie",
            "oozie.service.ProxyUserService.proxyuser.falcon.groups" : "*",
            "oozie.service.ProxyUserService.proxyuser.falcon.hosts" : "*",
            "oozie.service.ProxyUserService.proxyuser.hue.groups" : "*",
            "oozie.service.ProxyUserService.proxyuser.hue.hosts" : "*",
            "oozie.service.SparkConfigurationService.spark.configurations" : "*=spark-conf",
            "oozie.service.URIHandlerService.uri.handlers" : "org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler",
            "oozie.services.ext" : "org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380367861,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "OOZIE",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=OOZIE&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "oozie-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#!/bin/bash\n\nif [ -d \"/usr/lib/bigtop-tomcat\" ]; then\n  export OOZIE_CONFIG=${OOZIE_CONFIG:-{{conf_dir}}}\n  export CATALINA_BASE=${CATALINA_BASE:-{{oozie_server_dir}}}\n  export CATALINA_TMPDIR=${CATALINA_TMPDIR:-/var/tmp/oozie}\n  export OOZIE_CATALINA_HOME=/usr/lib/bigtop-tomcat\nfi\n\n#Set JAVA HOME\nexport JAVA_HOME={{java_home}}\n\nexport JRE_HOME=${JAVA_HOME}\n\n# Set Oozie specific environment variables here.\n\n# Settings for the Embedded Tomcat that runs Oozie\n# Java System properties for Oozie should be specified in this variable\n#\n{% if java_version < 8 %}\nexport CATALINA_OPTS=\"$CATALINA_OPTS -Xmx{{oozie_heapsize}} -XX:MaxPermSize={{oozie_permsize}}\"\n{% else %}\nexport CATALINA_OPTS=\"$CATALINA_OPTS -Xmx{{oozie_heapsize}}\"\n{% endif %}\n# Oozie configuration file to load from Oozie configuration directory\n#\n# export OOZIE_CONFIG_FILE=oozie-site.xml\n\n# Oozie logs directory\n#\nexport OOZIE_LOG={{oozie_log_dir}}\n\n# Oozie pid directory\n#\nexport CATALINA_PID={{pid_file}}\n\n#Location of the data for oozie\nexport OOZIE_DATA={{oozie_data_dir}}\n\n# Oozie Log4J configuration file to load from Oozie configuration directory\n#\n# export OOZIE_LOG4J_FILE=oozie-log4j.properties\n\n# Reload interval of the Log4J configuration file, in seconds\n#\n# export OOZIE_LOG4J_RELOAD=10\n\n# The port Oozie server runs\n#\nexport OOZIE_HTTP_PORT={{oozie_server_port}}\n\n# The admin port Oozie server runs\n#\nexport OOZIE_ADMIN_PORT={{oozie_server_admin_port}}\n\n# The host name Oozie server runs on\n#\n# export OOZIE_HTTP_HOSTNAME=`hostname -f`\n\n# The base URL for callback URLs to Oozie\n#\n# export OOZIE_BASE_URL=\"http://${OOZIE_HTTP_HOSTNAME}:${OOZIE_HTTP_PORT}/oozie\"\nexport JAVA_LIBRARY_PATH={{hadoop_lib_home}}/native/Linux-amd64-64\n\n# At least 1 minute of retry time to account for server downtime during\n# upgrade/downgrade\nexport OOZIE_CLIENT_OPTS=\"${OOZIE_CLIENT_OPTS} -Doozie.connection.retry.count=5 \"\n\n{% if sqla_db_used or lib_dir_available %}\nexport LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:{{jdbc_libs_dir}}\"\nexport JAVA_LIBRARY_PATH=\"$JAVA_LIBRARY_PATH:{{jdbc_libs_dir}}\"\n{% endif %}\n\n# Set Hadoop-related properties\nexport HADOOP_OPTS=\"-Dhdp.version=${HDP_VERSION} ${HADOOP_OPTS}\"",
            "oozie_admin_port" : "11001",
            "oozie_admin_users" : "{oozie_user}, oozie-admin,falcon",
            "oozie_data_dir" : "/hadoop/oozie/data",
            "oozie_database" : "New Derby Database",
            "oozie_heapsize" : "1024m",
            "oozie_log_dir" : "/var/log/oozie",
            "oozie_permsize" : "512m",
            "oozie_pid_dir" : "/var/run/oozie",
            "oozie_tmp_dir" : "/var/tmp/oozie",
            "oozie_user" : "oozie",
            "oozie_user_nofile_limit" : "32000",
            "oozie_user_nproc_limit" : "16000"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "oozie-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. See accompanying LICENSE file.\n#\n\n# If the Java System property 'oozie.log.dir' is not defined at Oozie start up time\n# XLogService sets its value to '${oozie.home}/logs'\n\n# The appender that Oozie uses must be named 'oozie' (i.e. log4j.appender.oozie)\n\n# Using the RollingFileAppender with the OozieRollingPolicy will roll the log file every hour and retain up to MaxHistory number of\n# log files. If FileNamePattern ends with \".gz\" it will create gzip files.\nlog4j.appender.oozie=org.apache.log4j.rolling.RollingFileAppender\nlog4j.appender.oozie.RollingPolicy=org.apache.oozie.util.OozieRollingPolicy\nlog4j.appender.oozie.File=${oozie.log.dir}/oozie.log\nlog4j.appender.oozie.Append=true\nlog4j.appender.oozie.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozie.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n\n# The FileNamePattern must end with \"-%d{yyyy-MM-dd-HH}.gz\" or \"-%d{yyyy-MM-dd-HH}\" and also start with the\n# value of log4j.appender.oozie.File\nlog4j.appender.oozie.RollingPolicy.FileNamePattern=${log4j.appender.oozie.File}-%d{yyyy-MM-dd-HH}\n# The MaxHistory controls how many log files will be retained (720 hours / 24 hours per day = 30 days); -1 to disable\nlog4j.appender.oozie.RollingPolicy.MaxHistory=720\n\n\n\nlog4j.appender.oozieError=org.apache.log4j.rolling.RollingFileAppender\nlog4j.appender.oozieError.RollingPolicy=org.apache.oozie.util.OozieRollingPolicy\nlog4j.appender.oozieError.File=${oozie.log.dir}/oozie-error.log\nlog4j.appender.oozieError.Append=true\nlog4j.appender.oozieError.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieError.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n\n# The FileNamePattern must end with \"-%d{yyyy-MM-dd-HH}.gz\" or \"-%d{yyyy-MM-dd-HH}\" and also start with the\n# value of log4j.appender.oozieError.File\nlog4j.appender.oozieError.RollingPolicy.FileNamePattern=${log4j.appender.oozieError.File}-%d{yyyy-MM-dd-HH}\n# The MaxHistory controls how many log files will be retained (720 hours / 24 hours per day = 30 days); -1 to disable\nlog4j.appender.oozieError.RollingPolicy.MaxHistory=720\nlog4j.appender.oozieError.filter.1 = org.apache.log4j.varia.LevelMatchFilter\nlog4j.appender.oozieError.filter.1.levelToMatch = WARN\nlog4j.appender.oozieError.filter.2 = org.apache.log4j.varia.LevelMatchFilter\nlog4j.appender.oozieError.filter.2.levelToMatch = ERROR\nlog4j.appender.oozieError.filter.3 = org.apache.log4j.varia.LevelMatchFilter\nlog4j.appender.oozieError.filter.3.levelToMatch = FATAL\nlog4j.appender.oozieError.filter.4 = org.apache.log4j.varia.DenyAllFilter\n\n\n\n# Uncomment the below two lines to use the DailyRollingFileAppender instead\n# The DatePattern must end with either \"dd\" or \"HH\"\n#log4j.appender.oozie=org.apache.log4j.DailyRollingFileAppender\n#log4j.appender.oozie.DatePattern='.'yyyy-MM-dd-HH\n\nlog4j.appender.oozieops=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieops.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieops.File=${oozie.log.dir}/oozie-ops.log\nlog4j.appender.oozieops.Append=true\nlog4j.appender.oozieops.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieops.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieinstrumentation=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieinstrumentation.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieinstrumentation.File=${oozie.log.dir}/oozie-instrumentation.log\nlog4j.appender.oozieinstrumentation.Append=true\nlog4j.appender.oozieinstrumentation.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieinstrumentation.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieaudit=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieaudit.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieaudit.File=${oozie.log.dir}/oozie-audit.log\nlog4j.appender.oozieaudit.Append=true\nlog4j.appender.oozieaudit.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieaudit.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.openjpa=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.openjpa.DatePattern='.'yyyy-MM-dd\nlog4j.appender.openjpa.File=${oozie.log.dir}/oozie-jpa.log\nlog4j.appender.openjpa.Append=true\nlog4j.appender.openjpa.layout=org.apache.log4j.PatternLayout\nlog4j.appender.openjpa.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.logger.openjpa=INFO, openjpa\nlog4j.logger.oozieops=INFO, oozieops\nlog4j.logger.oozieinstrumentation=ALL, oozieinstrumentation\nlog4j.logger.oozieaudit=ALL, oozieaudit\nlog4j.logger.org.apache.oozie=INFO, oozie, oozieError\nlog4j.logger.org.apache.hadoop=WARN, oozie\nlog4j.logger.org.mortbay=WARN, oozie\nlog4j.logger.org.hsqldb=WARN, oozie\nlog4j.logger.org.apache.hadoop.security.authentication.server=WARN, oozie"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "oozie-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "oozie.action.retry.interval" : "30",
            "oozie.authentication.kerberos.name.rules" : " ",
            "oozie.authentication.simple.anonymous.allowed" : "true",
            "oozie.authentication.type" : "simple",
            "oozie.base.url" : "http://sandbox.hortonworks.com:11000/oozie",
            "oozie.credentials.credentialclasses" : "hcat=org.apache.oozie.action.hadoop.HCatCredentials,hive2=org.apache.oozie.action.hadoop.Hive2Credentials",
            "oozie.db.schema.name" : "oozie",
            "oozie.service.AuthorizationService.authorization.enabled" : "true",
            "oozie.service.AuthorizationService.security.enabled" : "true",
            "oozie.service.ELService.ext.functions.coord-action-create" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_currentWeek,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_lastWeek,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-action-create-inst" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now_inst,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today_inst,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday_inst,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_currentWeek_inst,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_lastWeek_inst,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth_inst,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth_inst,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear_inst,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear_inst,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_formatTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-action-start" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph2_now,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph2_today,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph2_yesterday,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_currentWeek,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph2_lastWeek,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_currentMonth,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph2_lastMonth,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph2_currentYear,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph2_lastYear,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph3_coord_latest,\n      future=org.apache.oozie.coord.CoordELFunctions#ph3_coord_future,\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph3_dataIn,\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_nominalTime,\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph3_coord_dateOffset,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph3_coord_formatTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-job-submit-data" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_currentWeek_echo,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_lastWeek_echo,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\n      dataIn=org.apache.oozie.extensions.OozieELExtensions#ph1_dataIn_echo,\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_wrap,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\n      dateOffset=org.apache.oozie.coord.CoordELFunctions#ph1_coord_dateOffset_echo,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-job-submit-instances" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\n      currentWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_currentWeek_echo,\n      lastWeek=org.apache.oozie.extensions.OozieELExtensions#ph1_lastWeek_echo,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo",
            "oozie.service.ELService.ext.functions.coord-sla-create" : "\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph2_coord_nominalTime,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.coord-sla-submit" : "\n      instanceTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_nominalTime_echo_fixed,\n      user=org.apache.oozie.coord.CoordELFunctions#coord_user",
            "oozie.service.ELService.ext.functions.workflow" : "\n      now=org.apache.oozie.extensions.OozieELExtensions#ph1_now_echo,\n      today=org.apache.oozie.extensions.OozieELExtensions#ph1_today_echo,\n      yesterday=org.apache.oozie.extensions.OozieELExtensions#ph1_yesterday_echo,\n      currentMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_currentMonth_echo,\n      lastMonth=org.apache.oozie.extensions.OozieELExtensions#ph1_lastMonth_echo,\n      currentYear=org.apache.oozie.extensions.OozieELExtensions#ph1_currentYear_echo,\n      lastYear=org.apache.oozie.extensions.OozieELExtensions#ph1_lastYear_echo,\n      formatTime=org.apache.oozie.coord.CoordELFunctions#ph1_coord_formatTime_echo,\n      latest=org.apache.oozie.coord.CoordELFunctions#ph2_coord_latest_echo,\n      future=org.apache.oozie.coord.CoordELFunctions#ph2_coord_future_echo",
            "oozie.service.HadoopAccessorService.hadoop.configurations" : "*=/etc/hadoop/conf",
            "oozie.service.HadoopAccessorService.kerberos.enabled" : "false",
            "oozie.service.HadoopAccessorService.supported.filesystems" : "*",
            "oozie.service.JPAService.jdbc.driver" : "org.apache.derby.jdbc.EmbeddedDriver",
            "oozie.service.JPAService.jdbc.password" : "SECRET:oozie-site:2:oozie.service.JPAService.jdbc.password",
            "oozie.service.JPAService.jdbc.url" : "jdbc:derby:${oozie.data.dir}/${oozie.db.schema.name}-db;create=true",
            "oozie.service.JPAService.jdbc.username" : "oozie",
            "oozie.service.ProxyUserService.proxyuser.falcon.groups" : "*",
            "oozie.service.ProxyUserService.proxyuser.falcon.hosts" : "*",
            "oozie.service.ProxyUserService.proxyuser.hue.groups" : "*",
            "oozie.service.ProxyUserService.proxyuser.hue.hosts" : "*",
            "oozie.service.SparkConfigurationService.spark.configurations" : "*=spark-conf",
            "oozie.service.URIHandlerService.uri.handlers" : "org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler",
            "oozie.services.ext" : "org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380378496,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "OOZIE",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=PIG&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "pig-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\nJAVA_HOME={{java64_home}}\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\nif [ -d \"/usr/lib/tez\" ]; then\n  PIG_OPTS=\"$PIG_OPTS -Dmapreduce.framework.name=yarn\"\nfi"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "pig-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n# ***** Set root logger level to DEBUG and its only appender to A.\nlog4j.logger.org.apache.pig=info, A\n\n# ***** A is set to be a ConsoleAppender.\nlog4j.appender.A=org.apache.log4j.ConsoleAppender\n# ***** A uses PatternLayout.\nlog4j.appender.A.layout=org.apache.log4j.PatternLayout\nlog4j.appender.A.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "pig-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Pig configuration file. All values can be overwritten by command line\n# arguments; for a description of the properties, run\n#\n#     pig -h properties\n#\n\n############################################################################\n#\n# == Logging properties\n#\n\n# Location of pig log file. If blank, a file with a timestamped slug\n# ('pig_1399336559369.log') will be generated in the current working directory.\n#\n# pig.logfile=\n# pig.logfile=/tmp/pig-err.log\n\n# Log4j configuration file. Set at runtime with the -4 parameter. The source\n# distribution has a ./conf/log4j.properties.template file you can rename and\n# customize.\n#\n# log4jconf=./conf/log4j.properties\n\n# Verbose Output.\n# * false (default): print only INFO and above to screen\n# * true: Print all log messages to screen\n#\n# verbose=false\n\n# Omit timestamps on log messages. (default: false)\n#\n# brief=false\n\n# Logging level. debug=OFF|ERROR|WARN|INFO|DEBUG (default: INFO)\n#\n# debug=INFO\n\n# Roll up warnings across tasks, so that when millions of mappers suddenly cry\n# out in error they are partially silenced. (default, recommended: true)\n#\n# aggregate.warning=true\n\n# Should DESCRIBE pretty-print its schema?\n# * false (default): print on a single-line, suitable for pasting back in to your script\n# * true (recommended): prints on multiple lines with indentation, much more readable\n#\n# pig.pretty.print.schema=false\n\n# === Profiling UDFs  ===\n\n# Turn on UDF timers? This will cause two counters to be\n# tracked for every UDF and LoadFunc in your script: approx_microsecs measures\n# approximate time spent inside a UDF approx_invocations reports the approximate\n# number of times the UDF was invoked.\n#\n# * false (default): do not record timing information of UDFs.\n# * true: report UDF performance. Uses more counters, but gives more insight\n#   into script operation\n#\n# pig.udf.profile=false\n\n# Specify frequency of profiling (default: every 100th).\n# pig.udf.profile.frequency=100\n\n############################################################################\n#\n# == Site-specific Properties\n#\n\n# Execution Mode. Local mode is much faster, but only suitable for small amounts\n# of data. Local mode interprets paths on the local file system; Mapreduce mode\n# on the HDFS. Read more under 'Execution Modes' within the Getting Started\n# documentation.\n#\n# * mapreduce (default): use the Hadoop cluster defined in your Hadoop config files\n# * local: use local mode\n# * tez: use Tez on Hadoop cluster\n# * tez_local: use Tez local mode\n#\n# exectype=mapreduce\n\n# Bootstrap file with default statements to execute in every Pig job, similar to\n# .bashrc.  If blank, uses the file '.pigbootup' from your home directory; If a\n# value is supplied, that file is NOT loaded.  This does not do tilde expansion\n# -- you must supply the full path to the file.\n#\n# pig.load.default.statements=\n# pig.load.default.statements=/home/bob/.pigrc\n\n# Kill all waiting/running MR jobs upon a MR job failure? (default: false) If\n# false, jobs that can proceed independently will do so unless a parent stage\n# fails. If true, the failure of any stage in the script kills all jobs.\n#\n# stop.on.failure=false\n\n# File containing the pig script to run. Rarely set in the properties file.\n# Commandline: -f\n#\n# file=\n\n# Jarfile to load, colon separated. Rarely used.\n#\n# jar=\n\n# Register additional .jar files to use with your Pig script.\n# Most typically used as a command line option (see http://pig.apache.org/docs/r0.12.0/basic.html#register):\n#\n#     pig -Dpig.additional.jars=hdfs://nn.mydomain.com:9020/myjars/my.jar\n#\n# pig.additional.jars=<colon separated list of jars with optional wildcards>\n# pig.additional.jars=/usr/local/share/pig/pig/contrib/piggybank/java/piggybank.jar:/usr/local/share/pig/datafu/datafu-pig/build/libs/datafu-pig-1.2.1.jar\n\n# Specify potential packages to which a UDF or a group of UDFs belong,\n# eliminating the need to qualify the UDF on every call. See\n# http://pig.apache.org/docs/r0.12.0/udf.html#use-short-names\n#\n# Commandline use:\n#\n#     pig \\\n#       -Dpig.additional.jars=$PIG_HOME/contrib/piggybank/java/piggybank.jar:$PIG_HOME/../datafu/datafu-pig/build/libs/datafu-pig-1.2.1.jar \\\n#       -Dudf.import.list=org.apache.pig.piggybank.evaluation:datafu.pig.util \\\n#       happy_job.pig\n#\n# udf.import.list=<colon separated list of imports>\n# udf.import.list=org.apache.pig.piggybank.evaluation:datafu.pig.bags:datafu.pig.hash:datafu.pig.stats:datafu.pig.util\n\n#\n# Reuse jars across jobs run by the same user? (default: false) If enabled, jars\n# are placed in ${pig.user.cache.location}/${user.name}/.pigcache. Since most\n# jars change infrequently, this gives a minor speedup.\n#\n# pig.user.cache.enabled=false\n\n# Base path for storing jars cached by the pig.user.cache.enabled feature. (default: /tmp)\n#\n# pig.user.cache.location=/tmp\n\n# Replication factor for cached jars. If not specified mapred.submit.replication\n# is used, whose default is 10.\n#\n# pig.user.cache.replication=10\n\n# Default UTC offset. (default: the host's current UTC offset) Supply a UTC\n# offset in Java's timezone format: e.g., +08:00.\n#\n# pig.datetime.default.tz=\n\n############################################################################\n#\n# Memory impacting properties\n#\n\n# Amount of memory (as fraction of heap) allocated to bags before a spill is\n# forced. Default is 0.2, meaning 20% of available memory. Note that this memory\n# is shared across all large bags used by the application. See\n# http://pig.apache.org/docs/r0.12.0/perf.html#memory-management\n#\n# pig.cachedbag.memusage=0.2\n\n# Don't spill bags smaller than this size (bytes). Default: 5000000, or about\n# 5MB. Usually, the more spilling the longer runtime, so you might want to tune\n# it according to heap size of each task and so forth.\n#\n# pig.spill.size.threshold=5000000\n\n# EXPERIMENTAL: If a file bigger than this size (bytes) is spilled -- thus\n# freeing a bunch of ram -- tell the JVM to perform garbage collection.  This\n# should help reduce the number of files being spilled, but causes more-frequent\n# garbage collection. Default: 40000000 (about 40 MB)\n#\n# pig.spill.gc.activation.size=40000000\n\n# Maximum amount of data to replicate using the distributed cache when doing\n# fragment-replicated join. (default: 1000000000, about 1GB) Consider increasing\n# this in a production environment, but carefully.\n#\n# pig.join.replicated.max.bytes=1000000000\n\n# Fraction of heap available for the reducer to perform a skewed join. A low\n# fraction forces Pig to use more reducers, but increases the copying cost. See\n# http://pig.apache.org/docs/r0.12.0/perf.html#skewed-joins\n#\n# pig.skewedjoin.reduce.memusage=0.3\n\n#\n# === SchemaTuple ===\n#\n# The SchemaTuple feature (PIG-2632) uses a tuple's schema (when known) to\n# generate a custom Java class to hold records. Otherwise, tuples are loaded as\n# a plain list that is unaware of its contents' schema -- and so each element\n# has to be wrapped as a Java object on its own. This can provide more efficient\n# CPU utilization, serialization, and most of all memory usage.\n#\n# This feature is considered experimental and is off by default. You can\n# selectively enable it for specific operations using pig.schematuple.udf,\n# pig.schematuple.load, pig.schematuple.fr_join and pig.schematuple.merge_join\n#\n\n# Enable the SchemaTuple optimization in all available cases? (default: false; recommended: true)\n#\n# pig.schematuple=false\n\n# EXPERIMENTAL: Use SchemaTuples with UDFs (default: value of pig.schematuple).\n# pig.schematuple.udf=false\n\n# EXPERIMENTAL, CURRENTLY NOT IMPLEMENTED, but in the future, LoadFunc's with\n# known schemas should output SchemaTuples. (default: value of pig.schematuple)\n# pig.schematuple.load=false\n\n# EXPERIMENTAL: Use SchemaTuples in replicated joins. The potential memory\n# saving here is significant. (default: value of pig.schematuple)\n# pig.schematuple.fr_join=false\n\n# EXPERIMENTAL: Use SchemaTuples in merge joins. (default: value of pig.schematuple).\n# pig.schematuple.merge_join=false\n\n############################################################################\n#\n# Serialization options\n#\n\n# Omit empty part files from the output? (default: false)\n#\n# * false (default): reducers generates an output file, even if output is empty\n# * true (recommended): do not generate zero-byte part files\n#\n# The default behavior of MapReduce is to generate an empty file for no data, so\n# Pig follows that. But many small files can cause annoying extra map tasks and\n# put load on the HDFS, so consider setting this to 'true'\n#\n# pig.output.lazy=false\n\n#\n# === Tempfile Handling\n#\n\n# EXPERIMENTAL: Storage format for temporary files generated by intermediate\n# stages of Pig jobs. This can provide significant speed increases for certain\n# codecs, as reducing the amount of data transferred to and from disk can more\n# than make up for the cost of compression/compression. Recommend that you set\n# up LZO compression in Hadoop and specify tfile storage.\n#\n# Compress temporary files?\n# * false (default): do not compress\n# * true (recommended): compress temporary files.\n#\n# pig.tmpfilecompression=false\n# pig.tmpfilecompression=true\n\n# Tempfile storage container type.\n#\n# * tfile (default, recommended): more efficient, but only supports supports gz(gzip) and lzo compression.\n#   https://issues.apache.org/jira/secure/attachment/12396286/TFile%20Specification%2020081217.pdf\n# * seqfile: only supports gz(gzip), lzo, snappy, and bzip2 compression\n#\n# pig.tmpfilecompression.storage=tfile\n\n# Codec types for intermediate job files. tfile supports gz(gzip) and lzo;\n# seqfile support gz(gzip), lzo, snappy, bzip2\n#\n# * lzo (recommended with caveats): moderate compression, low cpu burden;\n#   typically leads to a noticeable speedup. Best default choice, but you must\n#   set up LZO independently due to license incompatibility\n# * snappy: moderate compression, low cpu burden; typically leads to a noticeable speedup..\n# * gz (default): higher compression, high CPU burden. Typically leads to a noticeable slowdown.\n# * bzip2: most compression, major CPU burden. Typically leads to a noticeable slowdown.\n#\n# pig.tmpfilecompression.codec=gzip\n\n#\n# === Split Combining\n#\n\n#\n# Should pig try to combine small files for fewer map tasks? This improves the\n# efficiency of jobs with many small input files, reduces the overhead on the\n# jobtracker, and reduces the number of output files a map-only job\n# produces. However, it only works with certain loaders and increases non-local\n# map tasks. See http://pig.apache.org/docs/r0.12.0/perf.html#combine-files\n#\n# * false (default, recommended): _do_ combine files\n# * true: do not combine files\n#\n# pig.noSplitCombination=false\n\n#\n# Size, in bytes, of data to be processed by a single map. Smaller files are\n# combined untill this size is reached. If unset, defaults to the file system's\n# default block size.\n#\n# pig.maxCombinedSplitSize=\n\n# ###########################################################################\n#\n# Execution options\n#\n\n# Should pig omit combiners? (default, recommended: false -- meaning pig _will_\n# use combiners)\n#\n# When combiners work well, they eliminate a significant amount of\n# data. However, if they do not eliminate much data -- say, a DISTINCT operation\n# that only eliminates 5% of the records -- they add a noticeable overhead to\n# the job. So the recommended default is false (use combiners), selectively\n# disabling them per-job:\n#\n#     pig -Dpig.exec.nocombiner=true distinct_but_not_too_much.pig\n#\n# pig.exec.nocombiner=false\n\n# EXPERIMENTAL: Aggregate records in map task before sending to the combiner?\n# (default: false, 10; recommended: true, 10). In cases where there is a massive\n# reduction of data in the aggregation step, pig can do a first pass of\n# aggregation before the data even leaves the mapper, saving much serialization\n# overhead. It's off by default but can give a major improvement to\n# group-and-aggregate operations. Pig skips partial aggregation unless reduction\n# is better than a factor of minReduction (default: 10). See\n# http://pig.apache.org/docs/r0.12.0/perf.html#hash-based-aggregation\n#\n# pig.exec.mapPartAgg=false\n# pig.exec.mapPartAgg.minReduction=10\n\n#\n# === Control how many reducers are used.\n#\n\n# Estimate number of reducers naively using a fixed amount of data per\n# reducer. Optimally, you have both fewer reducers than available reduce slots,\n# and reducers that are neither getting too little data (less than a half-GB or\n# so) nor too much data (more than 2-3 times the reducer child process max heap\n# size). The default of 1000000000 (about 1GB) is probably low for a production\n# cluster -- however it's much worse to set this too high (reducers spill many\n# times over in group-sort) than too low (delay waiting for reduce slots).\n#\n# pig.exec.reducers.bytes.per.reducer=1000000000\n\n#\n# Don't ever use more than this many reducers. (default: 999)\n#\n# pig.exec.reducers.max=999\n\n#\n# === Local mode for small jobs\n#\n\n# EXPERIMENTAL: Use local mode for small jobs? If true, jobs with input data\n# size smaller than pig.auto.local.input.maxbytes bytes and one or no reducers\n# are run in local mode, which is much faster. Note that file paths are still\n# interpreted as pig.exectype implies.\n#\n# * true (recommended): allow local mode for small jobs, which is much faster.\n# * false (default): always use pig.exectype.\n#\n# pig.auto.local.enabled=false\n\n#\n# Definition of a small job for the pig.auto.local.enabled feature. Only jobs\n# with less than this may bytes are candidates to run locally (default:\n# 100000000 bytes, about 1GB)\n#\n# pig.auto.local.input.maxbytes=100000000\n\n############################################################################\n#\n# Security Features\n#\n\n# Comma-delimited list of commands/operators that are disallowed. This security\n# feature can be used by administrators to block use of certain commands by\n# users.\n#\n# * <blank> (default): all commands and operators are allowed.\n# * fs,set (for example): block all filesystem commands and config changes from pig scripts.\n#\n# pig.blacklist=\n# pig.blacklist=fs,set\n\n# Comma-delimited list of the only commands/operators that are allowed. This\n# security feature can be used by administrators to block use of certain\n# commands by users.\n#\n# * <blank> (default): all commands and operators not on the pig.blacklist are allowed.\n# * load,store,filter,group: only LOAD, STORE, FILTER, GROUP\n#   from pig scripts. All other commands and operators will fail.\n#\n# pig.whitelist=\n# pig.whitelist=load,store,filter,group\n\n#####################################################################\n#\n# Advanced Site-specific Customizations\n#\n\n# Remove intermediate output files?\n#\n# * true (default, recommended): remove the files\n# * false: do NOT remove the files. You must clean them up yourself.\n#\n# Keeping them is useful for advanced debugging, but can be dangerous -- you\n# must clean them up yourself.  Inspect the intermediate outputs with\n#\n#     LOAD '/path/to/tmp/file' USING org.apache.pig.impl.io.TFileStorage();\n#\n# (Or ...SequenceFileInterStorage if pig.tmpfilecompression.storage is seqfile)\n#\n# pig.delete.temp.files=true\n\n# EXPERIMENTAL: A Pig Progress Notification Listener (PPNL) lets you wire pig's\n# progress into your visibility stack. To use a PPNL, supply the fully qualified\n# class name of a PPNL implementation. Note that only one PPNL can be set up, so\n# if you need several, write a PPNL that will chain them.\n#\n# See https://github.com/twitter/ambrose for a pretty awesome one of these\n#\n# pig.notification.listener=<fully qualified class name of a PPNL implementation>\n\n# String argument to pass to your PPNL constructor (optional). Only a single\n# string value is allowed. (default none)\n#\n# pig.notification.listener.arg=<somevalue>\n\n# EXPERIMENTAL: Class invoked to estimate the number of reducers to use.\n# (default: org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.InputSizeReducerEstimator)\n#\n# If you don't know how or why to write a PigReducerEstimator, you're unlikely\n# to use this. By default, the naive mapReduceLayer.InputSizeReducerEstimator is\n# used, but you can specify anything implementing the interface\n# org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigReducerEstimator\n#\n# pig.exec.reducer.estimator=<fully qualified class name of a PigReducerEstimator implementation>\n\n# Optional String argument to pass to your PigReducerEstimator. (default: none;\n# a single String argument is allowed).\n#\n# pig.exec.reducer.estimator.arg=<somevalue>\n\n# Class invoked to report the size of reducers output. By default, the reducers'\n# output is computed as the total size of output files. But not every storage is\n# file-based, and so this logic can be replaced by implementing the interface\n# org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigStatsOutputSizeReader\n# If you need to register more than one reader, you can register them as a comma\n# separated list. Every reader implements a boolean supports(POStore sto) method.\n# When there are more than one reader, they are consulted in order, and the\n# first one whose supports() method returns true will be used.\n#\n# pig.stats.output.size.reader=<fully qualified class name of a PigStatsOutputSizeReader implementation>\n# pig.stats.output.size.reader.unsupported=<comma separated list of StoreFuncs that are not supported by this reader>\n\n# By default, Pig retrieves TaskReports for every launched task to compute\n# various job statistics. But this can cause OOM if the number of tasks is\n# large. In such case, you can disable it by setting this property to true.\n# pig.stats.notaskreport=false\n\n#\n# Override hadoop configs programatically\n#\n# By default, Pig expects hadoop configs (hadoop-site.xml and core-site.xml)\n# to be present on the classpath. There are cases when these configs are\n# needed to be passed programatically, such as while using the PigServer API.\n# In such cases, you can override hadoop configs by setting the property\n# \"pig.use.overriden.hadoop.configs\".\n#\n# When this property is set to true, Pig ignores looking for hadoop configs\n# in the classpath and instead picks it up from Properties/Configuration\n# object passed to it.\n#\n# pig.use.overriden.hadoop.configs=false\n\n# Implied LoadFunc for the LOAD operation when no USING clause is\n# present. Supply the fully qualified class name of a LoadFunc\n# implementation. Note: setting this means you will have to modify most code\n# brought in from elsewhere on the web, as people generally omit the USING\n# clause for TSV files.\n#\n# * org.apache.pig.builtin.PigStorage (default): the traditional tab-separated-values LoadFunc\n# * my.custom.udfcollection.MyCustomLoadFunc (for example): use MyCustomLoadFunc instead\n#\n# pig.default.load.func=<fully qualified class name of a LoadFunc implementation>\n\n# The implied StoreFunc for STORE operations with no USING clause. Supply the\n# fully qualified class name of a StoreFunc implementation.\n#\n# * org.apache.pig.builtin.PigStorage (default): the traditional tab-separated-values StoreFunc.\n# * my.custom.udfcollection.MyCustomStoreFunc (for example): use MyCustomStoreFunc instead\n#\n# pig.default.store.func=<fully qualified class name of a StoreFunc implementation>\n\n# Recover jobs when the application master is restarted? (default: false). This\n# is a Hadoop 2 specific property; enable it to take advantage of AM recovery.\n#\n# pig.output.committer.recovery.support=true\n\n# Should scripts check to prevent multiple stores writing to the same location?\n# (default: false) When set to true, stops the execution of script right away.\n#\npig.location.check.strict=false\n\n# In addition to the fs-style commands (rm, ls, etc) Pig can now execute\n# SQL-style DDL commands, eg \"sql create table pig_test(name string, age int)\".\n# The only implemented backend is hcat, and luckily that's also the default.\n#\n# pig.sql.type=hcat\n\n# Path to the hcat executable, for use with pig.sql.type=hcat (default: null)\n#\nhcat.bin=/usr/local/hcat/bin/hcat\n\n###########################################################################\n#\n# Overrides for extreme environments\n#\n# (Most people won't have to adjust these parameters)\n#\n\n\n# Limit the pig script length placed in the jobconf xml. (default:10240)\n# Extremely long queries can waste space in the JobConf; since its contents are\n# only advisory, the default is fine unless you are retaining it for forensics.\n#\n# pig.script.max.size=10240\n\n# Disable use of counters by Pig. Note that the word 'counter' is singular here.\n#\n# * false (default, recommended): do NOT disable counters.\n# * true: disable counters. Set this to true only when your Pig job will\n#   otherwise die because of using more counters than hadoop configured limit\n#\n# pig.disable.counter=true\n\n# Sample size (per-mapper, in number of rows) the ORDER..BY operation's\n# RandomSampleLoader uses to estimate how your data should be\n# partitioned. (default, recommended: 100 rows per task) Increase this if you\n# have exceptionally large input splits and are unhappy with the reducer skew.\n#\n# pig.random.sampler.sample.size=100\n\n# Process an entire script at once, reducing the amount of work and number of\n# tasks? (default, recommended: true) See http://pig.apache.org/docs/r0.12.0/perf.html#multi-query-execution\n#\n# MultiQuery optimization is very useful, and so the recommended default is\n# true. You may find a that a script fails to compile under MultiQuery. If so,\n# disable it at runtime:\n#\n#     pig -no_multiquery script_that_makes_pig_sad.pig\n#\n# opt.multiquery=true\n\n# For small queries, fetch data directly from the HDFS. (default, recommended:\n# true). If you want to force Pig to launch a MR job, for example when you're\n# testing a live cluster, disable with the -N option. See PIG-3642.\n#\n# opt.fetch=true\n\n# Enable auto/grace parallelism in tez. These should be used by default unless\n# you encounter some bug in automatic parallelism. If pig.tez.auto.parallelism\n# to false, use 1 as default parallelism\npig.tez.auto.parallelism=true\npig.tez.grace.parallelism=true\n\n###########################################################################\n#\n# Streaming properties\n#\n\n# Define what properties will be set in the streaming environment. Just set this\n# property to a comma-delimited list of properties to set, and those properties\n# will be set in the environment.\n#\n# pig.streaming.environment=<comma-delimited list of propertes>\n\n# Specify a comma-delimited list of local files to ship to distributed cache for\n# streaming job.\n#\n# pig.streaming.ship.files=<comma-delimited list of local files>\n\n# Specify a comma-delimited list of remote files to cache on distributed cache\n# for streaming job.\n#\n# pig.streaming.cache.files=<comma-delimited list of remote files>\n\n# Specify the python command to be used for python streaming udf. By default,\n# python is used, but you can overwrite it with a non-default version such as\n# python2.7.\n#\n# pig.streaming.udf.python.command=python",
            "pig.tez.override.am.memory" : "false"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380369438,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "PIG",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=RANGER&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "tagsync-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nlog4j.rootLogger = info,logFile\n\n# logFile\nlog4j.appender.logFile=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.logFile.file=${logdir}/tagsync.log\nlog4j.appender.logFile.datePattern='.'yyyy-MM-dd\nlog4j.appender.logFile.layout=org.apache.log4j.PatternLayout\nlog4j.appender.logFile.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %L %m%n\n\n# console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target=System.out\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %L %m%n"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "usersync-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nlog4j.rootLogger = info,logFile\n\n# logFile\nlog4j.appender.logFile=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.logFile.file=${logdir}/usersync.log\nlog4j.appender.logFile.datePattern='.'yyyy-MM-dd\nlog4j.appender.logFile.layout=org.apache.log4j.PatternLayout\nlog4j.appender.logFile.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %m%n\n\n# console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target=System.out\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %m%n"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : { },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "tagsync-application-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "atlas.kafka.bootstrap.servers" : "sandbox.hortonworks.com:6667",
            "atlas.kafka.entities.group.id" : "ranger_entities_consumer",
            "atlas.kafka.zookeeper.connect" : "sandbox.hortonworks.com:2181"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-ugsync-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.usersync.credstore.filename" : "/usr/hdp/current/ranger-usersync/conf/ugsync.jceks",
            "ranger.usersync.enabled" : "true",
            "ranger.usersync.filesource.file" : "/tmp/usergroup.txt",
            "ranger.usersync.filesource.text.delimiter" : ",",
            "ranger.usersync.group.memberattributename" : "",
            "ranger.usersync.group.nameattribute" : "",
            "ranger.usersync.group.objectclass" : "",
            "ranger.usersync.group.search.first.enabled" : "false",
            "ranger.usersync.group.searchbase" : "",
            "ranger.usersync.group.searchenabled" : "false",
            "ranger.usersync.group.searchfilter" : "",
            "ranger.usersync.group.searchscope" : "",
            "ranger.usersync.group.usermapsyncenabled" : "true",
            "ranger.usersync.kerberos.keytab" : "",
            "ranger.usersync.kerberos.principal" : "",
            "ranger.usersync.keystore.file" : "/usr/hdp/current/ranger-usersync/conf/unixauthservice.jks",
            "ranger.usersync.keystore.password" : "SECRET:ranger-ugsync-site:1:ranger.usersync.keystore.password",
            "ranger.usersync.ldap.bindalias" : "testldapalias",
            "ranger.usersync.ldap.binddn" : "",
            "ranger.usersync.ldap.bindkeystore" : "",
            "ranger.usersync.ldap.groupname.caseconversion" : "none",
            "ranger.usersync.ldap.ldapbindpassword" : "",
            "ranger.usersync.ldap.referral" : "ignore",
            "ranger.usersync.ldap.searchBase" : "dc=hadoop,dc=apache,dc=org",
            "ranger.usersync.ldap.url" : "",
            "ranger.usersync.ldap.user.groupnameattribute" : "memberof, ismemberof",
            "ranger.usersync.ldap.user.nameattribute" : "",
            "ranger.usersync.ldap.user.objectclass" : "person",
            "ranger.usersync.ldap.user.searchbase" : "",
            "ranger.usersync.ldap.user.searchfilter" : "",
            "ranger.usersync.ldap.user.searchscope" : "sub",
            "ranger.usersync.ldap.username.caseconversion" : "none",
            "ranger.usersync.logdir" : "{{usersync_log_dir}}",
            "ranger.usersync.pagedresultsenabled" : "true",
            "ranger.usersync.pagedresultssize" : "500",
            "ranger.usersync.passwordvalidator.path" : "./native/credValidator.uexe",
            "ranger.usersync.policymanager.baseURL" : "{{ranger_external_url}}",
            "ranger.usersync.policymanager.maxrecordsperapicall" : "1000",
            "ranger.usersync.policymanager.mockrun" : "false",
            "ranger.usersync.policymgr.alias" : "ranger.usersync.policymgr.password",
            "ranger.usersync.policymgr.keystore" : "/usr/hdp/current/ranger-usersync/conf/ugsync.jceks",
            "ranger.usersync.policymgr.username" : "rangerusersync",
            "ranger.usersync.port" : "5151",
            "ranger.usersync.sink.impl.class" : "org.apache.ranger.unixusersync.process.PolicyMgrUserGroupBuilder",
            "ranger.usersync.sleeptimeinmillisbetweensynccycle" : "60000",
            "ranger.usersync.source.impl.class" : "org.apache.ranger.unixusersync.process.UnixUserGroupBuilder",
            "ranger.usersync.ssl" : "true",
            "ranger.usersync.truststore.file" : "/usr/hdp/current/ranger-usersync/conf/mytruststore.jks",
            "ranger.usersync.truststore.password" : "SECRET:ranger-ugsync-site:1:ranger.usersync.truststore.password",
            "ranger.usersync.unix.group.file" : "/etc/group",
            "ranger.usersync.unix.minUserId" : "500",
            "ranger.usersync.unix.password.file" : "/etc/passwd",
            "ranger.usersync.user.searchenabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "admin-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nlog4j.rootLogger = warn,xa_log_appender\n\n\n# xa_logger\nlog4j.appender.xa_log_appender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.xa_log_appender.file=${logdir}/xa_portal.log\nlog4j.appender.xa_log_appender.datePattern='.'yyyy-MM-dd\nlog4j.appender.xa_log_appender.append=true\nlog4j.appender.xa_log_appender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.xa_log_appender.layout.ConversionPattern=%d [%t] %-5p %C{6} (%F:%L) - %m%n\n# xa_log_appender : category and additivity\nlog4j.category.org.springframework=warn,xa_log_appender\nlog4j.additivity.org.springframework=false\n\nlog4j.category.org.apache.ranger=info,xa_log_appender\nlog4j.additivity.org.apache.ranger=false\n\nlog4j.category.xa=info,xa_log_appender\nlog4j.additivity.xa=false\n\n# perf_logger\nlog4j.appender.perf_appender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.perf_appender.file=${logdir}/ranger_admin_perf.log\nlog4j.appender.perf_appender.datePattern='.'yyyy-MM-dd\nlog4j.appender.perf_appender.append=true\nlog4j.appender.perf_appender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.perf_appender.layout.ConversionPattern=%d [%t] %m%n\n\n\n# sql_appender\nlog4j.appender.sql_appender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.sql_appender.file=${logdir}/xa_portal_sql.log\nlog4j.appender.sql_appender.datePattern='.'yyyy-MM-dd\nlog4j.appender.sql_appender.append=true\nlog4j.appender.sql_appender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.sql_appender.layout.ConversionPattern=%d [%t] %-5p %C{6} (%F:%L) - %m%n\n\n# sql_appender : category and additivity\nlog4j.category.org.hibernate.SQL=warn,sql_appender\nlog4j.additivity.org.hibernate.SQL=false\n\nlog4j.category.jdbc.sqlonly=fatal,sql_appender\nlog4j.additivity.jdbc.sqlonly=false\n\nlog4j.category.jdbc.sqltiming=warn,sql_appender\nlog4j.additivity.jdbc.sqltiming=false\n\nlog4j.category.jdbc.audit=fatal,sql_appender\nlog4j.additivity.jdbc.audit=false\n\nlog4j.category.jdbc.resultset=fatal,sql_appender\nlog4j.additivity.jdbc.resultset=false\n\nlog4j.category.jdbc.connection=fatal,sql_appender\nlog4j.additivity.jdbc.connection=false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-tagsync-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.tagsync.atlas.custom.resource.mappers" : "",
            "ranger.tagsync.atlas.to.ranger.service.mapping" : "",
            "ranger.tagsync.dest.ranger.endpoint" : "{{ranger_external_url}}",
            "ranger.tagsync.dest.ranger.ssl.config.filename" : "/usr/hdp/current/ranger-tagsync/conf/mytruststore.jks",
            "ranger.tagsync.dest.ranger.username" : "rangertagsync",
            "ranger.tagsync.kerberos.keytab" : "",
            "ranger.tagsync.kerberos.principal" : "",
            "ranger.tagsync.keystore.filename" : "/usr/hdp/current/ranger-tagsync/conf/rangertagsync.jceks",
            "ranger.tagsync.logdir" : "/var/log/ranger/tagsync",
            "ranger.tagsync.source.atlas" : "true",
            "ranger.tagsync.source.atlasrest" : "false",
            "ranger.tagsync.source.atlasrest.download.interval.millis" : "",
            "ranger.tagsync.source.atlasrest.endpoint" : "http://sandbox.hortonworks.com:21000",
            "ranger.tagsync.source.atlasrest.keystore.filename" : "/usr/hdp/current/ranger-tagsync/conf/atlasuser.jceks",
            "ranger.tagsync.source.atlasrest.username" : "admin",
            "ranger.tagsync.source.file" : "false",
            "ranger.tagsync.source.file.check.interval.millis" : "",
            "ranger.tagsync.source.file.filename" : ""
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-admin-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.admin.kerberos.cookie.domain" : "",
            "ranger.admin.kerberos.cookie.path" : "/",
            "ranger.admin.kerberos.keytab" : "",
            "ranger.admin.kerberos.principal" : "",
            "ranger.admin.kerberos.token.valid.seconds" : "30",
            "ranger.audit.solr.password" : "SECRET:ranger-admin-site:1:ranger.audit.solr.password",
            "ranger.audit.solr.urls" : "NONE",
            "ranger.audit.solr.username" : "ranger_solr",
            "ranger.audit.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "ranger.audit.source.type" : "solr",
            "ranger.authentication.method" : "UNIX",
            "ranger.credential.provider.path" : "/etc/ranger/admin/rangeradmin.jceks",
            "ranger.externalurl" : "{{ranger_external_url}}",
            "ranger.https.attrib.keystore.file" : "/etc/ranger/admin/conf/ranger-admin-keystore.jks",
            "ranger.is.solr.kerberised" : "{{ranger_is_solr_kerberised}}",
            "ranger.jpa.jdbc.credential.alias" : "rangeradmin",
            "ranger.jpa.jdbc.dialect" : "{{jdbc_dialect}}",
            "ranger.jpa.jdbc.driver" : "com.mysql.jdbc.Driver",
            "ranger.jpa.jdbc.password" : "SECRET:ranger-admin-site:1:ranger.jpa.jdbc.password",
            "ranger.jpa.jdbc.url" : "jdbc:mysql://localhost:3306/ranger",
            "ranger.jpa.jdbc.user" : "{{ranger_db_user}}",
            "ranger.kms.service.user.hdfs" : "hdfs",
            "ranger.kms.service.user.hive" : "hive",
            "ranger.ldap.ad.base.dn" : "dc=example,dc=com",
            "ranger.ldap.ad.bind.dn" : "{{ranger_ug_ldap_bind_dn}}",
            "ranger.ldap.ad.bind.password" : "SECRET:ranger-admin-site:1:ranger.ldap.ad.bind.password",
            "ranger.ldap.ad.domain" : "",
            "ranger.ldap.ad.referral" : "ignore",
            "ranger.ldap.ad.url" : "{{ranger_ug_ldap_url}}",
            "ranger.ldap.ad.user.searchfilter" : "(sAMAccountName={0})",
            "ranger.ldap.base.dn" : "dc=example,dc=com",
            "ranger.ldap.bind.dn" : "{{ranger_ug_ldap_bind_dn}}",
            "ranger.ldap.bind.password" : "SECRET:ranger-admin-site:1:ranger.ldap.bind.password",
            "ranger.ldap.group.roleattribute" : "cn",
            "ranger.ldap.group.searchbase" : "{{ranger_ug_ldap_group_searchbase}}",
            "ranger.ldap.group.searchfilter" : "{{ranger_ug_ldap_group_searchfilter}}",
            "ranger.ldap.referral" : "ignore",
            "ranger.ldap.url" : "{{ranger_ug_ldap_url}}",
            "ranger.ldap.user.dnpattern" : "uid={0},ou=users,dc=xasecure,dc=net",
            "ranger.ldap.user.searchfilter" : "(uid={0})",
            "ranger.lookup.kerberos.keytab" : "",
            "ranger.lookup.kerberos.principal" : "",
            "ranger.plugins.atlas.serviceuser" : "atlas",
            "ranger.plugins.hbase.serviceuser" : "hbase",
            "ranger.plugins.hdfs.serviceuser" : "hdfs",
            "ranger.plugins.hive.serviceuser" : "hive",
            "ranger.plugins.kafka.serviceuser" : "kafka",
            "ranger.plugins.kms.serviceuser" : "kms",
            "ranger.plugins.knox.serviceuser" : "knox",
            "ranger.plugins.storm.serviceuser" : "storm",
            "ranger.plugins.yarn.serviceuser" : "yarn",
            "ranger.service.host" : "{{ranger_host}}",
            "ranger.service.http.enabled" : "true",
            "ranger.service.http.port" : "6080",
            "ranger.service.https.attrib.clientAuth" : "want",
            "ranger.service.https.attrib.keystore.keyalias" : "rangeradmin",
            "ranger.service.https.attrib.keystore.pass" : "SECRET:ranger-admin-site:1:ranger.service.https.attrib.keystore.pass",
            "ranger.service.https.attrib.ssl.enabled" : "false",
            "ranger.service.https.port" : "6182",
            "ranger.spnego.kerberos.keytab" : "",
            "ranger.spnego.kerberos.principal" : "",
            "ranger.sso.browser.useragent" : "Mozilla,chrome",
            "ranger.sso.enabled" : "false",
            "ranger.sso.providerurl" : "https://sandbox.hortonworks.com:8443/gateway/knoxsso/api/v1/websso",
            "ranger.sso.publicKey" : "",
            "ranger.truststore.file" : "/etc/ranger/admin/conf/ranger-admin-keystore.jks",
            "ranger.truststore.password" : "SECRET:ranger-admin-site:1:ranger.truststore.password",
            "ranger.unixauth.remote.login.enabled" : "true",
            "ranger.unixauth.service.hostname" : "{{ugsync_host}}",
            "ranger.unixauth.service.port" : "5151"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "admin-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "DB_FLAVOR" : "MYSQL",
            "SQL_CONNECTOR_JAR" : "/usr/share/java/mysql-connector-java.jar",
            "audit_db_name" : "ranger_audit",
            "audit_db_password" : "rangerlogger",
            "audit_db_user" : "rangerlogger",
            "db_host" : "localhost",
            "db_name" : "ranger",
            "db_password" : "SECRET:admin-properties:1:db_password",
            "db_root_password" : "SECRET:admin-properties:1:db_root_password",
            "db_root_user" : "root",
            "db_user" : "rangeradmin",
            "policymgr_external_url" : "http://%HOSTGROUP::host_group_1%:6080"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "usersync-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : { },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "admin_password" : "SECRET:ranger-env:1:admin_password",
            "admin_username" : "admin",
            "bind_anonymous" : "false",
            "create_db_dbuser" : "true",
            "is_external_solrCloud_enabled" : "false",
            "is_external_solrCloud_kerberos" : "false",
            "is_solrCloud_enabled" : "true",
            "ranger-atlas-plugin-enabled" : "Yes",
            "ranger-hbase-plugin-enabled" : "Yes",
            "ranger-hdfs-plugin-enabled" : "Yes",
            "ranger-hive-plugin-enabled" : "Yes",
            "ranger-kafka-plugin-enabled" : "No",
            "ranger-knox-plugin-enabled" : "Yes",
            "ranger-storm-plugin-enabled" : "No",
            "ranger-yarn-plugin-enabled" : "Yes",
            "ranger_admin_log_dir" : "/var/log/ranger/admin",
            "ranger_admin_password" : "SECRET:ranger-env:1:ranger_admin_password",
            "ranger_admin_username" : "amb_ranger_admin",
            "ranger_group" : "ranger",
            "ranger_pid_dir" : "/var/run/ranger",
            "ranger_privelege_user_jdbc_url" : "jdbc:mysql://localhost:3306",
            "ranger_solr_collection_name" : "ranger_audits",
            "ranger_solr_config_set" : "ranger_audits",
            "ranger_solr_replication_factor" : "1",
            "ranger_solr_shards" : "1",
            "ranger_user" : "ranger",
            "ranger_usersync_log_dir" : "/var/log/ranger/usersync",
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_1%:8020",
            "xasecure.audit.destination.solr" : "true",
            "xml_configurations_supported" : "true"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380370505,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "RANGER",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=RANGER&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "tagsync-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nlog4j.rootLogger = info,logFile\n\n# logFile\nlog4j.appender.logFile=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.logFile.file=${logdir}/tagsync.log\nlog4j.appender.logFile.datePattern='.'yyyy-MM-dd\nlog4j.appender.logFile.layout=org.apache.log4j.PatternLayout\nlog4j.appender.logFile.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %L %m%n\n\n# console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target=System.out\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %L %m%n"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "usersync-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nlog4j.rootLogger = info,logFile\n\n# logFile\nlog4j.appender.logFile=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.logFile.file=${logdir}/usersync.log\nlog4j.appender.logFile.datePattern='.'yyyy-MM-dd\nlog4j.appender.logFile.layout=org.apache.log4j.PatternLayout\nlog4j.appender.logFile.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %m%n\n\n# console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target=System.out\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %m%n"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : { },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "tagsync-application-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "atlas.kafka.bootstrap.servers" : "sandbox.hortonworks.com:6667",
            "atlas.kafka.entities.group.id" : "ranger_entities_consumer",
            "atlas.kafka.zookeeper.connect" : "sandbox.hortonworks.com:2181"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-ugsync-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.usersync.credstore.filename" : "/usr/hdp/current/ranger-usersync/conf/ugsync.jceks",
            "ranger.usersync.enabled" : "true",
            "ranger.usersync.filesource.file" : "/tmp/usergroup.txt",
            "ranger.usersync.filesource.text.delimiter" : ",",
            "ranger.usersync.group.memberattributename" : "",
            "ranger.usersync.group.nameattribute" : "",
            "ranger.usersync.group.objectclass" : "",
            "ranger.usersync.group.search.first.enabled" : "false",
            "ranger.usersync.group.searchbase" : "",
            "ranger.usersync.group.searchenabled" : "false",
            "ranger.usersync.group.searchfilter" : "",
            "ranger.usersync.group.searchscope" : "",
            "ranger.usersync.group.usermapsyncenabled" : "true",
            "ranger.usersync.kerberos.keytab" : "",
            "ranger.usersync.kerberos.principal" : "",
            "ranger.usersync.keystore.file" : "/usr/hdp/current/ranger-usersync/conf/unixauthservice.jks",
            "ranger.usersync.keystore.password" : "SECRET:ranger-ugsync-site:2:ranger.usersync.keystore.password",
            "ranger.usersync.ldap.bindalias" : "testldapalias",
            "ranger.usersync.ldap.binddn" : "",
            "ranger.usersync.ldap.bindkeystore" : "",
            "ranger.usersync.ldap.groupname.caseconversion" : "none",
            "ranger.usersync.ldap.ldapbindpassword" : "",
            "ranger.usersync.ldap.referral" : "ignore",
            "ranger.usersync.ldap.searchBase" : "dc=hadoop,dc=apache,dc=org",
            "ranger.usersync.ldap.url" : "",
            "ranger.usersync.ldap.user.groupnameattribute" : "memberof, ismemberof",
            "ranger.usersync.ldap.user.nameattribute" : "",
            "ranger.usersync.ldap.user.objectclass" : "person",
            "ranger.usersync.ldap.user.searchbase" : "",
            "ranger.usersync.ldap.user.searchfilter" : "",
            "ranger.usersync.ldap.user.searchscope" : "sub",
            "ranger.usersync.ldap.username.caseconversion" : "none",
            "ranger.usersync.logdir" : "{{usersync_log_dir}}",
            "ranger.usersync.pagedresultsenabled" : "true",
            "ranger.usersync.pagedresultssize" : "500",
            "ranger.usersync.passwordvalidator.path" : "./native/credValidator.uexe",
            "ranger.usersync.policymanager.baseURL" : "{{ranger_external_url}}",
            "ranger.usersync.policymanager.maxrecordsperapicall" : "1000",
            "ranger.usersync.policymanager.mockrun" : "false",
            "ranger.usersync.policymgr.alias" : "ranger.usersync.policymgr.password",
            "ranger.usersync.policymgr.keystore" : "/usr/hdp/current/ranger-usersync/conf/ugsync.jceks",
            "ranger.usersync.policymgr.username" : "rangerusersync",
            "ranger.usersync.port" : "5151",
            "ranger.usersync.sink.impl.class" : "org.apache.ranger.unixusersync.process.PolicyMgrUserGroupBuilder",
            "ranger.usersync.sleeptimeinmillisbetweensynccycle" : "60000",
            "ranger.usersync.source.impl.class" : "org.apache.ranger.unixusersync.process.UnixUserGroupBuilder",
            "ranger.usersync.ssl" : "true",
            "ranger.usersync.truststore.file" : "/usr/hdp/current/ranger-usersync/conf/mytruststore.jks",
            "ranger.usersync.truststore.password" : "SECRET:ranger-ugsync-site:2:ranger.usersync.truststore.password",
            "ranger.usersync.unix.group.file" : "/etc/group",
            "ranger.usersync.unix.minUserId" : "500",
            "ranger.usersync.unix.password.file" : "/etc/passwd",
            "ranger.usersync.user.searchenabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "admin-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nlog4j.rootLogger = warn,xa_log_appender\n\n\n# xa_logger\nlog4j.appender.xa_log_appender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.xa_log_appender.file=${logdir}/xa_portal.log\nlog4j.appender.xa_log_appender.datePattern='.'yyyy-MM-dd\nlog4j.appender.xa_log_appender.append=true\nlog4j.appender.xa_log_appender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.xa_log_appender.layout.ConversionPattern=%d [%t] %-5p %C{6} (%F:%L) - %m%n\n# xa_log_appender : category and additivity\nlog4j.category.org.springframework=warn,xa_log_appender\nlog4j.additivity.org.springframework=false\n\nlog4j.category.org.apache.ranger=info,xa_log_appender\nlog4j.additivity.org.apache.ranger=false\n\nlog4j.category.xa=info,xa_log_appender\nlog4j.additivity.xa=false\n\n# perf_logger\nlog4j.appender.perf_appender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.perf_appender.file=${logdir}/ranger_admin_perf.log\nlog4j.appender.perf_appender.datePattern='.'yyyy-MM-dd\nlog4j.appender.perf_appender.append=true\nlog4j.appender.perf_appender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.perf_appender.layout.ConversionPattern=%d [%t] %m%n\n\n\n# sql_appender\nlog4j.appender.sql_appender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.sql_appender.file=${logdir}/xa_portal_sql.log\nlog4j.appender.sql_appender.datePattern='.'yyyy-MM-dd\nlog4j.appender.sql_appender.append=true\nlog4j.appender.sql_appender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.sql_appender.layout.ConversionPattern=%d [%t] %-5p %C{6} (%F:%L) - %m%n\n\n# sql_appender : category and additivity\nlog4j.category.org.hibernate.SQL=warn,sql_appender\nlog4j.additivity.org.hibernate.SQL=false\n\nlog4j.category.jdbc.sqlonly=fatal,sql_appender\nlog4j.additivity.jdbc.sqlonly=false\n\nlog4j.category.jdbc.sqltiming=warn,sql_appender\nlog4j.additivity.jdbc.sqltiming=false\n\nlog4j.category.jdbc.audit=fatal,sql_appender\nlog4j.additivity.jdbc.audit=false\n\nlog4j.category.jdbc.resultset=fatal,sql_appender\nlog4j.additivity.jdbc.resultset=false\n\nlog4j.category.jdbc.connection=fatal,sql_appender\nlog4j.additivity.jdbc.connection=false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-tagsync-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.tagsync.atlas.custom.resource.mappers" : "",
            "ranger.tagsync.atlas.to.ranger.service.mapping" : "",
            "ranger.tagsync.dest.ranger.endpoint" : "{{ranger_external_url}}",
            "ranger.tagsync.dest.ranger.ssl.config.filename" : "/usr/hdp/current/ranger-tagsync/conf/mytruststore.jks",
            "ranger.tagsync.dest.ranger.username" : "rangertagsync",
            "ranger.tagsync.kerberos.keytab" : "",
            "ranger.tagsync.kerberos.principal" : "",
            "ranger.tagsync.keystore.filename" : "/usr/hdp/current/ranger-tagsync/conf/rangertagsync.jceks",
            "ranger.tagsync.logdir" : "/var/log/ranger/tagsync",
            "ranger.tagsync.source.atlas" : "true",
            "ranger.tagsync.source.atlasrest" : "false",
            "ranger.tagsync.source.atlasrest.download.interval.millis" : "",
            "ranger.tagsync.source.atlasrest.endpoint" : "http://sandbox.hortonworks.com:21000",
            "ranger.tagsync.source.atlasrest.keystore.filename" : "/usr/hdp/current/ranger-tagsync/conf/atlasuser.jceks",
            "ranger.tagsync.source.atlasrest.username" : "admin",
            "ranger.tagsync.source.file" : "false",
            "ranger.tagsync.source.file.check.interval.millis" : "",
            "ranger.tagsync.source.file.filename" : ""
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-admin-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.admin.kerberos.cookie.domain" : "",
            "ranger.admin.kerberos.cookie.path" : "/",
            "ranger.admin.kerberos.keytab" : "",
            "ranger.admin.kerberos.principal" : "",
            "ranger.admin.kerberos.token.valid.seconds" : "30",
            "ranger.audit.solr.password" : "SECRET:ranger-admin-site:2:ranger.audit.solr.password",
            "ranger.audit.solr.urls" : "NONE",
            "ranger.audit.solr.username" : "ranger_solr",
            "ranger.audit.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "ranger.audit.source.type" : "solr",
            "ranger.authentication.method" : "UNIX",
            "ranger.credential.provider.path" : "/etc/ranger/admin/rangeradmin.jceks",
            "ranger.externalurl" : "{{ranger_external_url}}",
            "ranger.https.attrib.keystore.file" : "/etc/ranger/admin/conf/ranger-admin-keystore.jks",
            "ranger.is.solr.kerberised" : "{{ranger_is_solr_kerberised}}",
            "ranger.jpa.jdbc.credential.alias" : "rangeradmin",
            "ranger.jpa.jdbc.dialect" : "{{jdbc_dialect}}",
            "ranger.jpa.jdbc.driver" : "com.mysql.jdbc.Driver",
            "ranger.jpa.jdbc.password" : "SECRET:ranger-admin-site:2:ranger.jpa.jdbc.password",
            "ranger.jpa.jdbc.url" : "jdbc:mysql://localhost:3306/ranger",
            "ranger.jpa.jdbc.user" : "{{ranger_db_user}}",
            "ranger.kms.service.user.hdfs" : "hdfs",
            "ranger.kms.service.user.hive" : "hive",
            "ranger.ldap.ad.base.dn" : "dc=example,dc=com",
            "ranger.ldap.ad.bind.dn" : "{{ranger_ug_ldap_bind_dn}}",
            "ranger.ldap.ad.bind.password" : "SECRET:ranger-admin-site:2:ranger.ldap.ad.bind.password",
            "ranger.ldap.ad.domain" : "",
            "ranger.ldap.ad.referral" : "ignore",
            "ranger.ldap.ad.url" : "{{ranger_ug_ldap_url}}",
            "ranger.ldap.ad.user.searchfilter" : "(sAMAccountName={0})",
            "ranger.ldap.base.dn" : "dc=example,dc=com",
            "ranger.ldap.bind.dn" : "{{ranger_ug_ldap_bind_dn}}",
            "ranger.ldap.bind.password" : "SECRET:ranger-admin-site:2:ranger.ldap.bind.password",
            "ranger.ldap.group.roleattribute" : "cn",
            "ranger.ldap.group.searchbase" : "{{ranger_ug_ldap_group_searchbase}}",
            "ranger.ldap.group.searchfilter" : "{{ranger_ug_ldap_group_searchfilter}}",
            "ranger.ldap.referral" : "ignore",
            "ranger.ldap.url" : "{{ranger_ug_ldap_url}}",
            "ranger.ldap.user.dnpattern" : "uid={0},ou=users,dc=xasecure,dc=net",
            "ranger.ldap.user.searchfilter" : "(uid={0})",
            "ranger.lookup.kerberos.keytab" : "",
            "ranger.lookup.kerberos.principal" : "",
            "ranger.plugins.atlas.serviceuser" : "atlas",
            "ranger.plugins.hbase.serviceuser" : "hbase",
            "ranger.plugins.hdfs.serviceuser" : "hdfs",
            "ranger.plugins.hive.serviceuser" : "hive",
            "ranger.plugins.kafka.serviceuser" : "kafka",
            "ranger.plugins.kms.serviceuser" : "kms",
            "ranger.plugins.knox.serviceuser" : "knox",
            "ranger.plugins.storm.serviceuser" : "storm",
            "ranger.plugins.yarn.serviceuser" : "yarn",
            "ranger.service.host" : "{{ranger_host}}",
            "ranger.service.http.enabled" : "true",
            "ranger.service.http.port" : "6080",
            "ranger.service.https.attrib.clientAuth" : "want",
            "ranger.service.https.attrib.keystore.keyalias" : "rangeradmin",
            "ranger.service.https.attrib.keystore.pass" : "SECRET:ranger-admin-site:2:ranger.service.https.attrib.keystore.pass",
            "ranger.service.https.attrib.ssl.enabled" : "false",
            "ranger.service.https.port" : "6182",
            "ranger.spnego.kerberos.keytab" : "",
            "ranger.spnego.kerberos.principal" : "",
            "ranger.sso.browser.useragent" : "Mozilla,chrome",
            "ranger.sso.enabled" : "false",
            "ranger.sso.providerurl" : "https://sandbox.hortonworks.com:8443/gateway/knoxsso/api/v1/websso",
            "ranger.sso.publicKey" : "",
            "ranger.truststore.file" : "/etc/ranger/admin/conf/ranger-admin-keystore.jks",
            "ranger.truststore.password" : "SECRET:ranger-admin-site:2:ranger.truststore.password",
            "ranger.unixauth.remote.login.enabled" : "true",
            "ranger.unixauth.service.hostname" : "{{ugsync_host}}",
            "ranger.unixauth.service.port" : "5151"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "admin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "DB_FLAVOR" : "MYSQL",
            "SQL_CONNECTOR_JAR" : "/usr/share/java/mysql-connector-java.jar",
            "audit_db_name" : "ranger_audit",
            "audit_db_password" : "rangerlogger",
            "audit_db_user" : "rangerlogger",
            "db_host" : "localhost",
            "db_name" : "ranger",
            "db_password" : "SECRET:admin-properties:2:db_password",
            "db_root_password" : "SECRET:admin-properties:2:db_root_password",
            "db_root_user" : "root",
            "db_user" : "rangeradmin",
            "policymgr_external_url" : "http://sandbox.hortonworks.com:6080"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "usersync-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : { },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "admin_password" : "SECRET:ranger-env:2:admin_password",
            "admin_username" : "admin",
            "bind_anonymous" : "false",
            "create_db_dbuser" : "true",
            "is_external_solrCloud_enabled" : "false",
            "is_external_solrCloud_kerberos" : "false",
            "is_solrCloud_enabled" : "true",
            "ranger-atlas-plugin-enabled" : "Yes",
            "ranger-hbase-plugin-enabled" : "Yes",
            "ranger-hdfs-plugin-enabled" : "Yes",
            "ranger-hive-plugin-enabled" : "Yes",
            "ranger-kafka-plugin-enabled" : "No",
            "ranger-knox-plugin-enabled" : "Yes",
            "ranger-storm-plugin-enabled" : "No",
            "ranger-yarn-plugin-enabled" : "Yes",
            "ranger_admin_log_dir" : "/var/log/ranger/admin",
            "ranger_admin_password" : "SECRET:ranger-env:2:ranger_admin_password",
            "ranger_admin_username" : "amb_ranger_admin",
            "ranger_group" : "ranger",
            "ranger_pid_dir" : "/var/run/ranger",
            "ranger_privelege_user_jdbc_url" : "jdbc:mysql://localhost:3306",
            "ranger_solr_collection_name" : "ranger_audits",
            "ranger_solr_config_set" : "ranger_audits",
            "ranger_solr_replication_factor" : "1",
            "ranger_solr_shards" : "1",
            "ranger_user" : "ranger",
            "ranger_usersync_log_dir" : "/var/log/ranger/usersync",
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020",
            "xasecure.audit.destination.solr" : "true",
            "xml_configurations_supported" : "true"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380379589,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "RANGER",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=SLIDER&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "slider-client",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : { },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "slider-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Set Slider-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java64_home}}\n# The hadoop conf directory.  Optional as slider-client.xml can be edited to add properties.\nexport HADOOP_CONF_DIR={{hadoop_conf_dir}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "slider-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nlog4j.rootLogger=INFO,stdout\nlog4j.threshhold=ALL\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n\n# log layout skips stack-trace creation operations by avoiding line numbers and method\nlog4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} - %m%n\n\n# debug edition is much more expensive\n#log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\nlog4j.appender.subprocess=org.apache.log4j.ConsoleAppender\nlog4j.appender.subprocess.layout=org.apache.log4j.PatternLayout\nlog4j.appender.subprocess.layout.ConversionPattern=[%c{1}]: %m%n\n#log4j.logger.org.apache.slider.yarn.appmaster.SliderAppMasterer.master=INFO,subprocess\n\n# for debugging Slider\n#log4j.logger.org.apache.slider=DEBUG\n#log4j.logger.org.apache.slider=DEBUG\n\n# uncomment to debug service lifecycle issues\n#log4j.logger.org.apache.hadoop.yarn.service.launcher=DEBUG\n#log4j.logger.org.apache.hadoop.yarn.service=DEBUG\n\n# uncomment for YARN operations\n#log4j.logger.org.apache.hadoop.yarn.client=DEBUG\n\n# uncomment this to debug security problems\n#log4j.logger.org.apache.hadoop.security=DEBUG\n\n#crank back on some noise\nlog4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERROR\nlog4j.logger.org.apache.hadoop.hdfs=WARN\n\n\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor=WARN\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl=WARN\nlog4j.logger.org.apache.zookeeper=WARN"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380373118,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "SLIDER",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=SPARK&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "livy-spark-blacklist",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n            #\n            # Configuration override / blacklist. Defines a list of properties that users are not allowed\n            # to override when starting Spark sessions.\n            #\n            # This file takes a list of property names (one per line). Empty lines and lines starting with \"#\"\n            # are ignored.\n            #"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "livy-log4j-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n            # Set everything to be logged to the console\n            log4j.rootCategory=INFO, console\n            log4j.appender.console=org.apache.log4j.ConsoleAppender\n            log4j.appender.console.target=System.err\n            log4j.appender.console.layout=org.apache.log4j.PatternLayout\n            log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n            log4j.logger.org.eclipse.jetty=WARN"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark-metrics-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# syntax: [instance].sink|source.[name].[options]=[value]\n\n# This file configures Spark's internal metrics system. The metrics system is\n# divided into instances which correspond to internal components.\n# Each instance can be configured to report its metrics to one or more sinks.\n# Accepted values for [instance] are \"master\", \"worker\", \"executor\", \"driver\",\n# and \"applications\". A wild card \"*\" can be used as an instance name, in\n# which case all instances will inherit the supplied property.\n#\n# Within an instance, a \"source\" specifies a particular set of grouped metrics.\n# there are two kinds of sources:\n# 1. Spark internal sources, like MasterSource, WorkerSource, etc, which will\n# collect a Spark component's internal state. Each instance is paired with a\n# Spark source that is added automatically.\n# 2. Common sources, like JvmSource, which will collect low level state.\n# These can be added through configuration options and are then loaded\n# using reflection.\n#\n# A \"sink\" specifies where metrics are delivered to. Each instance can be\n# assigned one or more sinks.\n#\n# The sink|source field specifies whether the property relates to a sink or\n# source.\n#\n# The [name] field specifies the name of source or sink.\n#\n# The [options] field is the specific property of this source or sink. The\n# source or sink is responsible for parsing this property.\n#\n# Notes:\n# 1. To add a new sink, set the \"class\" option to a fully qualified class\n# name (see examples below).\n# 2. Some sinks involve a polling period. The minimum allowed polling period\n# is 1 second.\n# 3. Wild card properties can be overridden by more specific properties.\n# For example, master.sink.console.period takes precedence over\n# *.sink.console.period.\n# 4. A metrics specific configuration\n# \"spark.metrics.conf=${SPARK_HOME}/conf/metrics.properties\" should be\n# added to Java properties using -Dspark.metrics.conf=xxx if you want to\n# customize metrics system. You can also put the file in ${SPARK_HOME}/conf\n# and it will be loaded automatically.\n# 5. MetricsServlet is added by default as a sink in master, worker and client\n# driver, you can send http request \"/metrics/json\" to get a snapshot of all the\n# registered metrics in json format. For master, requests \"/metrics/master/json\" and\n# \"/metrics/applications/json\" can be sent seperately to get metrics snapshot of\n# instance master and applications. MetricsServlet may not be configured by self.\n#\n\n## List of available sinks and their properties.\n\n# org.apache.spark.metrics.sink.ConsoleSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n\n# org.apache.spark.metrics.sink.CSVSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n# directory /tmp Where to store CSV files\n\n# org.apache.spark.metrics.sink.GangliaSink\n# Name: Default: Description:\n# host NONE Hostname or multicast group of Ganglia server\n# port NONE Port of Ganglia server(s)\n# period 10 Poll period\n# unit seconds Units of poll period\n# ttl 1 TTL of messages sent by Ganglia\n# mode multicast Ganglia network mode ('unicast' or 'multicast')\n\n# org.apache.spark.metrics.sink.JmxSink\n\n# org.apache.spark.metrics.sink.MetricsServlet\n# Name: Default: Description:\n# path VARIES* Path prefix from the web server root\n# sample false Whether to show entire set of samples for histograms ('false' or 'true')\n#\n# * Default path is /metrics/json for all instances except the master. The master has two paths:\n# /metrics/aplications/json # App information\n# /metrics/master/json # Master information\n\n# org.apache.spark.metrics.sink.GraphiteSink\n# Name: Default: Description:\n# host NONE Hostname of Graphite server\n# port NONE Port of Graphite server\n# period 10 Poll period\n# unit seconds Units of poll period\n# prefix EMPTY STRING Prefix to prepend to metric name\n\n## Examples\n# Enable JmxSink for all instances by class name\n#*.sink.jmx.class=org.apache.spark.metrics.sink.JmxSink\n\n# Enable ConsoleSink for all instances by class name\n#*.sink.console.class=org.apache.spark.metrics.sink.ConsoleSink\n\n# Polling period for ConsoleSink\n#*.sink.console.period=10\n\n#*.sink.console.unit=seconds\n\n# Master instance overlap polling period\n#master.sink.console.period=15\n\n#master.sink.console.unit=seconds\n\n# Enable CsvSink for all instances\n#*.sink.csv.class=org.apache.spark.metrics.sink.CsvSink\n\n# Polling period for CsvSink\n#*.sink.csv.period=1\n\n#*.sink.csv.unit=minutes\n\n# Polling directory for CsvSink\n#*.sink.csv.directory=/tmp/\n\n# Worker instance overlap polling period\n#worker.sink.csv.period=10\n\n#worker.sink.csv.unit=minutes\n\n# Enable jvm source for instance master, worker, driver and executor\n#master.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#worker.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#driver.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#executor.source.jvm.class=org.apache.spark.metrics.source.JvmSource"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "livy-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n            #!/usr/bin/env bash\n\n            # - SPARK_HOME      Spark which you would like to use in livy\n            # - LIVY_LOG_DIR    Where log files are stored.  (Default: ${LIVY_HOME}/logs)\n            # - LIVY_PID_DIR    Where the pid file is stored. (Default: /tmp)\n            # - LIVY_SERVER_JAVA_OPTS  Java Opts for running livy server (You can set jvm related setting here, like jvm memory/gc algorithm and etc.)\n        export SPARK_HOME=/usr/hdp/current/spark-client\n        export LIVY_LOG_DIR={{livy_log_dir}}\n        export LIVY_PID_DIR={{livy_pid_dir}}\n        export LIVY_SERVER_JAVA_OPTS=\"-Xmx2g\"",
            "livy_group" : "livy",
            "livy_log_dir" : "/var/log/livy",
            "livy_pid_dir" : "/var/run/livy",
            "livy_user" : "livy",
            "spark_home" : "/usr/hdp/current/spark-client"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark-thrift-fairscheduler",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "fairscheduler_content" : "<?xml version=\"1.0\"?>\n            <allocations>\n            <pool name=\"default\">\n            <schedulingMode>FAIR</schedulingMode>\n            <weight>1</weight>\n            <minShare>2</minShare>\n            </pool>\n            </allocations>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "livy-conf",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "livy.environment" : "production",
            "livy.impersonation.enabled" : "true",
            "livy.server.csrf_protection.enabled" : "true",
            "livy.server.port" : "8998",
            "livy.server.session.timeout" : "3600000"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark-log4j-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Set everything to be logged to the console\nlog4j.rootCategory=INFO, console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n# Settings to quiet third party logs that are too verbose\nlog4j.logger.org.eclipse.jetty=WARN\nlog4j.logger.org.eclipse.jetty.util.component.AbstractLifeCycle=ERROR\nlog4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO\nlog4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark-thrift-sparkconf",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "spark.driver.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
            "spark.dynamicAllocation.enabled" : "true",
            "spark.dynamicAllocation.initialExecutors" : "0",
            "spark.dynamicAllocation.maxExecutors" : "10",
            "spark.dynamicAllocation.minExecutors" : "0",
            "spark.eventLog.dir" : "{{spark_history_dir}}",
            "spark.eventLog.enabled" : "true",
            "spark.executor.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
            "spark.executor.memory" : "1g",
            "spark.hadoop.cacheConf" : "false",
            "spark.history.fs.logDirectory" : "{{spark_history_dir}}",
            "spark.history.provider" : "org.apache.spark.deploy.history.FsHistoryProvider",
            "spark.master" : "{{spark_thrift_master}}",
            "spark.scheduler.allocation.file" : "{{spark_conf}}/spark-thrift-fairscheduler.xml",
            "spark.scheduler.mode" : "FAIR",
            "spark.shuffle.service.enabled" : "true",
            "spark.yarn.am.memory" : "512m",
            "spark.yarn.queue" : "default"
          },
          "properties_attributes" : {
            "spark.eventLog.dir" : {
              "final" : "true"
            },
            "spark.eventLog.enabled" : {
              "final" : "true"
            },
            "final" : {
              "spark.eventLog.enabled" : "true",
              "spark.eventLog.dir" : "true",
              "spark.history.fs.logDirectory" : "true"
            },
            "spark.history.fs.logDirectory" : {
              "final" : "true"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark-hive-site-override",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "hive.metastore.client.connect.retry.delay" : "5",
            "hive.metastore.client.socket.timeout" : "1800",
            "hive.server2.enable.doAs" : "false",
            "hive.server2.thrift.port" : "10015",
            "hive.server2.transport.mode" : "binary"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark-javaopts-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : " "
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#!/usr/bin/env bash\n\n# This file is sourced when running various Spark programs.\n# Copy it as spark-env.sh and edit that to configure Spark for your site.\n\n# Options read in YARN client mode\n#SPARK_EXECUTOR_INSTANCES=\"2\" #Number of workers to start (Default: 2)\n#SPARK_EXECUTOR_CORES=\"1\" #Number of cores for the workers (Default: 1).\n#SPARK_EXECUTOR_MEMORY=\"1G\" #Memory per Worker (e.g. 1000M, 2G) (Default: 1G)\n#SPARK_DRIVER_MEMORY=\"512 Mb\" #Memory for Master (e.g. 1000M, 2G) (Default: 512 Mb)\n#SPARK_YARN_APP_NAME=\"spark\" #The name of your application (Default: Spark)\n#SPARK_YARN_QUEUE=\"~@~Xdefault~@~Y\" #The hadoop queue to use for allocation requests (Default: @~Xdefault~@~Y)\n#SPARK_YARN_DIST_FILES=\"\" #Comma separated list of files to be distributed with the job.\n#SPARK_YARN_DIST_ARCHIVES=\"\" #Comma separated list of archives to be distributed with the job.\n\n# Generic options for the daemons used in the standalone deploy mode\n\n# Alternate conf dir. (Default: ${SPARK_HOME}/conf)\nexport SPARK_CONF_DIR=${SPARK_CONF_DIR:-{{spark_home}}/conf}\n\n# Where log files are stored.(Default:${SPARK_HOME}/logs)\n#export SPARK_LOG_DIR=${SPARK_HOME:-{{spark_home}}}/logs\nexport SPARK_LOG_DIR={{spark_log_dir}}\n\n# Where the pid file is stored. (Default: /tmp)\nexport SPARK_PID_DIR={{spark_pid_dir}}\n\n# A string representing this instance of spark.(Default: $USER)\nSPARK_IDENT_STRING=$USER\n\n# The scheduling priority for daemons. (Default: 0)\nSPARK_NICENESS=0\n\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\nexport HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-{{hadoop_conf_dir}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java_home}}\n\nif [ -d \"/etc/tez/conf/\" ]; then\n  export TEZ_CONF_DIR=/etc/tez/conf\nelse\n  export TEZ_CONF_DIR=\nfi",
            "hive_kerberos_keytab" : "{{hive_kerberos_keytab}}",
            "hive_kerberos_principal" : "{{hive_kerberos_principal}}",
            "spark_daemon_memory" : "1024",
            "spark_group" : "spark",
            "spark_log_dir" : "/var/log/spark",
            "spark_pid_dir" : "/var/run/spark",
            "spark_thrift_cmd_opts" : "",
            "spark_user" : "spark"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark-defaults",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "spark.driver.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
            "spark.eventLog.dir" : "hdfs:///spark-history",
            "spark.eventLog.enabled" : "true",
            "spark.executor.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
            "spark.history.fs.logDirectory" : "hdfs:///spark-history",
            "spark.history.kerberos.keytab" : "none",
            "spark.history.kerberos.principal" : "none",
            "spark.history.provider" : "org.apache.spark.deploy.history.FsHistoryProvider",
            "spark.history.ui.port" : "18080",
            "spark.yarn.containerLauncherMaxThreads" : "25",
            "spark.yarn.driver.memoryOverhead" : "384",
            "spark.yarn.executor.memoryOverhead" : "384",
            "spark.yarn.historyServer.address" : "{{spark_history_server_host}}:{{spark_history_ui_port}}",
            "spark.yarn.max.executor.failures" : "3",
            "spark.yarn.preserve.staging.files" : "false",
            "spark.yarn.queue" : "default",
            "spark.yarn.scheduler.heartbeat.interval-ms" : "5000",
            "spark.yarn.submit.file.replication" : "3"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380368182,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "SPARK",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=SPARK2&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark2-defaults",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "spark.driver.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
            "spark.eventLog.dir" : "hdfs:///spark2-history/",
            "spark.eventLog.enabled" : "true",
            "spark.executor.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
            "spark.history.fs.logDirectory" : "hdfs:///spark2-history/",
            "spark.history.kerberos.enabled" : "true",
            "spark.history.kerberos.keytab" : "/etc/security/keytabs/spark.headless.keytab",
            "spark.history.kerberos.principal" : "sparkuserqPS5joyO2hFxQ0sFUR0Cg@HWQE.HORTONWORKS.COM",
            "spark.history.provider" : "org.apache.spark.deploy.history.FsHistoryProvider",
            "spark.history.ui.port" : "18081",
            "spark.yarn.historyServer.address" : "{{spark_history_server_host}}:{{spark_history_ui_port}}",
            "spark.yarn.queue" : "default"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark2-thrift-sparkconf",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "spark.driver.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
            "spark.dynamicAllocation.enabled" : "true",
            "spark.dynamicAllocation.initialExecutors" : "0",
            "spark.dynamicAllocation.maxExecutors" : "10",
            "spark.dynamicAllocation.minExecutors" : "0",
            "spark.eventLog.dir" : "{{spark_history_dir}}",
            "spark.eventLog.enabled" : "true",
            "spark.executor.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
            "spark.hadoop.cacheConf" : "false",
            "spark.history.fs.logDirectory" : "{{spark_history_dir}}",
            "spark.history.provider" : "org.apache.spark.deploy.history.FsHistoryProvider",
            "spark.master" : "{{spark_thrift_master}}",
            "spark.scheduler.allocation.file" : "{{spark_conf}}/spark-thrift-fairscheduler.xml",
            "spark.scheduler.mode" : "FAIR",
            "spark.shuffle.service.enabled" : "true",
            "spark.yarn.queue" : "default"
          },
          "properties_attributes" : {
            "spark.eventLog.dir" : {
              "final" : "true"
            },
            "spark.eventLog.enabled" : {
              "final" : "true"
            },
            "final" : {
              "spark.eventLog.enabled" : "true",
              "spark.eventLog.dir" : "true",
              "spark.history.fs.logDirectory" : "true"
            },
            "spark.history.fs.logDirectory" : {
              "final" : "true"
            }
          }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark2-hive-site-override",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "hive.metastore.client.connect.retry.delay" : "5",
            "hive.metastore.client.socket.timeout" : "1800",
            "hive.server2.enable.doAs" : "false",
            "hive.server2.thrift.port" : "10016",
            "hive.server2.transport.mode" : "binary"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark2-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#!/usr/bin/env bash\n\n# This file is sourced when running various Spark programs.\n# Copy it as spark-env.sh and edit that to configure Spark for your site.\n\n# Options read in YARN client mode\n#SPARK_EXECUTOR_INSTANCES=\"2\" #Number of workers to start (Default: 2)\n#SPARK_EXECUTOR_CORES=\"1\" #Number of cores for the workers (Default: 1).\n#SPARK_EXECUTOR_MEMORY=\"1G\" #Memory per Worker (e.g. 1000M, 2G) (Default: 1G)\n#SPARK_DRIVER_MEMORY=\"512M\" #Memory for Master (e.g. 1000M, 2G) (Default: 512 Mb)\n#SPARK_YARN_APP_NAME=\"spark\" #The name of your application (Default: Spark)\n#SPARK_YARN_QUEUE=\"default\" #The hadoop queue to use for allocation requests (Default: default)\n#SPARK_YARN_DIST_FILES=\"\" #Comma separated list of files to be distributed with the job.\n#SPARK_YARN_DIST_ARCHIVES=\"\" #Comma separated list of archives to be distributed with the job.\n\n# Generic options for the daemons used in the standalone deploy mode\n\n# Alternate conf dir. (Default: ${SPARK_HOME}/conf)\nexport SPARK_CONF_DIR=${SPARK_CONF_DIR:-{{spark_home}}/conf}\n\n# Where log files are stored.(Default:${SPARK_HOME}/logs)\n#export SPARK_LOG_DIR=${SPARK_HOME:-{{spark_home}}}/logs\nexport SPARK_LOG_DIR={{spark_log_dir}}\n\n# Where the pid file is stored. (Default: /tmp)\nexport SPARK_PID_DIR={{spark_pid_dir}}\n\n#Memory for Master, Worker and history server (default: 1024MB)\nexport SPARK_DAEMON_MEMORY={{spark_daemon_memory}}m\n\n# A string representing this instance of spark.(Default: $USER)\nSPARK_IDENT_STRING=$USER\n\n# The scheduling priority for daemons. (Default: 0)\nSPARK_NICENESS=0\n\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\nexport HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-{{hadoop_conf_dir}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java_home}}",
            "hive_kerberos_keytab" : "{{hive_kerberos_keytab}}",
            "hive_kerberos_principal" : "{{hive_kerberos_principal}}",
            "spark_daemon_memory" : "1024",
            "spark_group" : "spark",
            "spark_log_dir" : "/var/log/spark2",
            "spark_pid_dir" : "/var/run/spark2",
            "spark_thrift_cmd_opts" : "",
            "spark_user" : "spark"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark2-log4j-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Set everything to be logged to the console\nlog4j.rootCategory=INFO, console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n# Settings to quiet third party logs that are too verbose\nlog4j.logger.org.eclipse.jetty=WARN\nlog4j.logger.org.eclipse.jetty.util.component.AbstractLifeCycle=ERROR\nlog4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO\nlog4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark2-thrift-fairscheduler",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "fairscheduler_content" : "<?xml version=\"1.0\"?>\n            <allocations>\n            <pool name=\"default\">\n            <schedulingMode>FAIR</schedulingMode>\n            <weight>1</weight>\n            <minShare>2</minShare>\n            </pool>\n            </allocations>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "spark2-metrics-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# syntax: [instance].sink|source.[name].[options]=[value]\n\n# This file configures Spark's internal metrics system. The metrics system is\n# divided into instances which correspond to internal components.\n# Each instance can be configured to report its metrics to one or more sinks.\n# Accepted values for [instance] are \"master\", \"worker\", \"executor\", \"driver\",\n# and \"applications\". A wild card \"*\" can be used as an instance name, in\n# which case all instances will inherit the supplied property.\n#\n# Within an instance, a \"source\" specifies a particular set of grouped metrics.\n# there are two kinds of sources:\n# 1. Spark internal sources, like MasterSource, WorkerSource, etc, which will\n# collect a Spark component's internal state. Each instance is paired with a\n# Spark source that is added automatically.\n# 2. Common sources, like JvmSource, which will collect low level state.\n# These can be added through configuration options and are then loaded\n# using reflection.\n#\n# A \"sink\" specifies where metrics are delivered to. Each instance can be\n# assigned one or more sinks.\n#\n# The sink|source field specifies whether the property relates to a sink or\n# source.\n#\n# The [name] field specifies the name of source or sink.\n#\n# The [options] field is the specific property of this source or sink. The\n# source or sink is responsible for parsing this property.\n#\n# Notes:\n# 1. To add a new sink, set the \"class\" option to a fully qualified class\n# name (see examples below).\n# 2. Some sinks involve a polling period. The minimum allowed polling period\n# is 1 second.\n# 3. Wild card properties can be overridden by more specific properties.\n# For example, master.sink.console.period takes precedence over\n# *.sink.console.period.\n# 4. A metrics specific configuration\n# \"spark.metrics.conf=${SPARK_HOME}/conf/metrics.properties\" should be\n# added to Java properties using -Dspark.metrics.conf=xxx if you want to\n# customize metrics system. You can also put the file in ${SPARK_HOME}/conf\n# and it will be loaded automatically.\n# 5. MetricsServlet is added by default as a sink in master, worker and client\n# driver, you can send http request \"/metrics/json\" to get a snapshot of all the\n# registered metrics in json format. For master, requests \"/metrics/master/json\" and\n# \"/metrics/applications/json\" can be sent seperately to get metrics snapshot of\n# instance master and applications. MetricsServlet may not be configured by self.\n#\n\n## List of available sinks and their properties.\n\n# org.apache.spark.metrics.sink.ConsoleSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n\n# org.apache.spark.metrics.sink.CSVSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n# directory /tmp Where to store CSV files\n\n# org.apache.spark.metrics.sink.GangliaSink\n# Name: Default: Description:\n# host NONE Hostname or multicast group of Ganglia server\n# port NONE Port of Ganglia server(s)\n# period 10 Poll period\n# unit seconds Units of poll period\n# ttl 1 TTL of messages sent by Ganglia\n# mode multicast Ganglia network mode ('unicast' or 'multicast')\n\n# org.apache.spark.metrics.sink.JmxSink\n\n# org.apache.spark.metrics.sink.MetricsServlet\n# Name: Default: Description:\n# path VARIES* Path prefix from the web server root\n# sample false Whether to show entire set of samples for histograms ('false' or 'true')\n#\n# * Default path is /metrics/json for all instances except the master. The master has two paths:\n# /metrics/aplications/json # App information\n# /metrics/master/json # Master information\n\n# org.apache.spark.metrics.sink.GraphiteSink\n# Name: Default: Description:\n# host NONE Hostname of Graphite server\n# port NONE Port of Graphite server\n# period 10 Poll period\n# unit seconds Units of poll period\n# prefix EMPTY STRING Prefix to prepend to metric name\n\n## Examples\n# Enable JmxSink for all instances by class name\n#*.sink.jmx.class=org.apache.spark.metrics.sink.JmxSink\n\n# Enable ConsoleSink for all instances by class name\n#*.sink.console.class=org.apache.spark.metrics.sink.ConsoleSink\n\n# Polling period for ConsoleSink\n#*.sink.console.period=10\n\n#*.sink.console.unit=seconds\n\n# Master instance overlap polling period\n#master.sink.console.period=15\n\n#master.sink.console.unit=seconds\n\n# Enable CsvSink for all instances\n#*.sink.csv.class=org.apache.spark.metrics.sink.CsvSink\n\n# Polling period for CsvSink\n#*.sink.csv.period=1\n\n#*.sink.csv.unit=minutes\n\n# Polling directory for CsvSink\n#*.sink.csv.directory=/tmp/\n\n# Worker instance overlap polling period\n#worker.sink.csv.period=10\n\n#worker.sink.csv.unit=minutes\n\n# Enable jvm source for instance master, worker, driver and executor\n#master.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#worker.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#driver.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#executor.source.jvm.class=org.apache.spark.metrics.source.JvmSource"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380376546,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "SPARK2",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=SQOOP&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "sqoop-atlas-application.properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "atlas.jaas.KafkaClient.option.renewTicket" : "true",
            "atlas.jaas.KafkaClient.option.useTicketCache" : "true"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "sqoop-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Set Hadoop-specific environment variables here.\n\n#Set path to where bin/hadoop is available\n#Set path to where bin/hadoop is available\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n#set the path to where bin/hbase is available\nexport HBASE_HOME=${HBASE_HOME:-{{hbase_home}}}\n\n#Set the path to where bin/hive is available\nexport HIVE_HOME=${HIVE_HOME:-{{hive_home}}}\n\n#Set the path for where zookeper config dir is\nexport ZOOCFGDIR=${ZOOCFGDIR:-/etc/zookeeper/conf}\n\n# add libthrift in hive to sqoop class path first so hive imports work\nexport SQOOP_USER_CLASSPATH=\"`ls ${HIVE_HOME}/lib/libthrift-*.jar 2> /dev/null`:${SQOOP_USER_CLASSPATH}\"",
            "jdbc_drivers" : " ",
            "sqoop_user" : "sqoop"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "sqoop-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "atlas.cluster.name" : "{{cluster_name}}",
            "sqoop.job.data.publish.class" : "org.apache.atlas.sqoop.hook.SqoopHook"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380367528,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "SQOOP",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=STORM&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-audit",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/storm/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_1%:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/storm/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n      #!/bin/bash\n\n      # Set Storm specific environment variables here.\n\n      # The java implementation to use.\n      export JAVA_HOME={{java64_home}}\n\n      export STORM_CONF_DIR={{conf_dir}}\n      export STORM_HOME={{storm_component_home_dir}}\n\n      export STORM_JAR_JVM_OPTS={{jar_jvm_opts}}",
            "jmxremote_port" : "56431",
            "nimbus_seeds_supported" : "true",
            "storm_log_dir" : "/var/log/storm",
            "storm_logs_supported" : "true",
            "storm_pid_dir" : "/var/run/storm",
            "storm_user" : "storm",
            "storm_user_nofile_limit" : "128000",
            "storm_user_nproc_limit" : "65536"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "_storm.min.ruid" : "null",
            "_storm.thrift.nonsecure.transport" : "org.apache.storm.security.auth.SimpleTransportPlugin",
            "_storm.thrift.secure.transport" : "org.apache.storm.security.auth.kerberos.KerberosSaslTransportPlugin",
            "atlas.cluster.name" : "{{cluster_name}}",
            "client.jartransformer.class" : "org.apache.storm.hack.StormShadeTransformer",
            "dev.zookeeper.path" : "/tmp/dev-storm-zookeeper",
            "drpc.childopts" : "-Xmx220m",
            "drpc.invocations.port" : "3773",
            "drpc.port" : "3772",
            "drpc.queue.size" : "128",
            "drpc.request.timeout.secs" : "600",
            "drpc.worker.threads" : "64",
            "java.library.path" : "/usr/local/lib:/opt/local/lib:/usr/lib:/usr/hdp/current/storm-client/lib",
            "logviewer.appender.name" : "A1",
            "logviewer.childopts" : "-Xmx128m _JAAS_PLACEHOLDER",
            "logviewer.port" : "8005",
            "metrics.reporter.register" : "org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter",
            "nimbus.childopts" : "-Xmx220m -javaagent:/usr/hdp/current/storm-client/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=%HOSTGROUP::host_group_1%,port=8649,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-client/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Nimbus_JVM",
            "nimbus.cleanup.inbox.freq.secs" : "600",
            "nimbus.file.copy.expiration.secs" : "600",
            "nimbus.inbox.jar.expiration.secs" : "3600",
            "nimbus.monitor.freq.secs" : "120",
            "nimbus.reassign" : "true",
            "nimbus.seeds" : "['%HOSTGROUP::host_group_1%']",
            "nimbus.supervisor.timeout.secs" : "60",
            "nimbus.task.launch.secs" : "120",
            "nimbus.task.timeout.secs" : "30",
            "nimbus.thrift.max_buffer_size" : "1048576",
            "nimbus.thrift.port" : "6627",
            "nimbus.thrift.threads" : "196",
            "nimbus.topology.validator" : "org.apache.storm.nimbus.DefaultTopologyValidator",
            "storm.cluster.metrics.consumer.register" : "[{\"class\": \"org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter\"}]",
            "storm.cluster.mode" : "distributed",
            "storm.local.dir" : "/hadoop/storm",
            "storm.local.mode.zmq" : "false",
            "storm.log.dir" : "{{log_dir}}",
            "storm.messaging.netty.buffer_size" : "5242880",
            "storm.messaging.netty.client_worker_threads" : "1",
            "storm.messaging.netty.max_retries" : "30",
            "storm.messaging.netty.max_wait_ms" : "1000",
            "storm.messaging.netty.min_wait_ms" : "100",
            "storm.messaging.netty.server_worker_threads" : "1",
            "storm.messaging.transport" : "org.apache.storm.messaging.netty.Context",
            "storm.thrift.transport" : "{{storm_thrift_transport}}",
            "storm.topology.submission.notifier.plugin.class" : "org.apache.atlas.storm.hook.StormAtlasHook",
            "storm.zookeeper.connection.timeout" : "15000",
            "storm.zookeeper.port" : "2181",
            "storm.zookeeper.retry.interval" : "1000",
            "storm.zookeeper.retry.intervalceiling.millis" : "30000",
            "storm.zookeeper.retry.times" : "5",
            "storm.zookeeper.root" : "/storm",
            "storm.zookeeper.servers" : "['%HOSTGROUP::host_group_1%']",
            "storm.zookeeper.session.timeout" : "20000",
            "supervisor.childopts" : "-Xmx256m _JAAS_PLACEHOLDER -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port={{jmxremote_port}} -javaagent:/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=localhost,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Supervisor_JVM",
            "supervisor.heartbeat.frequency.secs" : "5",
            "supervisor.monitor.frequency.secs" : "3",
            "supervisor.slots.ports" : "[6700, 6701]",
            "supervisor.worker.start.timeout.secs" : "120",
            "supervisor.worker.timeout.secs" : "30",
            "task.heartbeat.frequency.secs" : "3",
            "task.refresh.poll.secs" : "10",
            "topology.acker.executors" : "null",
            "topology.builtin.metrics.bucket.size.secs" : "60",
            "topology.debug" : "false",
            "topology.disruptor.wait.strategy" : "com.lmax.disruptor.BlockingWaitStrategy",
            "topology.enable.message.timeouts" : "true",
            "topology.error.throttle.interval.secs" : "10",
            "topology.executor.receive.buffer.size" : "1024",
            "topology.executor.send.buffer.size" : "1024",
            "topology.fall.back.on.java.serialization" : "true",
            "topology.kryo.factory" : "org.apache.storm.serialization.DefaultKryoFactory",
            "topology.max.error.report.per.interval" : "5",
            "topology.max.replication.wait.time.sec" : "{{actual_topology_max_replication_wait_time_sec}}",
            "topology.max.replication.wait.time.sec.default" : "60",
            "topology.max.spout.pending" : "1000",
            "topology.max.task.parallelism" : "null",
            "topology.message.timeout.secs" : "30",
            "topology.metrics.aggregate.metric.evict.secs" : "5",
            "topology.metrics.aggregate.per.worker" : "true",
            "topology.metrics.consumer.register" : "[{\"class\": \"org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsSink\", \"parallelism.hint\": 1, \"whitelist\": [\"kafkaOffset\\\\..+/\", \"__complete-latency\", \"__process-latency\", \"__receive\\\\.population$\", \"__sendqueue\\\\.population$\", \"__execute-count\", \"__emit-count\", \"__ack-count\", \"__fail-count\", \"memory/heap\\\\.usedBytes$\", \"memory/nonHeap\\\\.usedBytes$\", \"GC/.+\\\\.count$\", \"GC/.+\\\\.timeMs$\"]}]",
            "topology.metrics.expand.map.type" : "true",
            "topology.metrics.metric.name.separator" : ".",
            "topology.min.replication.count" : "{{actual_topology_min_replication_count}}",
            "topology.min.replication.count.default" : "1",
            "topology.optimize" : "true",
            "topology.receiver.buffer.size" : "8",
            "topology.skip.missing.kryo.registrations" : "false",
            "topology.sleep.spout.wait.strategy.time.ms" : "1",
            "topology.spout.wait.strategy" : "org.apache.storm.spout.SleepSpoutWaitStrategy",
            "topology.state.synchronization.timeout.secs" : "60",
            "topology.stats.sample.rate" : "0.05",
            "topology.tick.tuple.freq.secs" : "null",
            "topology.transfer.buffer.size" : "1024",
            "topology.trident.batch.emit.interval.millis" : "500",
            "topology.tuple.serializer" : "org.apache.storm.serialization.types.ListDelegateSerializer",
            "topology.worker.childopts" : "null",
            "topology.worker.shared.thread.pool.size" : "4",
            "topology.workers" : "1",
            "transactional.zookeeper.port" : "null",
            "transactional.zookeeper.root" : "/transactional",
            "transactional.zookeeper.servers" : "null",
            "ui.childopts" : "-Xmx220m",
            "ui.filter" : "null",
            "ui.port" : "8744",
            "worker.childopts" : "-Xmx768m _JAAS_PLACEHOLDER -javaagent:/usr/hdp/current/storm-client/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=localhost,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-client/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Worker_%ID%_JVM",
            "worker.heartbeat.frequency.secs" : "1",
            "zmq.hwm" : "0",
            "zmq.linger.millis" : "5000",
            "zmq.threads" : "1"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-plugin-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-storm-plugin-properties:1:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "stormtestuser@EXAMPLE.COM",
            "common.name.for.certificate" : "",
            "policy_user" : "storm",
            "ranger-storm-plugin-enabled" : "No"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-atlas-application.properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "atlas.hook.storm.numRetries" : "3"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-policymgr-ssl",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/storm-client/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-storm-policymgr-ssl:1:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/storm-client/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-storm-policymgr-ssl:1:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-worker-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<configuration monitorInterval=\"60\">\n<properties>\n    <property name=\"pattern\">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} [%p] %msg%n</property>\n    <property name=\"patternNoTime\">%msg%n</property>\n    <property name=\"patternMetrics\">%d %-8r %m%n</property>\n</properties>\n<appenders>\n    <RollingFile name=\"A1\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"STDOUT\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.out\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.out.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternNoTime}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"4\"/>\n    </RollingFile>\n    <RollingFile name=\"STDERR\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.err\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.err.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternNoTime}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"4\"/>\n    </RollingFile>\n    <RollingFile name=\"METRICS\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternMetrics}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"2 MB\"/>\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <Syslog name=\"syslog\" format=\"RFC5424\" charset=\"UTF-8\" host=\"localhost\" port=\"514\"\n        protocol=\"UDP\" appName=\"[${sys:storm.id}:${sys:worker.port}]\" mdcId=\"mdc\" includeMDC=\"true\"\n        facility=\"LOCAL5\" enterpriseNumber=\"18060\" newLine=\"true\" exceptionPattern=\"%rEx{full}\"\n        messageId=\"[${sys:user.name}:${sys:logging.sensitivity}]\" id=\"storm\" immediateFail=\"true\" immediateFlush=\"true\"/>\n</appenders>\n<loggers>\n    <root level=\"info\"> <!-- We log everything -->\n        <appender-ref ref=\"A1\"/>\n        <appender-ref ref=\"syslog\"/>\n    </root>\n    <Logger name=\"org.apache.storm.metric.LoggingMetricsConsumer\" level=\"info\" additivity=\"false\">\n        <appender-ref ref=\"METRICS\"/>\n    </Logger>\n    <Logger name=\"STDERR\" level=\"INFO\">\n        <appender-ref ref=\"STDERR\"/>\n        <appender-ref ref=\"syslog\"/>\n    </Logger>\n    <Logger name=\"STDOUT\" level=\"INFO\">\n        <appender-ref ref=\"STDOUT\"/>\n        <appender-ref ref=\"syslog\"/>\n    </Logger>\n</loggers>\n</configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-cluster-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n<configuration monitorInterval=\"60\">\n<properties>\n    <property name=\"pattern\">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} [%p] %msg%n</property>\n</properties>\n<appenders>\n    <RollingFile name=\"A1\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/${sys:logfile.name}\"\n                 filePattern=\"${sys:storm.log.dir}/${sys:logfile.name}.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"WEB-ACCESS\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/access-web-${sys:daemon.name}.log\"\n                 filePattern=\"${sys:storm.log.dir}/access-web-${sys:daemon.name}.log.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"THRIFT-ACCESS\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/access-${sys:logfile.name}\"\n                 filePattern=\"${sys:storm.log.dir}/access-${sys:logfile.name}.%i.gz\">\n    <PatternLayout>\n        <pattern>${pattern}</pattern>\n    </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <Syslog name=\"syslog\" format=\"RFC5424\" charset=\"UTF-8\" host=\"localhost\" port=\"514\"\n            protocol=\"UDP\" appName=\"[${sys:daemon.name}]\" mdcId=\"mdc\" includeMDC=\"true\"\n            facility=\"LOCAL5\" enterpriseNumber=\"18060\" newLine=\"true\" exceptionPattern=\"%rEx{full}\"\n            messageId=\"[${sys:user.name}:S0]\" id=\"storm\" immediateFlush=\"true\" immediateFail=\"true\"/>\n</appenders>\n<loggers>\n\n    <Logger name=\"org.apache.storm.logging.filters.AccessLoggingFilter\" level=\"info\" additivity=\"false\">\n        <AppenderRef ref=\"WEB-ACCESS\"/>\n        <AppenderRef ref=\"syslog\"/>\n    </Logger>\n    <Logger name=\"org.apache.storm.logging.ThriftAccessLogger\" level=\"info\" additivity=\"false\">\n        <AppenderRef ref=\"THRIFT-ACCESS\"/>\n        <AppenderRef ref=\"syslog\"/>\n    </Logger>\n    <root level=\"info\"> <!-- We log everything -->\n        <appender-ref ref=\"A1\"/>\n        <appender-ref ref=\"syslog\"/>\n    </root>\n</loggers>\n</configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-security",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.plugin.storm.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.storm.policy.pollIntervalMs" : "30000",
            "ranger.plugin.storm.policy.rest.ssl.config.file" : "/usr/hdp/current/storm-client/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.storm.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.storm.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.storm.service.name" : "{{repo_name}}"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380369882,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "STORM",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=STORM&service_config_version=3",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-cluster-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n<configuration monitorInterval=\"60\">\n<properties>\n    <property name=\"pattern\">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} [%p] %msg%n</property>\n</properties>\n<appenders>\n    <RollingFile name=\"A1\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/${sys:logfile.name}\"\n                 filePattern=\"${sys:storm.log.dir}/${sys:logfile.name}.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"WEB-ACCESS\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/access-web-${sys:daemon.name}.log\"\n                 filePattern=\"${sys:storm.log.dir}/access-web-${sys:daemon.name}.log.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"THRIFT-ACCESS\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/access-${sys:logfile.name}\"\n                 filePattern=\"${sys:storm.log.dir}/access-${sys:logfile.name}.%i.gz\">\n    <PatternLayout>\n        <pattern>${pattern}</pattern>\n    </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <Syslog name=\"syslog\" format=\"RFC5424\" charset=\"UTF-8\" host=\"localhost\" port=\"514\"\n            protocol=\"UDP\" appName=\"[${sys:daemon.name}]\" mdcId=\"mdc\" includeMDC=\"true\"\n            facility=\"LOCAL5\" enterpriseNumber=\"18060\" newLine=\"true\" exceptionPattern=\"%rEx{full}\"\n            messageId=\"[${sys:user.name}:S0]\" id=\"storm\" immediateFlush=\"true\" immediateFail=\"true\"/>\n</appenders>\n<loggers>\n\n    <Logger name=\"org.apache.storm.logging.filters.AccessLoggingFilter\" level=\"info\" additivity=\"false\">\n        <AppenderRef ref=\"WEB-ACCESS\"/>\n        <AppenderRef ref=\"syslog\"/>\n    </Logger>\n    <Logger name=\"org.apache.storm.logging.ThriftAccessLogger\" level=\"info\" additivity=\"false\">\n        <AppenderRef ref=\"THRIFT-ACCESS\"/>\n        <AppenderRef ref=\"syslog\"/>\n    </Logger>\n    <root level=\"info\"> <!-- We log everything -->\n        <appender-ref ref=\"A1\"/>\n        <appender-ref ref=\"syslog\"/>\n    </root>\n</loggers>\n</configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n      #!/bin/bash\n\n      # Set Storm specific environment variables here.\n\n      # The java implementation to use.\n      export JAVA_HOME={{java64_home}}\n\n      export STORM_CONF_DIR={{conf_dir}}\n      export STORM_HOME={{storm_component_home_dir}}\n\n      export STORM_JAR_JVM_OPTS={{jar_jvm_opts}}",
            "jmxremote_port" : "56431",
            "nimbus_seeds_supported" : "true",
            "storm_log_dir" : "/var/log/storm",
            "storm_logs_supported" : "true",
            "storm_pid_dir" : "/var/run/storm",
            "storm_user" : "storm",
            "storm_user_nofile_limit" : "128000",
            "storm_user_nproc_limit" : "65536"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/storm/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/storm/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-storm-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "stormtestuser@EXAMPLE.COM",
            "common.name.for.certificate" : "",
            "policy_user" : "storm",
            "ranger-storm-plugin-enabled" : "No"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-worker-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<configuration monitorInterval=\"60\">\n<properties>\n    <property name=\"pattern\">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} [%p] %msg%n</property>\n    <property name=\"patternNoTime\">%msg%n</property>\n    <property name=\"patternMetrics\">%d %-8r %m%n</property>\n</properties>\n<appenders>\n    <RollingFile name=\"A1\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"STDOUT\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.out\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.out.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternNoTime}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"4\"/>\n    </RollingFile>\n    <RollingFile name=\"STDERR\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.err\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.err.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternNoTime}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"4\"/>\n    </RollingFile>\n    <RollingFile name=\"METRICS\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternMetrics}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"2 MB\"/>\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <Syslog name=\"syslog\" format=\"RFC5424\" charset=\"UTF-8\" host=\"localhost\" port=\"514\"\n        protocol=\"UDP\" appName=\"[${sys:storm.id}:${sys:worker.port}]\" mdcId=\"mdc\" includeMDC=\"true\"\n        facility=\"LOCAL5\" enterpriseNumber=\"18060\" newLine=\"true\" exceptionPattern=\"%rEx{full}\"\n        messageId=\"[${sys:user.name}:${sys:logging.sensitivity}]\" id=\"storm\" immediateFail=\"true\" immediateFlush=\"true\"/>\n</appenders>\n<loggers>\n    <root level=\"info\"> <!-- We log everything -->\n        <appender-ref ref=\"A1\"/>\n        <appender-ref ref=\"syslog\"/>\n    </root>\n    <Logger name=\"org.apache.storm.metric.LoggingMetricsConsumer\" level=\"info\" additivity=\"false\">\n        <appender-ref ref=\"METRICS\"/>\n    </Logger>\n    <Logger name=\"STDERR\" level=\"INFO\">\n        <appender-ref ref=\"STDERR\"/>\n        <appender-ref ref=\"syslog\"/>\n    </Logger>\n    <Logger name=\"STDOUT\" level=\"INFO\">\n        <appender-ref ref=\"STDOUT\"/>\n        <appender-ref ref=\"syslog\"/>\n    </Logger>\n</loggers>\n</configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.storm.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.storm.policy.pollIntervalMs" : "30000",
            "ranger.plugin.storm.policy.rest.ssl.config.file" : "/usr/hdp/current/storm-client/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.storm.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.storm.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.storm.service.name" : "{{repo_name}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/storm-client/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-storm-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/storm-client/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-storm-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-atlas-application.properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "atlas.hook.storm.numRetries" : "3"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-site",
          "tag" : "version1518207504267",
          "version" : 3,
          "properties" : {
            "_storm.min.ruid" : "null",
            "_storm.thrift.nonsecure.transport" : "org.apache.storm.security.auth.SimpleTransportPlugin",
            "_storm.thrift.secure.transport" : "org.apache.storm.security.auth.kerberos.KerberosSaslTransportPlugin",
            "atlas.cluster.name" : "{{cluster_name}}",
            "client.jartransformer.class" : "org.apache.storm.hack.StormShadeTransformer",
            "dev.zookeeper.path" : "/tmp/dev-storm-zookeeper",
            "drpc.childopts" : "-Xmx220m",
            "drpc.invocations.port" : "3773",
            "drpc.port" : "3772",
            "drpc.queue.size" : "128",
            "drpc.request.timeout.secs" : "600",
            "drpc.worker.threads" : "64",
            "java.library.path" : "/usr/local/lib:/opt/local/lib:/usr/lib:/usr/hdp/current/storm-client/lib",
            "logviewer.appender.name" : "A1",
            "logviewer.childopts" : "-Xmx128m _JAAS_PLACEHOLDER",
            "logviewer.port" : "8005",
            "metrics.reporter.register" : "org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter",
            "nimbus.childopts" : "-Xmx220m -javaagent:/usr/hdp/current/storm-client/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=sandbox.hortonworks.com,port=8649,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-client/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Nimbus_JVM",
            "nimbus.cleanup.inbox.freq.secs" : "600",
            "nimbus.file.copy.expiration.secs" : "600",
            "nimbus.inbox.jar.expiration.secs" : "3600",
            "nimbus.monitor.freq.secs" : "120",
            "nimbus.reassign" : "true",
            "nimbus.seeds" : "['sandbox.hortonworks.com']",
            "nimbus.supervisor.timeout.secs" : "60",
            "nimbus.task.launch.secs" : "120",
            "nimbus.task.timeout.secs" : "30",
            "nimbus.thrift.max_buffer_size" : "1048576",
            "nimbus.thrift.port" : "6627",
            "nimbus.thrift.threads" : "196",
            "nimbus.topology.validator" : "org.apache.storm.nimbus.DefaultTopologyValidator",
            "storm.cluster.metrics.consumer.register" : "[{\"class\": \"org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter\"}]",
            "storm.cluster.mode" : "distributed",
            "storm.local.dir" : "/hadoop/storm",
            "storm.local.mode.zmq" : "false",
            "storm.log.dir" : "{{log_dir}}",
            "storm.messaging.netty.buffer_size" : "5242880",
            "storm.messaging.netty.client_worker_threads" : "1",
            "storm.messaging.netty.max_retries" : "30",
            "storm.messaging.netty.max_wait_ms" : "1000",
            "storm.messaging.netty.min_wait_ms" : "100",
            "storm.messaging.netty.server_worker_threads" : "1",
            "storm.messaging.transport" : "org.apache.storm.messaging.netty.Context",
            "storm.thrift.transport" : "{{storm_thrift_transport}}",
            "storm.topology.submission.notifier.plugin.class" : "org.apache.atlas.storm.hook.StormAtlasHook",
            "storm.zookeeper.connection.timeout" : "15000",
            "storm.zookeeper.port" : "2181",
            "storm.zookeeper.retry.interval" : "1000",
            "storm.zookeeper.retry.intervalceiling.millis" : "30000",
            "storm.zookeeper.retry.times" : "5",
            "storm.zookeeper.root" : "/storm",
            "storm.zookeeper.servers" : "['sandbox.hortonworks.com']",
            "storm.zookeeper.session.timeout" : "20000",
            "supervisor.childopts" : "-Xmx256m _JAAS_PLACEHOLDER -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port={{jmxremote_port}} -javaagent:/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=localhost,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Supervisor_JVM",
            "supervisor.heartbeat.frequency.secs" : "5",
            "supervisor.monitor.frequency.secs" : "3",
            "supervisor.slots.ports" : "[6700, 6701]",
            "supervisor.worker.start.timeout.secs" : "120",
            "supervisor.worker.timeout.secs" : "30",
            "task.heartbeat.frequency.secs" : "3",
            "task.refresh.poll.secs" : "10",
            "topology.acker.executors" : "null",
            "topology.builtin.metrics.bucket.size.secs" : "60",
            "topology.debug" : "false",
            "topology.disruptor.wait.strategy" : "com.lmax.disruptor.BlockingWaitStrategy",
            "topology.enable.message.timeouts" : "true",
            "topology.error.throttle.interval.secs" : "10",
            "topology.executor.receive.buffer.size" : "1024",
            "topology.executor.send.buffer.size" : "1024",
            "topology.fall.back.on.java.serialization" : "true",
            "topology.kryo.factory" : "org.apache.storm.serialization.DefaultKryoFactory",
            "topology.max.error.report.per.interval" : "5",
            "topology.max.replication.wait.time.sec" : "{{actual_topology_max_replication_wait_time_sec}}",
            "topology.max.replication.wait.time.sec.default" : "60",
            "topology.max.spout.pending" : "1000",
            "topology.max.task.parallelism" : "null",
            "topology.message.timeout.secs" : "30",
            "topology.metrics.aggregate.metric.evict.secs" : "5",
            "topology.metrics.aggregate.per.worker" : "true",
            "topology.metrics.consumer.register" : "[{\"class\": \"org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsSink\", \"parallelism.hint\": 1, \"whitelist\": [\"kafkaOffset\\\\..+/\", \"__complete-latency\", \"__process-latency\", \"__receive\\\\.population$\", \"__sendqueue\\\\.population$\", \"__execute-count\", \"__emit-count\", \"__ack-count\", \"__fail-count\", \"memory/heap\\\\.usedBytes$\", \"memory/nonHeap\\\\.usedBytes$\", \"GC/.+\\\\.count$\", \"GC/.+\\\\.timeMs$\"]}]",
            "topology.metrics.expand.map.type" : "true",
            "topology.metrics.metric.name.separator" : ".",
            "topology.min.replication.count" : "{{actual_topology_min_replication_count}}",
            "topology.min.replication.count.default" : "1",
            "topology.optimize" : "true",
            "topology.receiver.buffer.size" : "8",
            "topology.skip.missing.kryo.registrations" : "false",
            "topology.sleep.spout.wait.strategy.time.ms" : "1",
            "topology.spout.wait.strategy" : "org.apache.storm.spout.SleepSpoutWaitStrategy",
            "topology.state.synchronization.timeout.secs" : "60",
            "topology.stats.sample.rate" : "0.05",
            "topology.tick.tuple.freq.secs" : "null",
            "topology.transfer.buffer.size" : "1024",
            "topology.trident.batch.emit.interval.millis" : "500",
            "topology.tuple.serializer" : "org.apache.storm.serialization.types.ListDelegateSerializer",
            "topology.worker.childopts" : "null",
            "topology.worker.shared.thread.pool.size" : "4",
            "topology.workers" : "1",
            "transactional.zookeeper.port" : "null",
            "transactional.zookeeper.root" : "/transactional",
            "transactional.zookeeper.servers" : "null",
            "ui.childopts" : "-Xmx220m",
            "ui.filter" : "null",
            "ui.port" : "8744",
            "worker.childopts" : "-Xmx768m _JAAS_PLACEHOLDER -javaagent:/usr/hdp/current/storm-client/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=localhost,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-client/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Worker_%ID%_JVM",
            "worker.heartbeat.frequency.secs" : "1",
            "zmq.hwm" : "0",
            "zmq.linger.millis" : "5000",
            "zmq.threads" : "1"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1518207504761,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 3,
      "service_config_version_note" : "",
      "service_name" : "STORM",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=STORM&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n      #!/bin/bash\n\n      # Set Storm specific environment variables here.\n\n      # The java implementation to use.\n      export JAVA_HOME={{java64_home}}\n\n      export STORM_CONF_DIR={{conf_dir}}\n      export STORM_HOME={{storm_component_home_dir}}\n\n      export STORM_JAR_JVM_OPTS={{jar_jvm_opts}}",
            "jmxremote_port" : "56431",
            "nimbus_seeds_supported" : "true",
            "storm_log_dir" : "/var/log/storm",
            "storm_logs_supported" : "true",
            "storm_pid_dir" : "/var/run/storm",
            "storm_user" : "storm",
            "storm_user_nofile_limit" : "128000",
            "storm_user_nproc_limit" : "65536"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "_storm.min.ruid" : "null",
            "_storm.thrift.nonsecure.transport" : "org.apache.storm.security.auth.SimpleTransportPlugin",
            "_storm.thrift.secure.transport" : "org.apache.storm.security.auth.kerberos.KerberosSaslTransportPlugin",
            "atlas.cluster.name" : "{{cluster_name}}",
            "client.jartransformer.class" : "org.apache.storm.hack.StormShadeTransformer",
            "dev.zookeeper.path" : "/tmp/dev-storm-zookeeper",
            "drpc.childopts" : "-Xmx220m",
            "drpc.invocations.port" : "3773",
            "drpc.port" : "3772",
            "drpc.queue.size" : "128",
            "drpc.request.timeout.secs" : "600",
            "drpc.worker.threads" : "64",
            "java.library.path" : "/usr/local/lib:/opt/local/lib:/usr/lib:/usr/hdp/current/storm-client/lib",
            "logviewer.appender.name" : "A1",
            "logviewer.childopts" : "-Xmx128m _JAAS_PLACEHOLDER",
            "logviewer.port" : "8005",
            "metrics.reporter.register" : "org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter",
            "nimbus.childopts" : "-Xmx220m -javaagent:/usr/hdp/current/storm-client/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=sandbox.hortonworks.com,port=8649,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-client/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Nimbus_JVM",
            "nimbus.cleanup.inbox.freq.secs" : "600",
            "nimbus.file.copy.expiration.secs" : "600",
            "nimbus.inbox.jar.expiration.secs" : "3600",
            "nimbus.monitor.freq.secs" : "120",
            "nimbus.reassign" : "true",
            "nimbus.seeds" : "[sandbox.hortonworks.com]",
            "nimbus.supervisor.timeout.secs" : "60",
            "nimbus.task.launch.secs" : "120",
            "nimbus.task.timeout.secs" : "30",
            "nimbus.thrift.max_buffer_size" : "1048576",
            "nimbus.thrift.port" : "6627",
            "nimbus.thrift.threads" : "196",
            "nimbus.topology.validator" : "org.apache.storm.nimbus.DefaultTopologyValidator",
            "storm.cluster.metrics.consumer.register" : "[{\"class\": \"org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsReporter\"}]",
            "storm.cluster.mode" : "distributed",
            "storm.local.dir" : "/hadoop/storm",
            "storm.local.mode.zmq" : "false",
            "storm.log.dir" : "{{log_dir}}",
            "storm.messaging.netty.buffer_size" : "5242880",
            "storm.messaging.netty.client_worker_threads" : "1",
            "storm.messaging.netty.max_retries" : "30",
            "storm.messaging.netty.max_wait_ms" : "1000",
            "storm.messaging.netty.min_wait_ms" : "100",
            "storm.messaging.netty.server_worker_threads" : "1",
            "storm.messaging.transport" : "org.apache.storm.messaging.netty.Context",
            "storm.thrift.transport" : "{{storm_thrift_transport}}",
            "storm.topology.submission.notifier.plugin.class" : "org.apache.atlas.storm.hook.StormAtlasHook",
            "storm.zookeeper.connection.timeout" : "15000",
            "storm.zookeeper.port" : "2181",
            "storm.zookeeper.retry.interval" : "1000",
            "storm.zookeeper.retry.intervalceiling.millis" : "30000",
            "storm.zookeeper.retry.times" : "5",
            "storm.zookeeper.root" : "/storm",
            "storm.zookeeper.servers" : "['sandbox.hortonworks.com']",
            "storm.zookeeper.session.timeout" : "20000",
            "supervisor.childopts" : "-Xmx256m _JAAS_PLACEHOLDER -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port={{jmxremote_port}} -javaagent:/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=localhost,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-supervisor/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Supervisor_JVM",
            "supervisor.heartbeat.frequency.secs" : "5",
            "supervisor.monitor.frequency.secs" : "3",
            "supervisor.slots.ports" : "[6700, 6701]",
            "supervisor.worker.start.timeout.secs" : "120",
            "supervisor.worker.timeout.secs" : "30",
            "task.heartbeat.frequency.secs" : "3",
            "task.refresh.poll.secs" : "10",
            "topology.acker.executors" : "null",
            "topology.builtin.metrics.bucket.size.secs" : "60",
            "topology.debug" : "false",
            "topology.disruptor.wait.strategy" : "com.lmax.disruptor.BlockingWaitStrategy",
            "topology.enable.message.timeouts" : "true",
            "topology.error.throttle.interval.secs" : "10",
            "topology.executor.receive.buffer.size" : "1024",
            "topology.executor.send.buffer.size" : "1024",
            "topology.fall.back.on.java.serialization" : "true",
            "topology.kryo.factory" : "org.apache.storm.serialization.DefaultKryoFactory",
            "topology.max.error.report.per.interval" : "5",
            "topology.max.replication.wait.time.sec" : "{{actual_topology_max_replication_wait_time_sec}}",
            "topology.max.replication.wait.time.sec.default" : "60",
            "topology.max.spout.pending" : "1000",
            "topology.max.task.parallelism" : "null",
            "topology.message.timeout.secs" : "30",
            "topology.metrics.aggregate.metric.evict.secs" : "5",
            "topology.metrics.aggregate.per.worker" : "true",
            "topology.metrics.consumer.register" : "[{\"class\": \"org.apache.hadoop.metrics2.sink.storm.StormTimelineMetricsSink\", \"parallelism.hint\": 1, \"whitelist\": [\"kafkaOffset\\\\..+/\", \"__complete-latency\", \"__process-latency\", \"__receive\\\\.population$\", \"__sendqueue\\\\.population$\", \"__execute-count\", \"__emit-count\", \"__ack-count\", \"__fail-count\", \"memory/heap\\\\.usedBytes$\", \"memory/nonHeap\\\\.usedBytes$\", \"GC/.+\\\\.count$\", \"GC/.+\\\\.timeMs$\"]}]",
            "topology.metrics.expand.map.type" : "true",
            "topology.metrics.metric.name.separator" : ".",
            "topology.min.replication.count" : "{{actual_topology_min_replication_count}}",
            "topology.min.replication.count.default" : "1",
            "topology.optimize" : "true",
            "topology.receiver.buffer.size" : "8",
            "topology.skip.missing.kryo.registrations" : "false",
            "topology.sleep.spout.wait.strategy.time.ms" : "1",
            "topology.spout.wait.strategy" : "org.apache.storm.spout.SleepSpoutWaitStrategy",
            "topology.state.synchronization.timeout.secs" : "60",
            "topology.stats.sample.rate" : "0.05",
            "topology.tick.tuple.freq.secs" : "null",
            "topology.transfer.buffer.size" : "1024",
            "topology.trident.batch.emit.interval.millis" : "500",
            "topology.tuple.serializer" : "org.apache.storm.serialization.types.ListDelegateSerializer",
            "topology.worker.childopts" : "null",
            "topology.worker.shared.thread.pool.size" : "4",
            "topology.workers" : "1",
            "transactional.zookeeper.port" : "null",
            "transactional.zookeeper.root" : "/transactional",
            "transactional.zookeeper.servers" : "null",
            "ui.childopts" : "-Xmx220m",
            "ui.filter" : "null",
            "ui.port" : "8744",
            "worker.childopts" : "-Xmx768m _JAAS_PLACEHOLDER -javaagent:/usr/hdp/current/storm-client/contrib/storm-jmxetric/lib/jmxetric-1.0.4.jar=host=localhost,port=8650,wireformat31x=true,mode=multicast,config=/usr/hdp/current/storm-client/contrib/storm-jmxetric/conf/jmxetric-conf.xml,process=Worker_%ID%_JVM",
            "worker.heartbeat.frequency.secs" : "1",
            "zmq.hwm" : "0",
            "zmq.linger.millis" : "5000",
            "zmq.threads" : "1"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-storm-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "stormtestuser@EXAMPLE.COM",
            "common.name.for.certificate" : "",
            "policy_user" : "storm",
            "ranger-storm-plugin-enabled" : "No"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-atlas-application.properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "atlas.hook.storm.numRetries" : "3"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/storm-client/conf/ranger-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-storm-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/storm-client/conf/ranger-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-storm-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-worker-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<configuration monitorInterval=\"60\">\n<properties>\n    <property name=\"pattern\">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} [%p] %msg%n</property>\n    <property name=\"patternNoTime\">%msg%n</property>\n    <property name=\"patternMetrics\">%d %-8r %m%n</property>\n</properties>\n<appenders>\n    <RollingFile name=\"A1\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"STDOUT\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.out\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.out.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternNoTime}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"4\"/>\n    </RollingFile>\n    <RollingFile name=\"STDERR\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.err\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.err.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternNoTime}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"4\"/>\n    </RollingFile>\n    <RollingFile name=\"METRICS\"\n\t\tfileName=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics\"\n\t\tfilePattern=\"${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics.%i.gz\">\n        <PatternLayout>\n            <pattern>${patternMetrics}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"2 MB\"/>\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <Syslog name=\"syslog\" format=\"RFC5424\" charset=\"UTF-8\" host=\"localhost\" port=\"514\"\n        protocol=\"UDP\" appName=\"[${sys:storm.id}:${sys:worker.port}]\" mdcId=\"mdc\" includeMDC=\"true\"\n        facility=\"LOCAL5\" enterpriseNumber=\"18060\" newLine=\"true\" exceptionPattern=\"%rEx{full}\"\n        messageId=\"[${sys:user.name}:${sys:logging.sensitivity}]\" id=\"storm\" immediateFail=\"true\" immediateFlush=\"true\"/>\n</appenders>\n<loggers>\n    <root level=\"info\"> <!-- We log everything -->\n        <appender-ref ref=\"A1\"/>\n        <appender-ref ref=\"syslog\"/>\n    </root>\n    <Logger name=\"org.apache.storm.metric.LoggingMetricsConsumer\" level=\"info\" additivity=\"false\">\n        <appender-ref ref=\"METRICS\"/>\n    </Logger>\n    <Logger name=\"STDERR\" level=\"INFO\">\n        <appender-ref ref=\"STDERR\"/>\n        <appender-ref ref=\"syslog\"/>\n    </Logger>\n    <Logger name=\"STDOUT\" level=\"INFO\">\n        <appender-ref ref=\"STDOUT\"/>\n        <appender-ref ref=\"syslog\"/>\n    </Logger>\n</loggers>\n</configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "storm-cluster-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n<configuration monitorInterval=\"60\">\n<properties>\n    <property name=\"pattern\">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} [%p] %msg%n</property>\n</properties>\n<appenders>\n    <RollingFile name=\"A1\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/${sys:logfile.name}\"\n                 filePattern=\"${sys:storm.log.dir}/${sys:logfile.name}.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"WEB-ACCESS\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/access-web-${sys:daemon.name}.log\"\n                 filePattern=\"${sys:storm.log.dir}/access-web-${sys:daemon.name}.log.%i.gz\">\n        <PatternLayout>\n            <pattern>${pattern}</pattern>\n        </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <RollingFile name=\"THRIFT-ACCESS\" immediateFlush=\"false\"\n                 fileName=\"${sys:storm.log.dir}/access-${sys:logfile.name}\"\n                 filePattern=\"${sys:storm.log.dir}/access-${sys:logfile.name}.%i.gz\">\n    <PatternLayout>\n        <pattern>${pattern}</pattern>\n    </PatternLayout>\n        <Policies>\n            <SizeBasedTriggeringPolicy size=\"100 MB\"/> <!-- Or every 100 MB -->\n        </Policies>\n        <DefaultRolloverStrategy max=\"9\"/>\n    </RollingFile>\n    <Syslog name=\"syslog\" format=\"RFC5424\" charset=\"UTF-8\" host=\"localhost\" port=\"514\"\n            protocol=\"UDP\" appName=\"[${sys:daemon.name}]\" mdcId=\"mdc\" includeMDC=\"true\"\n            facility=\"LOCAL5\" enterpriseNumber=\"18060\" newLine=\"true\" exceptionPattern=\"%rEx{full}\"\n            messageId=\"[${sys:user.name}:S0]\" id=\"storm\" immediateFlush=\"true\" immediateFail=\"true\"/>\n</appenders>\n<loggers>\n\n    <Logger name=\"org.apache.storm.logging.filters.AccessLoggingFilter\" level=\"info\" additivity=\"false\">\n        <AppenderRef ref=\"WEB-ACCESS\"/>\n        <AppenderRef ref=\"syslog\"/>\n    </Logger>\n    <Logger name=\"org.apache.storm.logging.ThriftAccessLogger\" level=\"info\" additivity=\"false\">\n        <AppenderRef ref=\"THRIFT-ACCESS\"/>\n        <AppenderRef ref=\"syslog\"/>\n    </Logger>\n    <root level=\"info\"> <!-- We log everything -->\n        <appender-ref ref=\"A1\"/>\n        <appender-ref ref=\"syslog\"/>\n    </root>\n</loggers>\n</configuration>"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.storm.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.storm.policy.pollIntervalMs" : "30000",
            "ranger.plugin.storm.policy.rest.ssl.config.file" : "/usr/hdp/current/storm-client/conf/ranger-policymgr-ssl.xml",
            "ranger.plugin.storm.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.storm.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.storm.service.name" : "{{repo_name}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-storm-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/storm/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/storm/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380379377,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "STORM",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=TEZ&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "tez-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n# Tez specific configuration\nexport TEZ_CONF_DIR={{config_dir}}\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}",
            "tez_user" : "tez"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "tez-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "tez.am.am-rm.heartbeat.interval-ms.max" : "250",
            "tez.am.container.idle.release-timeout-max.millis" : "20000",
            "tez.am.container.idle.release-timeout-min.millis" : "10000",
            "tez.am.container.reuse.enabled" : "true",
            "tez.am.container.reuse.locality.delay-allocation-millis" : "250",
            "tez.am.container.reuse.non-local-fallback.enabled" : "false",
            "tez.am.container.reuse.rack-fallback.enabled" : "true",
            "tez.am.java.opts" : "-server -Xmx200m -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC",
            "tez.am.launch.cluster-default.cmd-opts" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "tez.am.launch.cmd-opts" : "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
            "tez.am.launch.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
            "tez.am.log.level" : "INFO",
            "tez.am.max.app.attempts" : "2",
            "tez.am.maxtaskfailures.per.node" : "10",
            "tez.am.resource.memory.mb" : "256",
            "tez.am.tez-ui.history-url.template" : "__HISTORY_URL_BASE__?viewPath=%2F%23%2Ftez-app%2F__APPLICATION_ID__",
            "tez.am.view-acls" : "*",
            "tez.cluster.additional.classpath.prefix" : "/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
            "tez.counters.max" : "10000",
            "tez.counters.max.groups" : "3000",
            "tez.dag.am.resource.memory.mb" : "250",
            "tez.generate.debug.artifacts" : "false",
            "tez.grouping.max-size" : "1073741824",
            "tez.grouping.min-size" : "16777216",
            "tez.grouping.split-waves" : "1.7",
            "tez.history.logging.service.class" : "org.apache.tez.dag.history.logging.ats.ATSV15HistoryLoggingService",
            "tez.lib.uris" : "/hdp/apps/${hdp.version}/tez/tez.tar.gz",
            "tez.queue.name" : "default",
            "tez.runtime.compress" : "true",
            "tez.runtime.compress.codec" : "org.apache.hadoop.io.compress.SnappyCodec",
            "tez.runtime.convert.user-payload.to.history-text" : "false",
            "tez.runtime.io.sort.mb" : "150",
            "tez.runtime.optimize.local.fetch" : "true",
            "tez.runtime.pipelined.sorter.sort.threads" : "2",
            "tez.runtime.shuffle.fetch.buffer.percent" : "0.6",
            "tez.runtime.shuffle.memory.limit.percent" : "0.25",
            "tez.runtime.sorter.class" : "PIPELINED",
            "tez.runtime.unordered.output.buffer.size-mb" : "844",
            "tez.session.am.dag.submit.timeout.secs" : "600",
            "tez.session.client.timeout.secs" : "-1",
            "tez.shuffle-vertex-manager.max-src-fraction" : "0.4",
            "tez.shuffle-vertex-manager.min-src-fraction" : "0.2",
            "tez.staging-dir" : "/tmp/${user.name}/staging",
            "tez.task.am.heartbeat.counter.interval-ms.max" : "4000",
            "tez.task.generate.counters.per.io" : "true",
            "tez.task.get-task.sleep.interval-ms.max" : "200",
            "tez.task.launch.cluster-default.cmd-opts" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
            "tez.task.launch.cmd-opts" : "-Xmx256m",
            "tez.task.launch.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
            "tez.task.max-events-per-heartbeat" : "500",
            "tez.task.resource.memory.mb" : "256",
            "tez.use.cluster.hadoop-libs" : "false",
            "yarn.app.mapreduce.am.command-opts" : "-Xmx200m"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380367778,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "TEZ",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=VNC&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "vnc-config",
          "tag" : "version1518208266271",
          "version" : 2,
          "properties" : {
            "eclipse.location" : "http://ftp.osuosl.org/pub/eclipse/technology/epp/downloads/release/neon/R/eclipse-java-neon-R-linux-gtk-x86_64.tar.gz",
            "install.eclipse" : "true",
            "install.intellij" : "false",
            "install.mvn" : "false",
            "install.spark" : "false",
            "intellij.location" : "https://download-cf.jetbrains.com/idea/ideaIC-2016.2.1.tar.gz",
            "log.file" : "/var/log/vnc-stack.log",
            "spark.location" : "http://public-repo-1.hortonworks.com/HDP-LABS/Projects/spark/1.2.0/spark-1.2.0.2.2.0.0-82-bin-2.6.0.2.2.0.0-2041.tgz",
            "vnc.geometry" : "1400x860",
            "vnc.password" : "SECRET:vnc-config:2:vnc.password",
            "vnc.user" : "root"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "vnc-env",
          "tag" : "version1518208266271",
          "version" : 2,
          "properties" : {
            "content" : "\n#users\nVNCSERVERS=\"1:{{vnc_user}}\"\n\n# user 1's VNC options\nVNCSERVERARGS[1]=\"-geometry {{vnc_geometry}}\""
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1518208266931,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : "Initial configurations for VNC Server",
      "service_name" : "VNC",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=YARN&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-yarn-plugin-properties",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-yarn-plugin-properties:1:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "yarn",
            "common.name.for.certificate" : "",
            "hadoop.rpc.protection" : "",
            "policy_user" : "ambari-qa",
            "ranger-yarn-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "capacity-scheduler",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "yarn.scheduler.capacity.default.minimum-user-limit-percent" : "100",
            "yarn.scheduler.capacity.maximum-am-resource-percent" : "0.5",
            "yarn.scheduler.capacity.maximum-applications" : "10000",
            "yarn.scheduler.capacity.node-locality-delay" : "40",
            "yarn.scheduler.capacity.resource-calculator" : "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
            "yarn.scheduler.capacity.root.accessible-node-labels" : "*",
            "yarn.scheduler.capacity.root.acl_administer_queue" : "*",
            "yarn.scheduler.capacity.root.capacity" : "100",
            "yarn.scheduler.capacity.root.default.acl_administer_jobs" : "*",
            "yarn.scheduler.capacity.root.default.acl_submit_applications" : "*",
            "yarn.scheduler.capacity.root.default.capacity" : "100",
            "yarn.scheduler.capacity.root.default.maximum-am-resource-percent" : "0.75",
            "yarn.scheduler.capacity.root.default.maximum-capacity" : "100",
            "yarn.scheduler.capacity.root.default.state" : "RUNNING",
            "yarn.scheduler.capacity.root.default.user-limit-factor" : "1",
            "yarn.scheduler.capacity.root.queues" : "default"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "yarn-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "apptimelineserver_heapsize" : "250",
            "content" : "\n      export HADOOP_YARN_HOME={{hadoop_yarn_home}}\n      export YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\n      export YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\n      export HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n      export JAVA_HOME={{java64_home}}\n      export JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"\n\n      # We need to add the EWMA appender for the yarn daemons only;\n      # however, YARN_ROOT_LOGGER is shared by the yarn client and the\n      # daemons. This is restrict the EWMA appender to daemons only.\n      INVOKER=\"${0##*/}\"\n      if [ \"$INVOKER\" == \"yarn-daemon.sh\" ]; then\n        export YARN_ROOT_LOGGER=${YARN_ROOT_LOGGER:-INFO,EWMA,RFA}\n      fi\n\n      # User for YARN daemons\n      export HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n      # resolve links - $0 may be a softlink\n      export YARN_CONF_DIR=\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\"\n\n      # some Java parameters\n      # export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n      if [ \"$JAVA_HOME\" != \"\" ]; then\n      #echo \"run java in $JAVA_HOME\"\n      JAVA_HOME=$JAVA_HOME\n      fi\n\n      if [ \"$JAVA_HOME\" = \"\" ]; then\n      echo \"Error: JAVA_HOME is not set.\"\n      exit 1\n      fi\n\n      JAVA=$JAVA_HOME/bin/java\n      JAVA_HEAP_MAX=-Xmx1000m\n\n      # For setting YARN specific HEAP sizes please use this\n      # Parameter and set appropriately\n      YARN_HEAPSIZE={{yarn_heapsize}}\n\n      # check envvars which might override default args\n      if [ \"$YARN_HEAPSIZE\" != \"\" ]; then\n      JAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\n      fi\n\n      # Resource Manager specific parameters\n\n      # Specify the max Heapsize for the ResourceManager using a numerical value\n      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n      # the value to 1000.\n      # This value will be overridden by an Xmx setting specified in either YARN_OPTS\n      # and/or YARN_RESOURCEMANAGER_OPTS.\n      # If not specified, the default value will be picked from either YARN_HEAPMAX\n      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\n      export YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n      # Specify the JVM options to be used when starting the ResourceManager.\n      # These options will be appended to the options specified as YARN_OPTS\n      # and therefore may override any similar flags set in YARN_OPTS\n      #export YARN_RESOURCEMANAGER_OPTS=\n\n      # Node Manager specific parameters\n\n      # Specify the max Heapsize for the NodeManager using a numerical value\n      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n      # the value to 1000.\n      # This value will be overridden by an Xmx setting specified in either YARN_OPTS\n      # and/or YARN_NODEMANAGER_OPTS.\n      # If not specified, the default value will be picked from either YARN_HEAPMAX\n      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\n      export YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n      # Specify the max Heapsize for the timeline server using a numerical value\n      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n      # the value to 1024.\n      # This value will be overridden by an Xmx setting specified in either YARN_OPTS\n      # and/or YARN_TIMELINESERVER_OPTS.\n      # If not specified, the default value will be picked from either YARN_HEAPMAX\n      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\n      export YARN_TIMELINESERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n      # Specify the JVM options to be used when starting the NodeManager.\n      # These options will be appended to the options specified as YARN_OPTS\n      # and therefore may override any similar flags set in YARN_OPTS\n      #export YARN_NODEMANAGER_OPTS=\n\n      # so that filenames w/ spaces are handled correctly in loops below\n      IFS=\n\n\n      # default log directory and file\n      if [ \"$YARN_LOG_DIR\" = \"\" ]; then\n      YARN_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\n      fi\n      if [ \"$YARN_LOGFILE\" = \"\" ]; then\n      YARN_LOGFILE='yarn.log'\n      fi\n\n      # default policy file for service-level authorization\n      if [ \"$YARN_POLICYFILE\" = \"\" ]; then\n      YARN_POLICYFILE=\"hadoop-policy.xml\"\n      fi\n\n      # restore ordinary behaviour\n      unset IFS\n\n\n      YARN_OPTS=\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\"\n      YARN_OPTS=\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\n      YARN_OPTS=\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\n      export YARN_NODEMANAGER_OPTS=\"$YARN_NODEMANAGER_OPTS -Dnm.audit.logger=INFO,NMAUDIT\"\n      export YARN_RESOURCEMANAGER_OPTS=\"$YARN_RESOURCEMANAGER_OPTS -Drm.audit.logger=INFO,RMAUDIT\"\n      if [ \"x$JAVA_LIBRARY_PATH\" != \"x\" ]; then\n      YARN_OPTS=\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\"\n      fi\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"\n      YARN_OPTS=\"$YARN_OPTS -Djava.io.tmpdir={{hadoop_java_io_tmpdir}}\"",
            "is_supported_yarn_ranger" : "true",
            "min_user_id" : "500",
            "nodemanager_heapsize" : "512",
            "resourcemanager_heapsize" : "250",
            "service_check.queue.name" : "default",
            "yarn_cgroups_enabled" : "false",
            "yarn_heapsize" : "250",
            "yarn_log_dir_prefix" : "/var/log/hadoop-yarn",
            "yarn_pid_dir_prefix" : "/var/run/hadoop-yarn",
            "yarn_user" : "yarn",
            "yarn_user_nofile_limit" : "32768",
            "yarn_user_nproc_limit" : "65536"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "yarn-site",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "hadoop.registry.rm.enabled" : "true",
            "hadoop.registry.zk.quorum" : "%HOSTGROUP::host_group_1%:2181",
            "yarn.acl.enable" : "true",
            "yarn.admin.acl" : "*",
            "yarn.application.classpath" : "$HADOOP_CONF_DIR,/usr/hdp/current/hadoop-client/*,/usr/hdp/current/hadoop-client/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*",
            "yarn.authorization-provider" : "org.apache.ranger.authorization.yarn.authorizer.RangerYarnAuthorizer",
            "yarn.client.nodemanager-connect.max-wait-ms" : "120000",
            "yarn.client.nodemanager-connect.retry-interval-ms" : "10000",
            "yarn.http.policy" : "HTTP_ONLY",
            "yarn.log-aggregation-enable" : "true",
            "yarn.log-aggregation.retain-seconds" : "2592000",
            "yarn.log.server.url" : "http://%HOSTGROUP::host_group_1%:19888/jobhistory/logs",
            "yarn.node-labels.enabled" : "false",
            "yarn.node-labels.fs-store.retry-policy-spec" : "2000, 500",
            "yarn.node-labels.fs-store.root-dir" : "/system/yarn/node-labels",
            "yarn.nodemanager.address" : "0.0.0.0:45454",
            "yarn.nodemanager.admin-env" : "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
            "yarn.nodemanager.aux-services" : "mapreduce_shuffle,spark_shuffle,spark2_shuffle",
            "yarn.nodemanager.aux-services.mapreduce_shuffle.class" : "org.apache.hadoop.mapred.ShuffleHandler",
            "yarn.nodemanager.aux-services.spark2_shuffle.class" : "org.apache.spark.network.yarn.YarnShuffleService",
            "yarn.nodemanager.aux-services.spark2_shuffle.classpath" : "/usr/hdp/${hdp.version}/spark2/aux/*",
            "yarn.nodemanager.aux-services.spark_shuffle.class" : "org.apache.spark.network.yarn.YarnShuffleService",
            "yarn.nodemanager.aux-services.spark_shuffle.classpath" : "/usr/hdp/${hdp.version}/spark/aux/*",
            "yarn.nodemanager.bind-host" : "0.0.0.0",
            "yarn.nodemanager.container-executor.class" : "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
            "yarn.nodemanager.container-metrics.unregister-delay-ms" : "60000",
            "yarn.nodemanager.container-monitor.interval-ms" : "3000",
            "yarn.nodemanager.delete.debug-delay-sec" : "0",
            "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage" : "90",
            "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb" : "1000",
            "yarn.nodemanager.disk-health-checker.min-healthy-disks" : "0.25",
            "yarn.nodemanager.health-checker.interval-ms" : "135000",
            "yarn.nodemanager.health-checker.script.timeout-ms" : "120000",
            "yarn.nodemanager.linux-container-executor.cgroups.hierarchy" : "hadoop-yarn",
            "yarn.nodemanager.linux-container-executor.cgroups.mount" : "false",
            "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage" : "false",
            "yarn.nodemanager.linux-container-executor.group" : "hadoop",
            "yarn.nodemanager.linux-container-executor.resources-handler.class" : "org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler",
            "yarn.nodemanager.local-dirs" : "/hadoop/yarn/local",
            "yarn.nodemanager.log-aggregation.compression-type" : "gz",
            "yarn.nodemanager.log-aggregation.debug-enabled" : "false",
            "yarn.nodemanager.log-aggregation.num-log-files-per-app" : "30",
            "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds" : "-1",
            "yarn.nodemanager.log-dirs" : "/hadoop/yarn/log",
            "yarn.nodemanager.log.retain-second" : "604800",
            "yarn.nodemanager.pmem-check-enabled" : "false",
            "yarn.nodemanager.recovery.dir" : "{{yarn_log_dir_prefix}}/nodemanager/recovery-state",
            "yarn.nodemanager.recovery.enabled" : "true",
            "yarn.nodemanager.remote-app-log-dir" : "/app-logs",
            "yarn.nodemanager.remote-app-log-dir-suffix" : "logs",
            "yarn.nodemanager.resource.cpu-vcores" : "8",
            "yarn.nodemanager.resource.memory-mb" : "2250",
            "yarn.nodemanager.resource.percentage-physical-cpu-limit" : "80",
            "yarn.nodemanager.vmem-check-enabled" : "false",
            "yarn.nodemanager.vmem-pmem-ratio" : "10",
            "yarn.resourcemanager.address" : "%HOSTGROUP::host_group_1%:8050",
            "yarn.resourcemanager.admin.address" : "%HOSTGROUP::host_group_1%:8141",
            "yarn.resourcemanager.am.max-attempts" : "2",
            "yarn.resourcemanager.bind-host" : "0.0.0.0",
            "yarn.resourcemanager.connect.max-wait.ms" : "900000",
            "yarn.resourcemanager.connect.retry-interval.ms" : "30000",
            "yarn.resourcemanager.fs.state-store.retry-policy-spec" : "2000, 500",
            "yarn.resourcemanager.fs.state-store.uri" : " ",
            "yarn.resourcemanager.ha.enabled" : "false",
            "yarn.resourcemanager.hostname" : "%HOSTGROUP::host_group_1%",
            "yarn.resourcemanager.nodes.exclude-path" : "/etc/hadoop/conf/yarn.exclude",
            "yarn.resourcemanager.recovery.enabled" : "false",
            "yarn.resourcemanager.resource-tracker.address" : "%HOSTGROUP::host_group_1%:8025",
            "yarn.resourcemanager.scheduler.address" : "%HOSTGROUP::host_group_1%:8030",
            "yarn.resourcemanager.scheduler.class" : "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
            "yarn.resourcemanager.scheduler.monitor.enable" : "false",
            "yarn.resourcemanager.state-store.max-completed-applications" : "${yarn.resourcemanager.max-completed-applications}",
            "yarn.resourcemanager.store.class" : "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
            "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size" : "10",
            "yarn.resourcemanager.system-metrics-publisher.enabled" : "true",
            "yarn.resourcemanager.webapp.address" : "%HOSTGROUP::host_group_1%:8088",
            "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled" : "false",
            "yarn.resourcemanager.webapp.https.address" : "%HOSTGROUP::host_group_1%:8090",
            "yarn.resourcemanager.webapp.proxyuser.hcat.groups" : "*",
            "yarn.resourcemanager.webapp.proxyuser.hcat.hosts" : "*",
            "yarn.resourcemanager.webapp.proxyuser.oozie.groups" : "*",
            "yarn.resourcemanager.webapp.proxyuser.oozie.hosts" : "*",
            "yarn.resourcemanager.work-preserving-recovery.enabled" : "true",
            "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms" : "10000",
            "yarn.resourcemanager.zk-acl" : "world:anyone:rwcda",
            "yarn.resourcemanager.zk-address" : "%HOSTGROUP::host_group_1%:2181",
            "yarn.resourcemanager.zk-num-retries" : "1000",
            "yarn.resourcemanager.zk-retry-interval-ms" : "1000",
            "yarn.resourcemanager.zk-state-store.parent-path" : "/rmstore",
            "yarn.resourcemanager.zk-timeout-ms" : "10000",
            "yarn.scheduler.maximum-allocation-mb" : "2250",
            "yarn.scheduler.maximum-allocation-vcores" : "8",
            "yarn.scheduler.minimum-allocation-mb" : "250",
            "yarn.scheduler.minimum-allocation-vcores" : "1",
            "yarn.timeline-service.address" : "%HOSTGROUP::host_group_1%:10200",
            "yarn.timeline-service.bind-host" : "0.0.0.0",
            "yarn.timeline-service.client.max-retries" : "30",
            "yarn.timeline-service.client.retry-interval-ms" : "1000",
            "yarn.timeline-service.enabled" : "true",
            "yarn.timeline-service.entity-group-fs-store.active-dir" : "/ats/active/",
            "yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds" : "3600",
            "yarn.timeline-service.entity-group-fs-store.done-dir" : "/ats/done/",
            "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes" : "org.apache.tez.dag.history.logging.ats.TimelineCachePluginImpl",
            "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath" : "/usr/hdp/${hdp.version}/spark/hdpLib/*",
            "yarn.timeline-service.entity-group-fs-store.retain-seconds" : "604800",
            "yarn.timeline-service.entity-group-fs-store.scan-interval-seconds" : "60",
            "yarn.timeline-service.entity-group-fs-store.summary-store" : "org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore",
            "yarn.timeline-service.generic-application-history.store-class" : "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
            "yarn.timeline-service.http-authentication.proxyuser.root.groups" : "*",
            "yarn.timeline-service.http-authentication.proxyuser.root.hosts" : "sandbox.hortonworks.com",
            "yarn.timeline-service.http-authentication.proxyuser.root.users" : "*",
            "yarn.timeline-service.http-authentication.simple.anonymous.allowed" : "true",
            "yarn.timeline-service.http-authentication.type" : "simple",
            "yarn.timeline-service.leveldb-state-store.path" : "/hadoop/yarn/timeline",
            "yarn.timeline-service.leveldb-timeline-store.path" : "/hadoop/yarn/timeline",
            "yarn.timeline-service.leveldb-timeline-store.read-cache-size" : "104857600",
            "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size" : "10000",
            "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size" : "10000",
            "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms" : "300000",
            "yarn.timeline-service.plugin.enabled" : "true",
            "yarn.timeline-service.recovery.enabled" : "true",
            "yarn.timeline-service.state-store-class" : "org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore",
            "yarn.timeline-service.store-class" : "org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore",
            "yarn.timeline-service.ttl-enable" : "true",
            "yarn.timeline-service.ttl-ms" : "2678400000",
            "yarn.timeline-service.version" : "1.5",
            "yarn.timeline-service.webapp.address" : "%HOSTGROUP::host_group_1%:8188",
            "yarn.timeline-service.webapp.https.address" : "%HOSTGROUP::host_group_1%:8190"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-yarn-security",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "ranger.plugin.yarn.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.yarn.policy.pollIntervalMs" : "30000",
            "ranger.plugin.yarn.policy.rest.ssl.config.file" : "/etc/hadoop/conf/ranger-policymgr-ssl-yarn.xml",
            "ranger.plugin.yarn.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.yarn.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.yarn.service.name" : "{{repo_name}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "yarn-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize=256MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex=20\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\n\n# Appender for viewing information for errors and warnings\nyarn.ewma.cleanupInterval=300\nyarn.ewma.messageAgeLimitSeconds=86400\nyarn.ewma.maxUniqueMessages=250\nlog4j.appender.EWMA=org.apache.hadoop.yarn.util.Log4jWarningErrorMetricsAppender\nlog4j.appender.EWMA.cleanupInterval=${yarn.ewma.cleanupInterval}\nlog4j.appender.EWMA.messageAgeLimitSeconds=${yarn.ewma.messageAgeLimitSeconds}\nlog4j.appender.EWMA.maxUniqueMessages=${yarn.ewma.maxUniqueMessages}\n\n# Audit logging for ResourceManager\nrm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=${rm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=false\nlog4j.appender.RMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.RMAUDIT.File=${yarn.log.dir}/rm-audit.log\nlog4j.appender.RMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.RMAUDIT.DatePattern=.yyyy-MM-dd\n\n# Audit logging for NodeManager\nnm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=${nm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=false\nlog4j.appender.NMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.NMAUDIT.File=${yarn.log.dir}/nm-audit.log\nlog4j.appender.NMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.NMAUDIT.DatePattern=.yyyy-MM-dd"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-yarn-audit",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/yarn/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_1%:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hadoop/yarn/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-yarn-policymgr-ssl",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-yarn-policymgr-ssl:1:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-yarn-policymgr-ssl:1:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380368797,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "YARN",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=YARN&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-yarn-plugin-properties",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "REPOSITORY_CONFIG_PASSWORD" : "SECRET:ranger-yarn-plugin-properties:2:REPOSITORY_CONFIG_PASSWORD",
            "REPOSITORY_CONFIG_USERNAME" : "yarn",
            "common.name.for.certificate" : "",
            "hadoop.rpc.protection" : "",
            "policy_user" : "ambari-qa",
            "ranger-yarn-plugin-enabled" : "Yes"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "capacity-scheduler",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "yarn.scheduler.capacity.default.minimum-user-limit-percent" : "100",
            "yarn.scheduler.capacity.maximum-am-resource-percent" : "0.5",
            "yarn.scheduler.capacity.maximum-applications" : "10000",
            "yarn.scheduler.capacity.node-locality-delay" : "40",
            "yarn.scheduler.capacity.resource-calculator" : "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
            "yarn.scheduler.capacity.root.accessible-node-labels" : "*",
            "yarn.scheduler.capacity.root.acl_administer_queue" : "*",
            "yarn.scheduler.capacity.root.capacity" : "100",
            "yarn.scheduler.capacity.root.default.acl_administer_jobs" : "*",
            "yarn.scheduler.capacity.root.default.acl_submit_applications" : "*",
            "yarn.scheduler.capacity.root.default.capacity" : "100",
            "yarn.scheduler.capacity.root.default.maximum-am-resource-percent" : "0.75",
            "yarn.scheduler.capacity.root.default.maximum-capacity" : "100",
            "yarn.scheduler.capacity.root.default.state" : "RUNNING",
            "yarn.scheduler.capacity.root.default.user-limit-factor" : "1",
            "yarn.scheduler.capacity.root.queues" : "default"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "yarn-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "apptimelineserver_heapsize" : "250",
            "content" : "\n      export HADOOP_YARN_HOME={{hadoop_yarn_home}}\n      export YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\n      export YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\n      export HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n      export JAVA_HOME={{java64_home}}\n      export JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"\n\n      # We need to add the EWMA appender for the yarn daemons only;\n      # however, YARN_ROOT_LOGGER is shared by the yarn client and the\n      # daemons. This is restrict the EWMA appender to daemons only.\n      INVOKER=\"${0##*/}\"\n      if [ \"$INVOKER\" == \"yarn-daemon.sh\" ]; then\n        export YARN_ROOT_LOGGER=${YARN_ROOT_LOGGER:-INFO,EWMA,RFA}\n      fi\n\n      # User for YARN daemons\n      export HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n      # resolve links - $0 may be a softlink\n      export YARN_CONF_DIR=\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\"\n\n      # some Java parameters\n      # export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n      if [ \"$JAVA_HOME\" != \"\" ]; then\n      #echo \"run java in $JAVA_HOME\"\n      JAVA_HOME=$JAVA_HOME\n      fi\n\n      if [ \"$JAVA_HOME\" = \"\" ]; then\n      echo \"Error: JAVA_HOME is not set.\"\n      exit 1\n      fi\n\n      JAVA=$JAVA_HOME/bin/java\n      JAVA_HEAP_MAX=-Xmx1000m\n\n      # For setting YARN specific HEAP sizes please use this\n      # Parameter and set appropriately\n      YARN_HEAPSIZE={{yarn_heapsize}}\n\n      # check envvars which might override default args\n      if [ \"$YARN_HEAPSIZE\" != \"\" ]; then\n      JAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\n      fi\n\n      # Resource Manager specific parameters\n\n      # Specify the max Heapsize for the ResourceManager using a numerical value\n      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n      # the value to 1000.\n      # This value will be overridden by an Xmx setting specified in either YARN_OPTS\n      # and/or YARN_RESOURCEMANAGER_OPTS.\n      # If not specified, the default value will be picked from either YARN_HEAPMAX\n      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\n      export YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n      # Specify the JVM options to be used when starting the ResourceManager.\n      # These options will be appended to the options specified as YARN_OPTS\n      # and therefore may override any similar flags set in YARN_OPTS\n      #export YARN_RESOURCEMANAGER_OPTS=\n\n      # Node Manager specific parameters\n\n      # Specify the max Heapsize for the NodeManager using a numerical value\n      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n      # the value to 1000.\n      # This value will be overridden by an Xmx setting specified in either YARN_OPTS\n      # and/or YARN_NODEMANAGER_OPTS.\n      # If not specified, the default value will be picked from either YARN_HEAPMAX\n      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\n      export YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n      # Specify the max Heapsize for the timeline server using a numerical value\n      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n      # the value to 1024.\n      # This value will be overridden by an Xmx setting specified in either YARN_OPTS\n      # and/or YARN_TIMELINESERVER_OPTS.\n      # If not specified, the default value will be picked from either YARN_HEAPMAX\n      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\n      export YARN_TIMELINESERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n      # Specify the JVM options to be used when starting the NodeManager.\n      # These options will be appended to the options specified as YARN_OPTS\n      # and therefore may override any similar flags set in YARN_OPTS\n      #export YARN_NODEMANAGER_OPTS=\n\n      # so that filenames w/ spaces are handled correctly in loops below\n      IFS=\n\n\n      # default log directory and file\n      if [ \"$YARN_LOG_DIR\" = \"\" ]; then\n      YARN_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\n      fi\n      if [ \"$YARN_LOGFILE\" = \"\" ]; then\n      YARN_LOGFILE='yarn.log'\n      fi\n\n      # default policy file for service-level authorization\n      if [ \"$YARN_POLICYFILE\" = \"\" ]; then\n      YARN_POLICYFILE=\"hadoop-policy.xml\"\n      fi\n\n      # restore ordinary behaviour\n      unset IFS\n\n\n      YARN_OPTS=\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\"\n      YARN_OPTS=\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\n      YARN_OPTS=\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\n      export YARN_NODEMANAGER_OPTS=\"$YARN_NODEMANAGER_OPTS -Dnm.audit.logger=INFO,NMAUDIT\"\n      export YARN_RESOURCEMANAGER_OPTS=\"$YARN_RESOURCEMANAGER_OPTS -Drm.audit.logger=INFO,RMAUDIT\"\n      if [ \"x$JAVA_LIBRARY_PATH\" != \"x\" ]; then\n      YARN_OPTS=\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\"\n      fi\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"\n      YARN_OPTS=\"$YARN_OPTS -Djava.io.tmpdir={{hadoop_java_io_tmpdir}}\"",
            "is_supported_yarn_ranger" : "true",
            "min_user_id" : "500",
            "nodemanager_heapsize" : "512",
            "resourcemanager_heapsize" : "250",
            "service_check.queue.name" : "default",
            "yarn_cgroups_enabled" : "false",
            "yarn_heapsize" : "250",
            "yarn_log_dir_prefix" : "/var/log/hadoop-yarn",
            "yarn_pid_dir_prefix" : "/var/run/hadoop-yarn",
            "yarn_user" : "yarn",
            "yarn_user_nofile_limit" : "32768",
            "yarn_user_nproc_limit" : "65536"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "yarn-site",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "hadoop.registry.rm.enabled" : "true",
            "hadoop.registry.zk.quorum" : "sandbox.hortonworks.com:2181",
            "yarn.acl.enable" : "true",
            "yarn.admin.acl" : "*",
            "yarn.application.classpath" : "$HADOOP_CONF_DIR,/usr/hdp/current/hadoop-client/*,/usr/hdp/current/hadoop-client/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*",
            "yarn.authorization-provider" : "org.apache.ranger.authorization.yarn.authorizer.RangerYarnAuthorizer",
            "yarn.client.nodemanager-connect.max-wait-ms" : "120000",
            "yarn.client.nodemanager-connect.retry-interval-ms" : "10000",
            "yarn.http.policy" : "HTTP_ONLY",
            "yarn.log-aggregation-enable" : "true",
            "yarn.log-aggregation.retain-seconds" : "2592000",
            "yarn.log.server.url" : "http://sandbox.hortonworks.com:19888/jobhistory/logs",
            "yarn.node-labels.enabled" : "false",
            "yarn.node-labels.fs-store.retry-policy-spec" : "2000, 500",
            "yarn.node-labels.fs-store.root-dir" : "/system/yarn/node-labels",
            "yarn.nodemanager.address" : "0.0.0.0:45454",
            "yarn.nodemanager.admin-env" : "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
            "yarn.nodemanager.aux-services" : "mapreduce_shuffle,spark_shuffle,spark2_shuffle",
            "yarn.nodemanager.aux-services.mapreduce_shuffle.class" : "org.apache.hadoop.mapred.ShuffleHandler",
            "yarn.nodemanager.aux-services.spark2_shuffle.class" : "org.apache.spark.network.yarn.YarnShuffleService",
            "yarn.nodemanager.aux-services.spark2_shuffle.classpath" : "/usr/hdp/${hdp.version}/spark2/aux/*",
            "yarn.nodemanager.aux-services.spark_shuffle.class" : "org.apache.spark.network.yarn.YarnShuffleService",
            "yarn.nodemanager.aux-services.spark_shuffle.classpath" : "/usr/hdp/${hdp.version}/spark/aux/*",
            "yarn.nodemanager.bind-host" : "0.0.0.0",
            "yarn.nodemanager.container-executor.class" : "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
            "yarn.nodemanager.container-metrics.unregister-delay-ms" : "60000",
            "yarn.nodemanager.container-monitor.interval-ms" : "3000",
            "yarn.nodemanager.delete.debug-delay-sec" : "0",
            "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage" : "90",
            "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb" : "1000",
            "yarn.nodemanager.disk-health-checker.min-healthy-disks" : "0.25",
            "yarn.nodemanager.health-checker.interval-ms" : "135000",
            "yarn.nodemanager.health-checker.script.timeout-ms" : "120000",
            "yarn.nodemanager.linux-container-executor.cgroups.hierarchy" : "hadoop-yarn",
            "yarn.nodemanager.linux-container-executor.cgroups.mount" : "false",
            "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage" : "false",
            "yarn.nodemanager.linux-container-executor.group" : "hadoop",
            "yarn.nodemanager.linux-container-executor.resources-handler.class" : "org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler",
            "yarn.nodemanager.local-dirs" : "/hadoop/yarn/local",
            "yarn.nodemanager.log-aggregation.compression-type" : "gz",
            "yarn.nodemanager.log-aggregation.debug-enabled" : "false",
            "yarn.nodemanager.log-aggregation.num-log-files-per-app" : "30",
            "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds" : "-1",
            "yarn.nodemanager.log-dirs" : "/hadoop/yarn/log",
            "yarn.nodemanager.log.retain-second" : "604800",
            "yarn.nodemanager.pmem-check-enabled" : "false",
            "yarn.nodemanager.recovery.dir" : "{{yarn_log_dir_prefix}}/nodemanager/recovery-state",
            "yarn.nodemanager.recovery.enabled" : "true",
            "yarn.nodemanager.remote-app-log-dir" : "/app-logs",
            "yarn.nodemanager.remote-app-log-dir-suffix" : "logs",
            "yarn.nodemanager.resource.cpu-vcores" : "8",
            "yarn.nodemanager.resource.memory-mb" : "2250",
            "yarn.nodemanager.resource.percentage-physical-cpu-limit" : "80",
            "yarn.nodemanager.vmem-check-enabled" : "false",
            "yarn.nodemanager.vmem-pmem-ratio" : "10",
            "yarn.resourcemanager.address" : "sandbox.hortonworks.com:8050",
            "yarn.resourcemanager.admin.address" : "sandbox.hortonworks.com:8141",
            "yarn.resourcemanager.am.max-attempts" : "2",
            "yarn.resourcemanager.bind-host" : "0.0.0.0",
            "yarn.resourcemanager.connect.max-wait.ms" : "900000",
            "yarn.resourcemanager.connect.retry-interval.ms" : "30000",
            "yarn.resourcemanager.fs.state-store.retry-policy-spec" : "2000, 500",
            "yarn.resourcemanager.fs.state-store.uri" : " ",
            "yarn.resourcemanager.ha.enabled" : "false",
            "yarn.resourcemanager.hostname" : "sandbox.hortonworks.com",
            "yarn.resourcemanager.nodes.exclude-path" : "/etc/hadoop/conf/yarn.exclude",
            "yarn.resourcemanager.recovery.enabled" : "false",
            "yarn.resourcemanager.resource-tracker.address" : "sandbox.hortonworks.com:8025",
            "yarn.resourcemanager.scheduler.address" : "sandbox.hortonworks.com:8030",
            "yarn.resourcemanager.scheduler.class" : "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
            "yarn.resourcemanager.scheduler.monitor.enable" : "false",
            "yarn.resourcemanager.state-store.max-completed-applications" : "${yarn.resourcemanager.max-completed-applications}",
            "yarn.resourcemanager.store.class" : "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
            "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size" : "10",
            "yarn.resourcemanager.system-metrics-publisher.enabled" : "true",
            "yarn.resourcemanager.webapp.address" : "sandbox.hortonworks.com:8088",
            "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled" : "false",
            "yarn.resourcemanager.webapp.https.address" : "sandbox.hortonworks.com:8090",
            "yarn.resourcemanager.webapp.proxyuser.hcat.groups" : "*",
            "yarn.resourcemanager.webapp.proxyuser.hcat.hosts" : "*",
            "yarn.resourcemanager.webapp.proxyuser.oozie.groups" : "*",
            "yarn.resourcemanager.webapp.proxyuser.oozie.hosts" : "*",
            "yarn.resourcemanager.work-preserving-recovery.enabled" : "true",
            "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms" : "10000",
            "yarn.resourcemanager.zk-acl" : "world:anyone:rwcda",
            "yarn.resourcemanager.zk-address" : "sandbox.hortonworks.com:2181",
            "yarn.resourcemanager.zk-num-retries" : "1000",
            "yarn.resourcemanager.zk-retry-interval-ms" : "1000",
            "yarn.resourcemanager.zk-state-store.parent-path" : "/rmstore",
            "yarn.resourcemanager.zk-timeout-ms" : "10000",
            "yarn.scheduler.maximum-allocation-mb" : "2250",
            "yarn.scheduler.maximum-allocation-vcores" : "8",
            "yarn.scheduler.minimum-allocation-mb" : "250",
            "yarn.scheduler.minimum-allocation-vcores" : "1",
            "yarn.timeline-service.address" : "sandbox.hortonworks.com:10200",
            "yarn.timeline-service.bind-host" : "0.0.0.0",
            "yarn.timeline-service.client.max-retries" : "30",
            "yarn.timeline-service.client.retry-interval-ms" : "1000",
            "yarn.timeline-service.enabled" : "true",
            "yarn.timeline-service.entity-group-fs-store.active-dir" : "/ats/active/",
            "yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds" : "3600",
            "yarn.timeline-service.entity-group-fs-store.done-dir" : "/ats/done/",
            "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes" : "org.apache.tez.dag.history.logging.ats.TimelineCachePluginImpl",
            "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath" : "/usr/hdp/${hdp.version}/spark/hdpLib/*",
            "yarn.timeline-service.entity-group-fs-store.retain-seconds" : "604800",
            "yarn.timeline-service.entity-group-fs-store.scan-interval-seconds" : "60",
            "yarn.timeline-service.entity-group-fs-store.summary-store" : "org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore",
            "yarn.timeline-service.generic-application-history.store-class" : "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
            "yarn.timeline-service.http-authentication.proxyuser.root.groups" : "*",
            "yarn.timeline-service.http-authentication.proxyuser.root.hosts" : "sandbox.hortonworks.com",
            "yarn.timeline-service.http-authentication.proxyuser.root.users" : "*",
            "yarn.timeline-service.http-authentication.simple.anonymous.allowed" : "true",
            "yarn.timeline-service.http-authentication.type" : "simple",
            "yarn.timeline-service.leveldb-state-store.path" : "/hadoop/yarn/timeline",
            "yarn.timeline-service.leveldb-timeline-store.path" : "/hadoop/yarn/timeline",
            "yarn.timeline-service.leveldb-timeline-store.read-cache-size" : "104857600",
            "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size" : "10000",
            "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size" : "10000",
            "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms" : "300000",
            "yarn.timeline-service.plugin.enabled" : "true",
            "yarn.timeline-service.recovery.enabled" : "true",
            "yarn.timeline-service.state-store-class" : "org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore",
            "yarn.timeline-service.store-class" : "org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore",
            "yarn.timeline-service.ttl-enable" : "true",
            "yarn.timeline-service.ttl-ms" : "2678400000",
            "yarn.timeline-service.version" : "1.5",
            "yarn.timeline-service.webapp.address" : "sandbox.hortonworks.com:8188",
            "yarn.timeline-service.webapp.https.address" : "sandbox.hortonworks.com:8190"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-yarn-security",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "ranger.plugin.yarn.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
            "ranger.plugin.yarn.policy.pollIntervalMs" : "30000",
            "ranger.plugin.yarn.policy.rest.ssl.config.file" : "/etc/hadoop/conf/ranger-policymgr-ssl-yarn.xml",
            "ranger.plugin.yarn.policy.rest.url" : "{{policymgr_mgr_url}}",
            "ranger.plugin.yarn.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
            "ranger.plugin.yarn.service.name" : "{{repo_name}}"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "yarn-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize=256MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex=20\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\n\n# Appender for viewing information for errors and warnings\nyarn.ewma.cleanupInterval=300\nyarn.ewma.messageAgeLimitSeconds=86400\nyarn.ewma.maxUniqueMessages=250\nlog4j.appender.EWMA=org.apache.hadoop.yarn.util.Log4jWarningErrorMetricsAppender\nlog4j.appender.EWMA.cleanupInterval=${yarn.ewma.cleanupInterval}\nlog4j.appender.EWMA.messageAgeLimitSeconds=${yarn.ewma.messageAgeLimitSeconds}\nlog4j.appender.EWMA.maxUniqueMessages=${yarn.ewma.maxUniqueMessages}\n\n# Audit logging for ResourceManager\nrm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=${rm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=false\nlog4j.appender.RMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.RMAUDIT.File=${yarn.log.dir}/rm-audit.log\nlog4j.appender.RMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.RMAUDIT.DatePattern=.yyyy-MM-dd\n\n# Audit logging for NodeManager\nnm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=${nm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=false\nlog4j.appender.NMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.NMAUDIT.File=${yarn.log.dir}/nm-audit.log\nlog4j.appender.NMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.NMAUDIT.DatePattern=.yyyy-MM-dd"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-yarn-audit",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.audit.destination.hdfs" : "true",
            "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/yarn/audit/hdfs/spool",
            "xasecure.audit.destination.hdfs.dir" : "hdfs://sandbox.hortonworks.com:8020/ranger/audit",
            "xasecure.audit.destination.solr" : "true",
            "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hadoop/yarn/audit/solr/spool",
            "xasecure.audit.destination.solr.urls" : "NONE",
            "xasecure.audit.destination.solr.zookeepers" : "sandbox.hortonworks.com:2181/infra-solr",
            "xasecure.audit.is.enabled" : "true",
            "xasecure.audit.provider.summary.enabled" : "false"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "ranger-yarn-policymgr-ssl",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-keystore.jks",
            "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.keystore.password" : "SECRET:ranger-yarn-policymgr-ssl:2:xasecure.policymgr.clientssl.keystore.password",
            "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-truststore.jks",
            "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}",
            "xasecure.policymgr.clientssl.truststore.password" : "SECRET:ranger-yarn-policymgr-ssl:2:xasecure.policymgr.clientssl.truststore.password"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380378938,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "YARN",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=ZEPPELIN&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "zeppelin-config",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "zeppelin.anonymous.allowed" : "true",
            "zeppelin.interpreter.connect.timeout" : "30000",
            "zeppelin.interpreter.dir" : "interpreter",
            "zeppelin.interpreters" : "org.apache.zeppelin.spark.SparkInterpreter,org.apache.zeppelin.spark.PySparkInterpreter,org.apache.zeppelin.spark.SparkSqlInterpreter,org.apache.zeppelin.spark.DepInterpreter,org.apache.zeppelin.markdown.Markdown,org.apache.zeppelin.angular.AngularInterpreter,org.apache.zeppelin.shell.ShellInterpreter,org.apache.zeppelin.jdbc.JDBCInterpreter,org.apache.zeppelin.phoenix.PhoenixInterpreter,org.apache.zeppelin.livy.LivySparkInterpreter,org.apache.zeppelin.livy.LivyPySparkInterpreter,org.apache.zeppelin.livy.LivySparkRInterpreter,org.apache.zeppelin.livy.LivySparkSQLInterpreter",
            "zeppelin.notebook.dir" : "notebook",
            "zeppelin.notebook.homescreen" : " ",
            "zeppelin.notebook.homescreen.hide" : "false",
            "zeppelin.notebook.s3.bucket" : "zeppelin",
            "zeppelin.notebook.s3.user" : "user",
            "zeppelin.notebook.storage" : "org.apache.zeppelin.notebook.repo.VFSNotebookRepo",
            "zeppelin.server.addr" : "0.0.0.0",
            "zeppelin.server.allowed.origins" : "*",
            "zeppelin.server.port" : "9995",
            "zeppelin.ssl" : "false",
            "zeppelin.ssl.client.auth" : "false",
            "zeppelin.ssl.key.manager.password" : "change me",
            "zeppelin.ssl.keystore.password" : "change me",
            "zeppelin.ssl.keystore.path" : "conf/keystore",
            "zeppelin.ssl.keystore.type" : "JKS",
            "zeppelin.ssl.truststore.password" : "change me",
            "zeppelin.ssl.truststore.path" : "conf/truststore",
            "zeppelin.ssl.truststore.type" : "JKS",
            "zeppelin.websocket.max.text.message.size" : "1024000"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "zeppelin-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "log4j_properties_content" : "\nlog4j.rootLogger = INFO, dailyfile\nlog4j.appender.stdout = org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout = org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%5p [%d] ({%t} %F[%M]:%L) - %m%n\nlog4j.appender.dailyfile.DatePattern=.yyyy-MM-dd\nlog4j.appender.dailyfile.Threshold = INFO\nlog4j.appender.dailyfile = org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.dailyfile.File = ${zeppelin.log.file}\nlog4j.appender.dailyfile.layout = org.apache.log4j.PatternLayout\nlog4j.appender.dailyfile.layout.ConversionPattern=%5p [%d] ({%t} %F[%M]:%L) - %m%n",
            "shiro_ini_content" : "\n[users]\n# List of users with their password allowed to access Zeppelin.\n# To use a different strategy (LDAP / Database / ...) check the shiro doc at http://shiro.apache.org/configuration.html#Configuration-INISections\n#admin = password1\n#user1 = password2, role1, role2\n#user2 = password3, role3\n#user3 = password4, role2\n\n# Sample LDAP configuration, for user Authentication, currently tested for single Realm\n[main]\n#activeDirectoryRealm = org.apache.zeppelin.server.ActiveDirectoryGroupRealm\n#activeDirectoryRealm.systemUsername = CN=Administrator,CN=Users,DC=HW,DC=EXAMPLE,DC=COM\n#activeDirectoryRealm.systemPassword = Password1!\n#activeDirectoryRealm.hadoopSecurityCredentialPath = jceks://user/zeppelin/zeppelin.jceks\n#activeDirectoryRealm.searchBase = CN=Users,DC=HW,DC=TEST,DC=COM\n#activeDirectoryRealm.url = ldap://ad-nano.test.example.com:389\n#activeDirectoryRealm.groupRolesMap = \"\"\n#activeDirectoryRealm.authorizationCachingEnabled = true\n\n#ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm\n#ldapRealm.userDnTemplate = uid={0},cn=users,cn=accounts,dc=example,dc=com\n#ldapRealm.contextFactory.url = ldap://ldaphost:389\n#ldapRealm.contextFactory.authenticationMechanism = SIMPLE\n#sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager\n#securityManager.sessionManager = $sessionManager\n# 86,400,000 milliseconds = 24 hour\n#securityManager.sessionManager.globalSessionTimeout = 86400000\nshiro.loginUrl = /api/login\n\n[urls]\n# anon means the access is anonymous.\n# authcBasic means Basic Auth Security\n# To enfore security, comment the line below and uncomment the next one\n/api/version = anon\n/** = anon\n#/** = authc",
            "zeppelin.executor.instances" : "2",
            "zeppelin.executor.mem" : "512m",
            "zeppelin.server.kerberos.keytab" : "",
            "zeppelin.server.kerberos.principal" : "",
            "zeppelin.spark.jar.dir" : "/apps/zeppelin",
            "zeppelin_env_content" : "\n# Spark master url. eg. spark://master_addr:7077. Leave empty if you want to use local mode\nexport MASTER=yarn-client\nexport SPARK_YARN_JAR={{spark_jar}}\n\n\n# Where log files are stored.  PWD by default.\nexport ZEPPELIN_LOG_DIR={{zeppelin_log_dir}}\n\n# The pid files are stored. /tmp by default.\nexport ZEPPELIN_PID_DIR={{zeppelin_pid_dir}}\n\n\nexport JAVA_HOME={{java64_home}}\n\n# Additional jvm options. for example, export ZEPPELIN_JAVA_OPTS=\"-Dspark.executor.memory=8g -Dspark.cores.max=16\"\nexport ZEPPELIN_JAVA_OPTS=\"-Dhdp.version={{full_stack_version}} -Dspark.executor.memory={{executor_mem}} -Dspark.executor.instances={{executor_instances}} -Dspark.yarn.queue={{spark_queue}}\"\n\n\n# Zeppelin jvm mem options Default -Xmx1024m -XX:MaxPermSize=512m\n# export ZEPPELIN_MEM\n\n# zeppelin interpreter process jvm mem options. Defualt = ZEPPELIN_MEM\n# export ZEPPELIN_INTP_MEM\n\n# zeppelin interpreter process jvm options. Default = ZEPPELIN_JAVA_OPTS\n# export ZEPPELIN_INTP_JAVA_OPTS\n\n# Where notebook saved\n# export ZEPPELIN_NOTEBOOK_DIR\n\n# Id of notebook to be displayed in homescreen. ex) 2A94M5J1Z\n# export ZEPPELIN_NOTEBOOK_HOMESCREEN\n\n# hide homescreen notebook from list when this value set to \"true\". default \"false\"\n# export ZEPPELIN_NOTEBOOK_HOMESCREEN_HIDE\n\n# Bucket where notebook saved\n# export ZEPPELIN_NOTEBOOK_S3_BUCKET\n\n# User in bucket where notebook saved. For example bucket/user/notebook/2A94M5J1Z/note.json\n# export ZEPPELIN_NOTEBOOK_S3_USER\n\n# A string representing this instance of zeppelin. $USER by default\n# export ZEPPELIN_IDENT_STRING\n\n# The scheduling priority for daemons. Defaults to 0.\n# export ZEPPELIN_NICENESS\n\n\n#### Spark interpreter configuration ####\n\n## Use provided spark installation ##\n## defining SPARK_HOME makes Zeppelin run spark interpreter process using spark-submit\n##\n# (required) When it is defined, load it instead of Zeppelin embedded Spark libraries\nexport SPARK_HOME={{spark_home}}\n\n# (optional) extra options to pass to spark submit. eg) \"--driver-memory 512M --executor-memory 1G\".\n# export SPARK_SUBMIT_OPTIONS\n\n## Use embedded spark binaries ##\n## without SPARK_HOME defined, Zeppelin still able to run spark interpreter process using embedded spark binaries.\n## however, it is not encouraged when you can define SPARK_HOME\n##\n# Options read in YARN client mode\n# yarn-site.xml is located in configuration directory in HADOOP_CONF_DIR.\nexport HADOOP_CONF_DIR=/etc/hadoop/conf\n\n# Pyspark (supported with Spark 1.2.1 and above)\n# To configure pyspark, you need to set spark distribution's path to 'spark.home' property in Interpreter setting screen in Zeppelin GUI\n# path to the python command. must be the same path on the driver(Zeppelin) and all workers.\n# export PYSPARK_PYTHON\n\nexport PYTHONPATH=\"${SPARK_HOME}/python:${SPARK_HOME}/python/lib/py4j-0.8.2.1-src.zip\"\nexport SPARK_YARN_USER_ENV=\"PYTHONPATH=${PYTHONPATH}\"\n\n## Spark interpreter options ##\n##\n# Use HiveContext instead of SQLContext if set true. true by default.\n# export ZEPPELIN_SPARK_USEHIVECONTEXT\n\n# Execute multiple SQL concurrently if set true. false by default.\n# export ZEPPELIN_SPARK_CONCURRENTSQL\n\n# Max number of SparkSQL result to display. 1000 by default.\n# export ZEPPELIN_SPARK_MAXRESULT",
            "zeppelin_group" : "zeppelin",
            "zeppelin_log_dir" : "/var/log/zeppelin",
            "zeppelin_pid_dir" : "/var/run/zeppelin",
            "zeppelin_user" : "zeppelin"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380374682,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "ZEPPELIN",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=ZOOKEEPER&service_config_version=1",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "zoo.cfg",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "autopurge.purgeInterval" : "24",
            "autopurge.snapRetainCount" : "30",
            "clientPort" : "2181",
            "dataDir" : "/hadoop/zookeeper",
            "initLimit" : "10",
            "syncLimit" : "5",
            "tickTime" : "2000"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "zookeeper-env",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}",
            "zk_log_dir" : "/var/log/zookeeper",
            "zk_pid_dir" : "/var/run/zookeeper",
            "zk_server_heapsize" : "1024",
            "zk_user" : "zookeeper"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "zookeeper-log4j",
          "tag" : "INITIAL",
          "version" : 1,
          "properties" : {
            "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File=zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize=10MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex=10\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380368563,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : false,
      "service_config_version" : 1,
      "service_config_version_note" : null,
      "service_name" : "ZOOKEEPER",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/configurations/service_config_versions?service_name=ZOOKEEPER&service_config_version=2",
      "cluster_name" : "Sandbox",
      "configurations" : [
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "zoo.cfg",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "autopurge.purgeInterval" : "24",
            "autopurge.snapRetainCount" : "30",
            "clientPort" : "2181",
            "dataDir" : "/hadoop/zookeeper",
            "initLimit" : "10",
            "syncLimit" : "5",
            "tickTime" : "2000"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "zookeeper-env",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}",
            "zk_log_dir" : "/var/log/zookeeper",
            "zk_pid_dir" : "/var/run/zookeeper",
            "zk_server_heapsize" : "1024m",
            "zk_user" : "zookeeper"
          },
          "properties_attributes" : { }
        },
        {
          "Config" : {
            "cluster_name" : "Sandbox",
            "stack_id" : "HDP-2.5"
          },
          "type" : "zookeeper-log4j",
          "tag" : "TOPOLOGY_RESOLVED",
          "version" : 2,
          "properties" : {
            "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File=zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize=10MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex=10\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"
          },
          "properties_attributes" : { }
        }
      ],
      "createtime" : 1477380378771,
      "group_id" : -1,
      "group_name" : "Default",
      "hosts" : [ ],
      "is_cluster_compatible" : true,
      "is_current" : true,
      "service_config_version" : 2,
      "service_config_version_note" : null,
      "service_name" : "ZOOKEEPER",
      "stack_id" : "HDP-2.5",
      "user" : "admin"
    }
  ],
  "alert_definitions" : [
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/1",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 1,
        "label" : "History Server Process",
        "name" : "mapreduce_history_server_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/2",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 2,
        "label" : "History Server Web UI",
        "name" : "mapreduce_history_server_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/3",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 3,
        "label" : "History Server RPC Latency",
        "name" : "mapreduce_history_server_rpc_latency"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/4",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 4,
        "label" : "History Server CPU Utilization",
        "name" : "mapreduce_history_server_cpu"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/5",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 5,
        "label" : "Falcon Server Web UI",
        "name" : "falcon_server_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/6",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 6,
        "label" : "Falcon Server Process",
        "name" : "falcon_server_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/7",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 7,
        "label" : "Metrics Monitor Status",
        "name" : "ams_metrics_monitor_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/8",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 8,
        "label" : "Metrics Collector Process",
        "name" : "ams_metrics_collector_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/9",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 9,
        "label" : "Metrics Collector - HBase Master Process",
        "name" : "ams_metrics_collector_hbase_master_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/10",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 10,
        "label" : "Metrics Collector - HBase Master CPU Utilization",
        "name" : "ams_metrics_collector_hbase_master_cpu"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/11",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 11,
        "label" : "Percent Metrics Monitors Available",
        "name" : "metrics_monitor_process_percent"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/12",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 12,
        "label" : "Metrics Collector - Auto-Restart Status",
        "name" : "ams_metrics_collector_autostart"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/13",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 13,
        "label" : "Grafana Web UI",
        "name" : "grafana_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/14",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 14,
        "label" : "Metadata Server Web UI",
        "name" : "metadata_server_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/15",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 15,
        "label" : "HBase Master Process",
        "name" : "hbase_master_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/16",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 16,
        "label" : "HBase Master CPU Utilization",
        "name" : "hbase_master_cpu"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/17",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 17,
        "label" : "Percent RegionServers Available",
        "name" : "hbase_regionserver_process_percent"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/18",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 18,
        "label" : "HBase RegionServer Process",
        "name" : "hbase_regionserver_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/19",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 19,
        "label" : "Ranger Admin Process",
        "name" : "ranger_admin_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/20",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 20,
        "label" : "Ranger Admin password check",
        "name" : "ranger_admin_password_check"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/21",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 21,
        "label" : "Ranger Usersync Process",
        "name" : "ranger_usersync_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/22",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 22,
        "label" : "Hive Metastore Process",
        "name" : "hive_metastore_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/23",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 23,
        "label" : "HiveServer2 Interactive Process",
        "name" : "hive_server_interactive_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/24",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 24,
        "label" : "LLAP Application",
        "name" : "llap_application"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/25",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 25,
        "label" : "HiveServer2 Process",
        "name" : "hive_server_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/26",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 26,
        "label" : "WebHCat Server Status",
        "name" : "hive_webhcat_server_status"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/27",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 27,
        "label" : "NameNode Host CPU Utilization",
        "name" : "namenode_cpu"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/28",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 28,
        "label" : "Secondary NameNode Process",
        "name" : "secondary_namenode_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/29",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 29,
        "label" : "HDFS Pending Deletion Blocks",
        "name" : "namenode_hdfs_pending_deletion_blocks"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/30",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 30,
        "label" : "NameNode Client RPC Queue Latency (Daily)",
        "name" : "namenode_client_rpc_queue_latency_daily"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/31",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 31,
        "label" : "NameNode High Availability Health",
        "name" : "namenode_ha_health"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/32",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 32,
        "label" : "DataNode Heap Usage",
        "name" : "datanode_heap_usage"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/33",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 33,
        "label" : "DataNode Health Summary",
        "name" : "datanode_health_summary"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/34",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 34,
        "label" : "DataNode Unmounted Data Dir",
        "name" : "datanode_unmounted_data_dir"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/35",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 35,
        "label" : "NameNode Service RPC Queue Latency (Daily)",
        "name" : "namenode_service_rpc_queue_latency_daily"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/36",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 36,
        "label" : "DataNode Process",
        "name" : "datanode_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/37",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 37,
        "label" : "NameNode Client RPC Processing Latency (Daily)",
        "name" : "namenode_client_rpc_processing_latency_daily"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/38",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 38,
        "label" : "NameNode Blocks Health",
        "name" : "namenode_hdfs_blocks_health"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/39",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 39,
        "label" : "NameNode Web UI",
        "name" : "namenode_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/40",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 40,
        "label" : "DataNode Web UI",
        "name" : "datanode_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/41",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 41,
        "label" : "DataNode Storage",
        "name" : "datanode_storage"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/42",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 42,
        "label" : "NameNode Service RPC Processing Latency (Hourly)",
        "name" : "namenode_service_rpc_processing_latency_hourly"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/43",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 43,
        "label" : "NFS Gateway Process",
        "name" : "nfsgateway_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/44",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 44,
        "label" : "Percent JournalNodes Available",
        "name" : "journalnode_process_percent"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/45",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 45,
        "label" : "HDFS Storage Capacity Usage (Daily)",
        "name" : "namenode_increase_in_storage_capacity_usage_daily"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/46",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 46,
        "label" : "NameNode Client RPC Queue Latency (Hourly)",
        "name" : "namenode_client_rpc_queue_latency_hourly"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/47",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 47,
        "label" : "Percent DataNodes With Available Space",
        "name" : "datanode_storage_percent"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/48",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 48,
        "label" : "NameNode Service RPC Processing Latency (Daily)",
        "name" : "namenode_service_rpc_processing_latency_daily"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/49",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 49,
        "label" : "HDFS Upgrade Finalized State",
        "name" : "upgrade_finalized_state"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/50",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 50,
        "label" : "NameNode Client RPC Processing Latency (Hourly)",
        "name" : "namenode_client_rpc_processing_latency_hourly"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/51",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 51,
        "label" : "HDFS Storage Capacity Usage (Weekly)",
        "name" : "namenode_increase_in_storage_capacity_usage_weekly"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/52",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 52,
        "label" : "JournalNode Web UI",
        "name" : "journalnode_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/53",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 53,
        "label" : "ZooKeeper Failover Controller Process",
        "name" : "hdfs_zookeeper_failover_controller_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/54",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 54,
        "label" : "NameNode Directory Status",
        "name" : "namenode_directory_status"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/55",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 55,
        "label" : "NameNode Service RPC Queue Latency (Hourly)",
        "name" : "namenode_service_rpc_queue_latency_hourly"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/56",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 56,
        "label" : "NameNode Heap Usage (Weekly)",
        "name" : "increase_nn_heap_usage_weekly"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/57",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 57,
        "label" : "Percent DataNodes Available",
        "name" : "datanode_process_percent"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/58",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 58,
        "label" : "HDFS Capacity Utilization",
        "name" : "namenode_hdfs_capacity_utilization"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/59",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 59,
        "label" : "NameNode RPC Latency",
        "name" : "namenode_rpc_latency"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/60",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 60,
        "label" : "NameNode Last Checkpoint",
        "name" : "namenode_last_checkpoint"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/61",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 61,
        "label" : "NameNode Heap Usage (Daily)",
        "name" : "increase_nn_heap_usage_daily"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/62",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 62,
        "label" : "Knox Gateway Process",
        "name" : "knox_gateway_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/63",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 63,
        "label" : "Spark History Server",
        "name" : "SPARK_JOBHISTORYSERVER_PROCESS"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/64",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 64,
        "label" : "Zeppelin Server Status",
        "name" : "zeppelin_server_status"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/65",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 65,
        "label" : "Oozie Server Web UI",
        "name" : "oozie_server_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/66",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 66,
        "label" : "Oozie Server Status",
        "name" : "oozie_server_status"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/67",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 67,
        "label" : "Percent NodeManagers Available",
        "name" : "yarn_nodemanager_webui_percent"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/68",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 68,
        "label" : "NodeManager Health",
        "name" : "yarn_nodemanager_health"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/69",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 69,
        "label" : "ResourceManager Web UI",
        "name" : "yarn_resourcemanager_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/70",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 70,
        "label" : "ResourceManager CPU Utilization",
        "name" : "yarn_resourcemanager_cpu"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/71",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 71,
        "label" : "NodeManager Web UI",
        "name" : "yarn_nodemanager_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/72",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 72,
        "label" : "ResourceManager RPC Latency",
        "name" : "yarn_resourcemanager_rpc_latency"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/73",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 73,
        "label" : "NodeManager Health Summary",
        "name" : "nodemanager_health_summary"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/74",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 74,
        "label" : "App Timeline Web UI",
        "name" : "yarn_app_timeline_server_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/75",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 75,
        "label" : "Percent Supervisors Available",
        "name" : "storm_supervisor_process_percent"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/76",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 76,
        "label" : "Storm Server Process",
        "name" : "storm_server_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/77",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 77,
        "label" : "Storm Web UI",
        "name" : "storm_webui"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/78",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 78,
        "label" : "Supervisor Process",
        "name" : "storm_supervisor_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/79",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 79,
        "label" : "Nimbus Process",
        "name" : "storm_nimbus_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/80",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 80,
        "label" : "DRPC Server Process",
        "name" : "storm_drpc_server"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/81",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 81,
        "label" : "Infra Solr Web UI",
        "name" : "infra_solr"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/82",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 82,
        "label" : "Flume Agent Status",
        "name" : "flume_agent_status"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/83",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 83,
        "label" : "Percent ZooKeeper Servers Available",
        "name" : "zookeeper_server_process_percent"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/84",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 84,
        "label" : "ZooKeeper Server Process",
        "name" : "zookeeper_server_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/85",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 85,
        "label" : "Kafka Broker Process",
        "name" : "kafka_broker_process"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/86",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 86,
        "label" : "Host Disk Usage",
        "name" : "ambari_agent_disk_usage"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/87",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 87,
        "label" : "Ambari Agent Heartbeat",
        "name" : "ambari_server_agent_heartbeat"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/88",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 88,
        "label" : "Ambari Server Performance",
        "name" : "ambari_server_performance"
      }
    },
    {
      "href" : "http://192.168.109.131:8080/api/v1/clusters/Sandbox/alert_definitions/89",
      "AlertDefinition" : {
        "cluster_name" : "Sandbox",
        "id" : 89,
        "label" : "Ambari Server Alerts",
        "name" : "ambari_server_stale_alerts"
      }
    }
  ],
  "artifacts" : [ ]
}